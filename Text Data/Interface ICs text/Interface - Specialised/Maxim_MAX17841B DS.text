                                                                                                         EVALUATION KIT AVAILABLE
MAX17841B                                             Automotive SPI Communication Interface (ASCI)
General Description                                                    Benefits and Features
The MAX17841B ASCI combines an SPI port with                           ● Supports Maxim’s Battery Management UART
a universal asynchronous receiver transmitter (UART)                       Protocol
specially designed to interface with Maxim battery                     ● SPI Interface Up to 4MHz
management devices.
                                                                       ● UART Baud Rate Programmable Up to 2Mbps
The UART can be configured to automatically
perform Manchester encoding/decoding, message framing,                 ● 3.3V or 5V Operation
parity, wake-up, and keep-alive signaling as required for              ● Ultra-Low Quiescent Current
Maxim’s battery management UART protocol.                              ● Transmit and Receive Buffers with Programmable
The UART has programmable baud rates of 0.5Mbps,                           Interrupts Allow for Queuing of UART Messages
1Mbps, or 2Mbps and supports either single-ended or                    ● Manchester Encoder and Decoder Reduces Host
differential signaling. For host efficiency, the UART                      Controller Burden
contains a 28-byte transmit buffer and a 62-byte receive
                                                                       ● Operating Temperature Range from -40°C to +105°C
buffer with host-configurable interrupt events.
                                                                           (AEC-Q100 Type 2)
Applications                                                           ● Supports ASIL Requirements
● Battery Management Systems (BMS)
                                                                       Ordering Information appears at end of data sheet.
● Electric and Hybrid Vehicles (EV/HEV)
● Energy Storage Systems (ESS)
Simplified Operating Circuit
                                                                       VAA               MASTER    SLAVE(S)
                     5V DC          VCC
                                                   DCIN           VDDL
                    SUPPLY
                                               VAA                         1µF
                             0.1µF                 VAA            GNDL
                                           1µF
                                                   AGND                               ISOLATORS
                                                                                1.5kΩ
                                               VCC                 RXP
                                                                                                         MAX178xx
                                                        MAX17841B          15pF
                                                                                                    TXPL
                                         100kΩ                                                      TXNL
                                                                                1.5kΩ
                              MISO                 DOUT            RXN                                    BATTERY
                              MOSI                 DIN                     15pF                        MANAGEMENT
                              SCLK                 SCLK                                                    DEVICE
                                 SS                CS                            47Ω
                                               VCC
                                                                   TXP
                        SYSTEM
                          µP                                                                        RXPL
                                         100kΩ
                                                                                                    RXNL
                                                                                 47Ω
                                IRQ                INT             TXN
                                        100Ω
                              GPIO                 SHDN
                                        0.01µF
19-6790; Rev 2; 1/15


MAX17841B                                                                    Automotive SPI Communication Interface (ASCI)
Absolute Maximum Ratings
DCIN to AGND.........................................................-0.3V to +6V                     Maximum Continuous Current into Any Pin........................20mA
VAA to AGND...........................................................-0.3V to +4V                    Maximum Average Power for ESD Diodes (Note 1)..... 14.4/√τW
VDDL to GNDL..........................................................-0.3V to +4V                    Continuous Power Dissipation
AGND to GNDL......................................................-0.3V to +0.3V                          On Multilayer Board (TA = +70°C)
TXP, TXN to GNDL.................................. -0.3V to (VDDL + 0.3V)                                 16 TSSOP (derate 11.1mW/ºC above +70ºC)..............889mW
DOUT to GNDL...................................... -0.3V to (VDCIN + 0.3V)                            Operating Temperature Range.......................... -40°C to +105°C
CTG to AGND............................................................-0.3V to +8V                   Storage Temperature Range............................. -55°C to +150°C
SHDN to AGND...................................... -0.3V to (VDCIN + 0.3V)                            Junction Temperature (Continuous).................................+150°C
CS, DIN, SCLK, INT to GNDL..................................-0.3V to +6V                              Soldering Lead Temperature for 10s................................ +300°C
RXP, RXN to GNDL.................................................-30V to +30V
Note 1: Average power for time period τ where τ is the time constant (in µs) of the transient diode current during a hot-plug event.
             For, example, if τ is 330µs, the maximum average power is 0.793W. Peak current must never exceed 2A. Actual average
             power during hot-plug must be calculated from the diode current waveform for the application circuit and compared to the
             maximum rating.
Stresses beyond those listed under “Absolute Maximum Ratings” may cause permanent damage to the device. These are stress ratings only, and functional operation of the device at these
or any other conditions beyond those indicated in the operational sections of the specifications is not implied. Exposure to absolute maximum rating conditions for extended periods may affect
device reliability.
Electrical Characteristics
(VDCIN = 5V, VAA = VDDL = 3.3V, TA = TMIN to TMAX, unless otherwise noted, where TMIN = -40°C and TMAX = +105°C. Typical values
are at TA = +25°C. Operation is with the recommended application circuit.)
                 PARAMETER                            SYMBOL                                  CONDITIONS                                   MIN         TYP            MAX          UNITS
 POWER REQUIREMENTS
                                                                         VDCIN = VAA = VDDL = 3.3V nominal                                  3.1         3.3             3.5
 Supply Voltage                                         VDCIN                                                                                                                         V
                                                                         VDCIN = 5V nominal; VAA = VDDL                                     4.5         5.0             5.5
                                                                                                   VDCIN = VAA = 3.3V                                    4              10
                                                    ISHUTDOWN VSHDN = 0V                                                                                                              µA
                                                                                                   VDCIN = 5V                                            1              10
                                                     ISTANDBY            SHDN high, fSCLK = 0, fUART = 0                                    1.0         2.3             5.0
 Supply Current
                                                                         Continuous SPI writes at 4MHz, 50pF                                                                         mA
                                                       IACTIVE           TXP load, 50pF TXN load, fUART =                                   1.0          4               6
                                                                         2Mbps, Transmit Preambles mode
 REGULATOR
                                                                         0mA < IVAA < 10mA,
 Output Voltage                                          VAA                                                                               3.13        3.30            3.46           V
                                                                         4.5V < VDCIN < 5.5V
 Short-Circuit Current                                  IAASC            VAA = AGND                                                        13.0        26.0           120.0          mA
                                                     VAARESET            VAA falling                                                        2.8         2.9             3.0
 POR Threshold                                                                                                                                                                        V
                                                      VAAVALID           VAA rising                                                         2.9         3.0             3.1
 POR Hysteresis                                       VAAHYS                                                                                           40.0            100           mV
 LOGIC INPUTS (SHDN, CS, DIN, SCLK)
 Pulldown Resistance (CS)                                RCS             VCS = 5V                                                           5.5         12             28.8          MΩ
 Pulldown Resistance (SHDN)                            RSHDN             VSHDN = 5V                                                        0.75         1.5             3.0          MΩ
 Input Leakage Current (DIN,
                                                         ILKG            VDIN, VSCLK = 0V                                                  -1.0                        +1.0           µA
 SCLK)
 Input Low Threshold                                      VIL                                                                                                  0.3 x VDCIN            V
 Input High Threshold                                     VIH                                                                           0.7 x VDCIN                                   V
www.maximintegrated.com                                                                                                                                           Maxim Integrated │ 2


MAX17841B                                          Automotive SPI Communication Interface (ASCI)
Electrical Characteristics (continued)
(VDCIN = 5V, VAA = VDDL = 3.3V, TA = TMIN to TMAX, unless otherwise noted, where TMIN = -40°C and TMAX = +105°C. Typical values
are at TA = +25°C. Operation is with the recommended application circuit.)
           PARAMETER                 SYMBOL                   CONDITIONS                     MIN    TYP      MAX      UNITS
 LOGIC OUTPUTS (DOUT, INT)
 Output Leakage Current                  ILKG   VDOUT = 0 and 5V, VINT = 5V                  -1.0            +1.0        µA
                                                                                                           VGNDL +
 Output Low Voltage                       VOL   IOL = -2mA                                                                V
                                                                                                              0.4
                                                                                            VDCIN
 Output High Voltage (DOUT)              VOH    IOH = 2mA                                                                 V
                                                                                             - 0.4
 POWER AND GROUND FAULT DETECTION
 Open Detection Voltage (VDDL)      VVDDLALRT   VAA = 3.3V                                    2.8    3.0                  V
 Open Detection Voltage (GNDL)      VGNDLALRT   VAGND = 0V                                          0.13     0.25         V
 Open Detection Voltage (AGND)      VAGNDALRT VGNDL = 0V                                            0.13     0.25         V
 UART INPUTS (RXP, RXN)
                                                                                           VGNDL            VGNDL
 RXP Input Voltage                      VRXP                                                                              V
                                                                                             - 28            + 28
                                                                                           VGNDL            VGNDL
 RXN Input Voltage                      VRXN                                                                              V
                                                                                             - 28            + 28
                                                                                           VDDL/2
                                                                                                           VDDL/2 +
 Differential Input High Threshold       VTH    (Note 2)                                   -       VDDL/2                 V
                                                                                                            400mV
                                                                                           400mV
 Differential Input Zero-Crossing
                                         VZC    (Note 2)                                     -400     0      +400        mV
 Threshold
                                                                                           -VDDL/
                                                                                                   -VDDL/ -VDDL/2
 Differential Input Low Threshold         VTL   (Note 2)                                      2-                          V
                                                                                                      2    + 400mV
                                                                                           400mV
 Differential Input Hysteresis         VHYST    (Note 2)                                       25    75       150        mV
                                                                                           VDDL/3           VDDL/3
 Common-Mode Voltage Bias                VCM                                                       VDDL/3                 V
                                                                                             - 0.1           + 0.1
 Input Capacitance                        CIN                                                         2                  pF
 Leakage Current                         ILKG                                                 -30             +30        µA
 Input Resistance to VCM               RRXIN                                                         1.1                MΩ
 UART OUTPUTS (TXP, TXN)
                                                                                                           VGNDL +
 Output Low Voltage                       VOL   IOL = -20mA                                                               V
                                                                                                              0.4
                                                                                           VDDL -
 Output High Voltage                     VOH    IOH = 20mA                                                                V
                                                                                              0.4
 SPI TIMING
 SCLK Frequency                         fSCLK                                                                  4       MHz
 CS to SCLK Setup Time                   tCSS                                                 250                        ns
 CS High Pulse Width                   tCSWH                                                  200                        ns
 SCLK High Time                           tCH                                                 100                        ns
 SCLK Low Time                            tCL                                                 100                        ns
www.maximintegrated.com                                                                                   Maxim Integrated │ 3


MAX17841B                                          Automotive SPI Communication Interface (ASCI)
Electrical Characteristics (continued)
(VDCIN = 5V, VAA = VDDL = 3.3V, TA = TMIN to TMAX, unless otherwise noted, where TMIN = -40°C and TMAX = +105°C. Typical values
are at TA = +25°C. Operation is with the recommended application circuit.)
           PARAMETER                 SYMBOL                   CONDITIONS                     MIN     TYP     MAX      UNITS
 SCLK Fall to DOUT Valid                  tDO                                                                 30         ns
 DIN to SCLK Setup Time                   tDS                                                10                          ns
 DIN to SCLK Hold Time                    tDH                                                30                          ns
 UART TIMING
                                                fUART = 2Mbps                                          8
 Bit Period Except for Second
                                          tBIT  fUART = 1Mbps                                         16              1/fOSC
 STOP Bit (Notes 3, 4)
                                                fUART = 0.5Mbps                                       32
                                                fUART = 2Mbps                                          9
 Second STOP Bit Period
                                      tSTOPBIT  fUART = 1Mbps                                         18              1/fOSC
 (Notes 3, 4)
                                                fUART = 0.5Mbps                                       36
                                                fUART = 2Mbps                                 0                8
 Rx Idle to START Setup Time
                                      tRXSTSU   fUART = 1Mbps                                 0               16      1/fOSC
 (Notes 3, 4)
                                                fUART = 0.5Mbps                               0               32
                                                fUART = 2Mbps                                          8
 Tx Idle to START Setup Time
                                      tTXSTSU   fUART = 1Mbps                                         16              1/fOSC
 (Notes 3, 4)
                                                fUART = 0.5Mbps                                       32
 STOP Hold Time to Idle
                                        tSPHD                                                                  4      1/fOSC
 (Notes 3, 4)
                                                fUART = 2Mbps                                 8
 Rx Minimum Idle Time (STOP
                                   tRXIDLESPST fUART = 1Mbps                                 16                       1/fOSC
 Bit to START Bit) (Notes 3, 4)
                                                fUART = 0.5Mbps                              32
 Tx Minimum Idle Time
                                   tTXIDLESPST                                               10                       1/fOSC
 (Notes 3, 4)
                                                fUART = 2Mbps                                                  4
 Rx Fall Time (Notes 3–5)                tFALL  fUART = 1Mbps                                                  8      1/fOSC
                                                fUART = 0.5Mbps                                               16
                                                fUART = 2Mbps                                                  4
 Rx Rise Time (Notes 3–5)                tRISE  fUART = 1Mbps                                                  8      1/fOSC
                                                fUART = 0.5Mbps                                               16
 Startup Time (SHDN High to
                                     tSTARTUP                                                        800     2000        µs
 RXP Valid)
 Oscillator Frequency                    fOSC                                               15.68   16.00    16.32     MHz
 UART MESSAGE TIMING
 SPI Command to Tx Valid Delay
                                          tTX                                              4 x tBIT         5 x tBIT
 (Note 6)
www.maximintegrated.com                                                                                   Maxim Integrated │ 4


MAX17841B                                              Automotive SPI Communication Interface (ASCI)
Electrical Characteristics (continued)
(VDCIN = 5V, VAA = VDDL = 3.3V, TA = TMIN to TMAX, unless otherwise noted, where TMIN = -40°C and TMAX = +105°C. Typical values
are at TA = +25°C. Operation is with the recommended application circuit.)
           PARAMETER                    SYMBOL                   CONDITIONS                         MIN     TYP         MAX      UNITS
 Tx Valid to Rx Valid Up Stack                                                                                           nx
                                         tRXUP
 Delay (Note 7)                                                                                                        tPROP
 Tx Valid to Rx Valid Down Stack                                                                                         nx
                                         tRXDN
 Delay (Note 7)                                                                                                        tPROP
 End of STOP Character to
 RX_Stop_INT Flag True                    tINT                                                                        2 x tBIT
 (Note 8)
 SPI START to UART Slave                                                                                          8 / fSCLK +
 Device Register Write Delay            tREGWR                                                                   130 x tBIT +
 (Notes 9, 10)                                                                                                    n x tPROP
Note  2: Differential signal (VRXP - VRXN) where VRXP, VRXN do not exceed a common-mode voltage range of ±25V.
Note  3:  All parameters measured based on differential signal.
Note  4: Guaranteed by design and not production tested.
Note  5: Fall time measured 90% to 10%, rise time measured 10% to 90%.
Note  6: Measured from falling edge of 8th SCLK cycle of the WR_NXT_LD_Q SPI command byte (B0h).
Note  7: tPROP is the maximum propagation delay through a slave device in a given direction. Refer to the UART slave device data
         sheet for the actual delay. The number of UART slave devices is denoted by n.
Note 8: Measured from end of 12th bit of stop character.
Note 9: Parameter tREGWR is the minimum amount of time needed to write a register in the nth slave device of the daisy-chain. It is
         measured from the start of the SPI transaction WR_NXT_LD_Q (B0h) that initiates transmission of a WRITEALL message
         to when the nth device receives a valid WRITEALL message. For example, for 4MHz SPI frequency, 2Mbps UART baud
         rate, n = 10 and tPROP = 3 x tBIT, tREGWR = 2μs + 65μs + 15μs = 82μs.
Note 10:Computation of tREGWR consists of three terms: 1) duration of the SPI transaction, 2) partial duration of the UART
         message, and 3) propagation delay of the UART message. The first term equals the number of bits in the SPI transaction
         (8) x the SPI bit time (1 / fSCLK). The second term equals the time from the start of the WRITEALL message to the first
         STOP bit of the last PEC nibble. The last PEC nibble is the 11th character in the message. With each character lasting 12
         UART bit times, there are 11 x 12 = 132 bit times from the start of the message to the end of the last PEC nibble. Since the
         write occurs just before the two STOP bits of the 11th character, the term is actually 130 x tBIT. The third term is the propa-
         gation delay required for the WRITEALL message to get to the nth device.
                              tCSSO                                                                                      tCSWH
    CS
                                            tCH         tCL
  SCLK                     1        2        3      4        5       6        7        8         9       10
                              tDS                           tDH
    DIN
                                                                                                tDO
  DOUT
Figure 1. SPI Timing Diagram (Example of Reading Register 0x1B with Data 80h and Transaction Terminated Prematurely)
www.maximintegrated.com                                                                                             Maxim Integrated │ 5


MAX17841B                                                                Automotive SPI Communication Interface (ASCI)
                tRXSTSU             t BIT
                         t RISE
                                             t FALL                  t BIT                      tSPHD                           t RXIDLESPST
 RXP-RXN
                         S      0      1   2        3      4     5      6  7      E       P  P          S   0      P   P
Figure 2. Receive UART Timing
                t TXSTSU
                                                                                 t STOPBIT                                      t TXIDLESPST
 TXP-TXN
                         S      0      1   2        3       4    5      6  7       E       P P          S   0      P   P
Figure 3. Transmit UART Timing
              CS
                                 WR_NXT_LD_Q
                                                              WRITE DATA
            DIN                      (BOh)
                                                          tTX
                                                                 PREAMBLE              MESSAGE         STOP
        TXP-TXN                            IDLE
                                                                                                                        tTXSTSU
                                                                             PREAMBLE          MESSAGE        STOP
       RXP-RXN                                           IDLE
                                                      tRXUP                                                          tINT
                                                                              tRXDN
             INT
Figure 4. UART Message Timing
www.maximintegrated.com                                                                                                Maxim Integrated │ 6


MAX17841B                                      Automotive SPI Communication Interface (ASCI)
Pin Configuration
                                     TOP VIEW
                                                   +
                                         VAA   1                             16   RXP
                                       AGND    2                             15   RXN
                                        DCIN   3                             14   GNDL
                                                      MAX17841B
                                       SHDN    4                             13   VDDL
                                          CS   5                             12   TXP
                                          DIN  6                             11   TXN
                                       DOUT    7                             10   CTG
                                        SCLK   8                             9    INT
                                                         TSSOP
Pin Description
  PIN       NAME        FUNCTION                                           DESCRIPTION
                                 Power Output for LDO Regulator (5V Mode Only) and Supply for Oscillator. For 5V mode,
    1        VAA          Power  connect to VDDL. For 3.3V mode, connect this pin to 3.3V supply. Decouple per application
                                 circuit.
    2       AGND         Ground  Analog Ground. Connect to the power supply ground.
                                 Power Input for LDO Regulator and SPI Port. For 5V mode, connect to 5V supply. For 3.3V
    3        DCIN         Power
                                 mode, connect this pin to 3.3V supply. Decouple per application circuit.
                                 Active-Low Shutdown Input. Connect to host GPIO. Assert to place device in shutdown
    4       SHDN          Input  mode. In this mode, the regulator is disabled and the device is reset. This pin has a 1.5MΩ
                                 internal pulldown. 5V tolerant.
                                 Active-Low SPI Chip-Select Input. Connect to the Slave_Select output of the SPI master.
    5         CS          Input
                                 Assert to enable the SPI port. This pin has a 12MΩ internal resistor to ground. 5V tolerant.
    6         DIN         Input  SPI Data Input. Connect to DOUT/MOSI output of SPI master. 5V tolerant.
                                 SPI Data Output. Connect to DIN/MISO input of SPI master. This output is three-stated
    7       DOUT          Output when CS is deasserted. When CS is asserted, this pin is driven between DCIN and AGND
                                 supplies.
    8       SCLK          Input  SPI Clock Input. Connect to SCLK output of SPI master. 5V tolerant.
                                 Active-Low, Open-Drain Interrupt Output. Connect a pullup resistor to this pin per application
    9         INT         Output
                                 requirements. This pin is asserted if any interrupt flag is set.
   10        CTG         Ground  Reserved for factory use. Connect to AGND.
                                 UART Transmitter Negative Output. Connect to Rx port negative input circuit of UART slave
   11        TXN          Output
                                 device per application circuit. This pin is driven between the VDDL and GNDL supplies.
                                 UART Transmitter Positive Output. Connect to Rx port positive input circuit of UART slave
   12        TXP          Output
                                 device per application circuit. This pin is driven between the VDDL and GNDL supplies.
   13        VDDL         Power  3.3V Digital and UART Port Power. Connect to VAA. Decouple per application circuit.
   14       GNDL         Ground  Digital and UART Port Ground. Connect to AGND.
www.maximintegrated.com                                                                                    Maxim Integrated │ 7


MAX17841B                                            Automotive SPI Communication Interface (ASCI)
Pin Description (continued)
   PIN       NAME        FUNCTION                                                DESCRIPTION
                                       UART Receiver Negative Input. Connect to Tx port negative output of UART slave device
    15        RXN           Output
                                       per application circuit.
                                       UART Receiver Positive Input. Connect to Tx port positive output of UART slave device per
    16        RXP           Output
                                       application circuit.
Detailed Description                                                    Together with the host controller, the ASCI is the mas-
The MAX17841B allows any host controller with an SPI                    ter for communications with the slave devices. Figure 5
port to communicate with one or more battery manage-                    shows the functional block diagram. Table 1 shows how
ment slave devices that use Maxim’s battery manage-                     power is distributed inside the device.
ment UART protocol.                                                     Serial Peripheral Interface (SPI)
                                                                        The SPI port is a synchronous data link that the host uses
Table 1. Internal Power Distribution                                    to read and write the ASCI registers and the UART com-
             BLOCK                           SUPPLY                     munication buffers.
 Oscillator                                     VAA                     SPI Transactions
 SPI Port and LDO Regulator                    DCIN                     An SPI transaction is initiated when the host drives the CS
 Digital, UART, and Control                    VDDL                     pin low. The host always transmits data most-significant
                                                                        bit (MSB) first to the ASCI. After the first byte, it can termi-
                  CS
                                                                                                                     RXP
                                                                  RECEIVE             UART
                                                                                                     RECEIVER        RXN
                                                                  BUFFER            DECODER
                SCLK
                 DIN                    SPI SLAVE                                                       VDD
                                      CONTROLLER                                                                     VDDL
                           DCIN                                 CONTROLLER         REGISTERS                         GNDL
               DOUT
                                                                 TRANSMIT                MAX17841B
                 INT                                              BUFFER
                            16MHz
                         OSCILLATOR
                                                                                                                     TXP
                                                                 FILL BYTE             UART
               SHDN                   3.3V                                                            TRANSMITTER    TXN
                                                                GENERATOR            ENCODER
                           3.3V LDO
                DCIN     REGULATOR
                                 AGND    VAA
Figure 5. Functional Diagram
www.maximintegrated.com                                                                                            Maxim Integrated │ 8


MAX17841B                                               Automotive SPI Communication Interface (ASCI)
nate the transaction (single-byte transaction), continue to      UART Interface
clock data out (write transaction), or start clocking data in    Slave devices that use Maxim’s battery management
(read transaction). However, it does not send and receive        UART protocol can be connected in daisy-chain fashion to
data at the same time (half-duplex operation).                   manage a multiple battery-cell stack. In a BMS, or Battery
Register Transactions                                            Management System, the BMS controller is the host for
                                                                 all slave devices and initiates all communication. The data
For register transactions, the host first sends a single-byte
                                                                 flow always starts from the host, goes up the daisy-chain
register address. Register addresses are either read-only
                                                                 and back down to the host as represented in Figure 6.
(odd addresses) or write-only (even addresses). For a
read transaction, the second byte is the read data sent by
the ASCI to the host. For a write transaction, the second
byte is the write data sent by the host to the ASCI. Multiple          CHOOSE
                                                                   INTERNAL OR
data bytes are allowed as long as CS remains active-                  EXTERNAL
low—the ASCI automatically selects the next read-only                LOOPBACK
register address (for reads) or the next write-only address
(for writes). The SPI transaction is terminated when the                     RXUP RXUN       TXUP TXUN
host drives CS high.                                                                                                 BATTERY
                                                                                     DEVICE (n)
                                                                                                                      PACK n
Buffer Transactions
                                                                             TXLP TXLN       RXLP RXLN
Buffer transactions can consist of only a command byte,
a command byte followed by one or more read bytes, or
                                                                                                           OPTIONAL
a command byte followed by one or more write bytes. All
                                                                                                          SERVICE
allowed transactions are specified in Table 9.                                                          DISCONNECT
SPI Timing
The ASCI is only compatible with SPI mode 0 (CPOL =
                                                                             RXUP RXUN       TXUP TXUN
0/CPHA = 0). In this mode, data is always driven on the
                                                                                                                     BATTERY
falling edge of SCLK and is always sampled on the rising                            DEVICE (n-1)
                                                                                                                    PACK (n - 1)
edge of SCLK.
                                                                             TXLP TXLN       RXLP RXLN
For reads, the ASCI starts driving DOUT on the first fall-
ing edge of SCLK immediately after the ASCI samples
the least-significant bit (LSB) of the command/address
byte. DIN is a “don’t care” while reading. Reads attempted
                                                                             RXUP RXUN       TXUP TXUN
beyond the address space return zero.
                                                                                                                     BATTERY
For writes, registers are written on the falling edge of                              DEVICE 1                        PACK 1
SCLK, after the last bit is sampled. However, if CS goes
                                                                             TXLP TXLN       RXLP RXLN
high before the last bit’s falling edge of SCLK, that register
is not written.
                                                                                     ISOLATION
Table 2. SPI Communication Summary
         PARAMETER                           VALUE
  Communication Mode              Half-duplex                                       MAX17841B
  Maximum Clock Frequency         4MHz
  Bit Order                       Most-significant bit first
                                  0 (leading clock edge is                              µC
  Clock Polarity (CPOL)
                                  rising edge)
                                  0 (data sampled on leading                            BMS
  Clock Phase (CPHA)
                                  clock edge)
                                                                 Figure 6. System Data Flow
www.maximintegrated.com                                                                                    Maxim Integrated │ 9


MAX17841B                                           Automotive SPI Communication Interface (ASCI)
Battery Management UART Protocol                             Each data byte is transmitted and received as two sepa-
The ASCI uses a UART protocol specifically designed for      rate characters, one 12-bit character for each 4-bit data
Maxim battery management devices. This protocol uses         nibble. Each Manchester-encoded nibble actually requires
the following features to maximize the integrity of the      eight data bits: four true bits and four inverted bits.
communications:                                              In its default configuration, when the ASCI transmits a mes-
● All transmitted data are Manchester-encoded where          sage, it automatically performs the following functions:
   each data bit is transmitted twice with the second bit    ● Frames the message with the required preamble char-
   inverted (G.E. Thomas convention).                             acter at the beginning of the message.
● Every transmitted character contains 12 bits that          ● Manchester encodes each data nibble and transmits
   include a START bit, a parity bit, and two STOP bits.          each encoded nibble with the required START, parity,
● Each message contains a CRC-8 packet error-                     and STOP bits.
   checking (PEC) byte                                       ● Transmits the message at the configured baud rate of
● Each message is framed by a preamble character and              0.5Mbps, 1Mbps, or 2Mbps.
   stop character.                                           ● Frames the message with the required stop character
● Each received message contains a data-check byte                at the end of the message.
   for verifying the integrity of the transmission.          These automatic functions can be disabled by enabling
The protocol is also designed to minimize power con-         the following special transmit modes:
sumption by allowing slave devices to shut down if the       ● Transmit No Preamble mode (eliminates preamble
data link is idle for a specified period of time. To prevent      characters)
the unintentional shutdown of slave devices, the host        ● Transmit No Stop mode (eliminates stop characters)
should enable the ASCI’s Keep-Alive mode to periodically
transmit stop characters. The time period between stop       ● Transmit Raw Data mode (transmits data with no
characters is configurable by the host.                           Manchester encoding)
                                                             ● Receive Raw Data mode (receives data as not
UART Messages
                                                                  Manchester encoded)
A message is defined as a sequence of UART characters.
The message starts with a preamble character, followed       Preamble Character
by data characters, and ending with a stop character.        The preamble is a framing character that the UART
Each character consists of the following 12 bits:            generates to signal the beginning of a message. It is
                                                             transmitted as an unencoded 15h, but is still a DC-balanced
● One START bit                                              character. If any bit(s) other than the STOP bits deviate
● Eight data bits (LSB first)                                from the unique preamble sequence, the character is
● One parity bit (even)                                      not interpreted as a valid preamble, but rather as a data
                                                             character.
● Two STOP bits
                             S      1     0     1     0    1 0       0     0    E=1     P    P
                OPTIONAL                                                                             OPTIONAL
                IDLE                                                                                 IDLE
           IDLE
           DISABLE                                                                                        IDLE
                                                                                                          ENABLE
Figure 7. UART Timing for a Preamble
www.maximintegrated.com                                                                               Maxim Integrated │ 10


MAX17841B                                        Automotive SPI Communication Interface (ASCI)
                  OPTIONAL                                                                            OPTIONAL
                  IDLE        S     0      0  1     0       1     0      1     0   E=1    P    P      IDLE
            IDLE
            DISABLE                                                                                          IDLE
                                                                                                             ENABLE
Figure 8. UART Timing for a Stop Character
                                                 DATA NIBBLE = 0h
                                       0         0              0          0
                   OPTIONAL                                                                          OPTIONAL
                   IDLE        S    0      1   0    1       0     1      0     1   E=0    P   P      IDLE
             IDLE
             DISABLE                                                                                        IDLE
                                                                                                            ENABLE
Figure 9. UART Timing for a Manchester-Encoded Data Nibble 0h
Stop Character                                                    Manchester Encoding
The stop character is a framing character that the UART           Each data byte is transmitted as two separate nibbles
generates to signal the end of a message. It is transmit-         (four bits) that are Manchester-encoded. For each data
ted as an unencoded 54h, but it is still a DC-balanced            bit, the first bit represents the information and the
character.                                                        second bit is its complement. The parity is even so its
                                                                  value should always result in an even number of high
                                                                  bits. Since the data is Manchester-encoded and there are
                                                                  two STOP bits, the parity bit for data characters (but not
                                                                  framing characters) should always be zero.
www.maximintegrated.com                                                                                    Maxim Integrated │ 11


MAX17841B                                             Automotive SPI Communication Interface (ASCI)
Data Types                                                               Assigning Slave Device Addresses
Maxim’s battery management UART protocol supports                        The battery management UART protocol requires that the
several different data types as described in Table 3. The                host assign a unique and contiguous address between 0
ASCI does not interpret the significance of any of these                 and 31 to each UART slave device so that the host can
data types. It is up to the host to both compose the data                address each slave device individually as desired. The host
being transmitted and interpret the data being received.                 performs this assignment by specifying a seed address
For example, the host must compute the proper PEC                        in the HELLOALL command sequence. As the command
value for each transmitted message and must verify the                   propagates up the daisy-chain, each slave device assigns
PEC value on each received message.                                      its own address. The HELLOALL sequence returns a value
                                                                         from which the host can determine the number of devices
                                                                         in the daisy-chain as well as the device addresses.
Table 3. Message Data Types
      DATA TYPE                                                           DESCRIPTION
 Command               Defines the type of message, either a write command or a read command.
 Address               Register address to be read or written.
 Data                  Register data being read or written.
 PEC                   CRC-8 packet error-checking byte; sent and returned with every message.
 Data-Check            Error status provided by the slave devices; returned only on reads.
                       Used to verify the number of devices responding to a transmitted message. This byte is optional but is
 Alive-Counter
                       recommended for error-checking purposes.
                       Bytes with values C2h or D3h transmitted as a part of read commands so that the total number of bytes sent
 Fill                  equals the number of bytes received. However, these bytes are not returned to receiver with their original
                       values; instead each slave device replaces the fill bytes with the register data being requested by the host.
Table 4. Common Commands
     COMMAND BYTE           VALUE                                                 DESCRIPTION
 HELLOALL                     57h      Assigns a unique device address to each device in the daisy-chain.
 WRITEALL                     02h      Writes a specific register in all devices.
 READALL                      03h      Reads a specific register from all devices.
www.maximintegrated.com                                                                                           Maxim Integrated │ 12


MAX17841B                                               Automotive SPI Communication Interface (ASCI)
UART Operation                                                          whether or not the event causes an interrupt. Interrupt flags
The UART is the subsystem that transmits messages to                    (except the POR_Flag) are edge-triggered in that they are set
the UART slave devices and receives them back. The                      only when the interrupt enable bit is true and the correspond-
host uses SPI buffer transactions to store unencoded                    ing status bit transitions from a logic-zero state to logic-one
outgoing messages in the transmit buffer and also to read               state. Interrupt flags can only be cleared by the host.
decoded incoming messages out of the receive buffer as                  If the flag enable is set when its corresponding status bit
shown in Figure 10. Table 5 shows the size and organiza-                is true, the flag is not set until the status bit transitions
tion of the UART buffers.                                               from a logic-zero state to a logic-one state. If the flag is
                                                                        cleared when the corresponding status bit is true, the flag
UART Interrupts
                                                                        does not set again until the status bit transitions from a
There are 12 different UART events that can cause an                    logic-zero state to a logic-one state.
interrupt (refer to the Register Table for details). For each
event, there is a status bit, an enable bit, and a flag bit.            When any flag is true, the UART asserts the INT pin. All
The status bit is the real-time status of the event and can only        flags must be cleared for the INT pin to be deasserted.
be set or cleared by the UART. The enable bit determines                The only exception is the POR_Flag, which has no effect
                                                                        on INT.
                                                  RECEIVE              UART
                                                                                          RECEIVER
                                                  BUFFER             DECODER
                                SPI                                                                           SLAVE
                HOST
                               PORT              TRANSMIT                                                     DEVICE(S)
                                                  BUFFER
                                                 FILL BYTE             UART
                                                                                       TRANSMITTER
                                                GENERATOR            ENCODER
Figure 10. UART Data Flow
Table 5. UART Buffers
         PARAMETER                                 TRANSMIT BUFFER                                      RECEIVE BUFFER
  Organization                                           4 x 7 bytes                                        1 x 62 bytes
  Size                                                    28 bytes                                            62 bytes
  Message Capacity                                      4 messages                                            Variable
  Host Access                                          Read and Write                                        Read Only
www.maximintegrated.com                                                                                            Maxim Integrated │ 13


MAX17841B                                             Automotive SPI Communication Interface (ASCI)
Table 6. UART Operational Modes
        MODE                                                           DESCRIPTION
                      Asserting SHDN resets all ASCI registers and buffer data to their default state, stops sending and receiving
 Shutdown
                      UART communication, and disables the 3.3V regulator.
                      Transmits preambles continuously (no idle state). Used to wake up the UART slave devices and initialize the
 Transmit
                      UART baud rate of each slave device. This mode takes precedence over all transmit modes except Transmit
 Preambles
                      Pause mode.
                      Periodically sends a stop character to prevent UART slave devices from shutting down during periods of no
                      communication (idle state). The idle time in between the periodic stop characters is programmable from zero
 Keep-Alive
                      to 10.24ms through the Keep-Alive [3:0] configuration. The default setting is infinite (mode disabled). The
                      Transmit Pause, Transmit Preambles, and the Transmit Queue modes take precedence over this mode.
                      Starts transmission of the message loaded in the transmit queue if 1) there is sufficient space in the receive
 Transmit Queue
                      buffer for the message (RX_Full_Status is false) or 2) the limitations on message length are removed
 (default mode)
                      (TX_Unlimited is set). Default is enabled.
                      In this mode, the transmit queue automatically limits the message length to 255 bytes instead of the default
 Transmit Unlimited   62-byte limit, and the message transmission is permitted even if the message length is greater than the
                      available write space in the receive buffer.
                      Places the transmitter into idle state once the UART has finished transmitting the current byte, however, the
 Transmit Pause       TX_Busy_Status and TX_Idle_Status bits remain unchanged. Transmission resumes when this bit is cleared.
                      This mode takes precedence over all other transmit modes.
 Transmit Odd         Transmits characters with odd parity. Since the battery management UART protocol uses even parity, this
 Parity               mode can be used to test the system’s ability to detect parity errors. Even parity is default.
                      Transmits messages without a stop character. By sending subsequent messages with the No Preamble bit,
 Transmit No Stop     a framed message of indefinite length can be constructed. The TX_Unlimited bit must be set for messages
                      greater than 62 bytes.
                      Transmits messages without a preamble. By first sending a message in which the TX_No_Stop bit is set, and
 Transmit No          then sending messages with this bit set, a framed message of indefinite length can be constructed. However,
 Preamble             if the preceding message was terminated with a stop character (end of frame), then the data sent in this
                      mode is unframed (without preamble) and is not stored in the receive buffer.
                      Disables Manchester encoding of transmitted data. In this mode, each data byte is transmitted as one
 Transmit Raw Data
                      character (instead of two characters).
                      Disables Manchester decoding of the received data. In this mode, there is one data byte stored for every
 Receive Raw Data
                      character received (instead of every two received).
www.maximintegrated.com                                                                                          Maxim Integrated │ 14


MAX17841B                                              Automotive SPI Communication Interface (ASCI)
Transmit Buffer
The transmit buffer memory map is shown below. It con-                                Tx BUFFER MEMORY MAP
sists of four fixed-length queues, which the host uses to                                         Q   BYTE              8 BITS
store outgoing messages. At any time, one of the queues                                           00   000
is designated as the load queue (the queue being loaded)                                                               QUEUE 0
and one of the queues is designated as the transmit                                                               TRANSMIT QUEUE
                                                                                                                                    7 BYTES
queue (the queue being unloaded). The load queue is                                       TX_POINTER
                                                                                                                  DATA TO UART (Tx)
selected by the two-bit register LD_Q and the transmit                                  UART CONTROLS
                                                                                           INCREMENT
queue is selected by the two-bit register TX_Q. Each
queue consists of seven bytes.                                            0    0  1   0    1
                                                                                                  01   000
                                                                                                                       QUEUE 1
Transmit Buffer Queues                                                 TX_Q [1:0] LOCATION [2:0]                   (LD COMPLETE     7 BYTES
                                                                      READ ONLY   INTERNAL                           Tx PENDING)
In each queue, location 0 is reserved for the message
length and the remaining six locations are for specific
message data. The default state of each queue is as                                               10   000
                                                                                                                       QUEUE 2
shown in Table 7.                                                                                                   (LOAD QUEUE)
                                                                                                                                    7 BYTES
Clearing the Transmit Buffer                                                              LD_POINTER
                                                                                                                 DATA TO/FROM HOST
During UART initialization, it is recommended that the                                  HOST CONTROLS
                                                                                   INCREMENT THROUGH SPI
host reset the transmit buffer by issuing the CLR_TX_BUF
                                                                                                  11   000
SPI transaction (20h). This resets the transmit buffer as follows:        1    0  0   1    0
                                                                       LD_Q [1:0] LOCATION [2:0]                       QUEUE 3
● TX_Q [1:0] = 00b                                                                                                     (EMPTY)      7 BYTES
                                                                      READ ONLY   INTERNAL
● LD_Q [1:0] = 00b                                                                                11   110
● Data in transmit buffer (28 bytes) is reset to default
    state per Table 7.
Message Length                                                              QUEUE 0 IS THE TRANSMIT QUEUE IN THIS EXAMPLE
                                                                               QUEUE 2 IS THE LOAD QUEUE IN THIS EXAMPLE
Before composing any message, the host should
compute the message’s length (in bytes, not characters)                            TRANSMIT BUFFER ADDRESSING
based on both the type of command (read or write) and
the device count. The message length should include any            Figure 11. Transmit Buffer Memory Map
required fill bytes (but not preamble and stop characters).
The host writes the message length into location 0 of the
load queue, but if the specified message length is greater         If the specified message length is greater than 6 bytes, the
than 62d, only 62d (3Eh) is actually written. If the TX_           UART automatically appends alternating fill bytes (D3h,
Unlimited = 1, then the maximum message length written             C2h) as required by the battery management UART proto-
is increased to 255d (FFh), but the host must service the          col during the latter portion of the message transmission.
receive buffer accordingly to avoid any possible overflow.
Table 7. Queue Memory Map
                                                      DEFAULT                       MAXIMUM DEFAULT PERMITTED
      LOCATION              DESCRIPTION
                                                        VALUE           TX_UNLIMITED = 0                         TX_UNLIMITED = 1
           0            Message length                    00h                     3Eh                                       FFh
           1                                             D3h
           2                                             C2h
           3            Data bytes and/or fill           D3h
                                                                                  FFh                                       FFh
           4            bytes                            C2h
           5                                             D3h
           6                                             C2h
www.maximintegrated.com                                                                                                Maxim Integrated │ 15


MAX17841B                                             Automotive SPI Communication Interface (ASCI)
Writing the Load Queue                                          empty (TX_Q = LD_Q), which is the default state. This
A message, not including fill bytes, consists of three (3)      state can also occur when the UART finishes sending the
to six (6) bytes. The HELLOALL sequence, for example,           last loaded message and thus creates an empty transmit
is three bytes: 57h, 00h, 00h (first address set to zero).      buffer.
Since no fill bytes are required, the total message length      Message Transmission
is 3 bytes. Therefore, the host should write the load queue
                                                                Whenever LD_Q = TX_Q, the transmit buffer is consid-
with the following data in Table 8.
                                                                ered empty (TX_Empty_Status is true) because either
The host can write the load queue starting at any location      the host has not yet finished loading the selected queue
within the queue by using appropriate SPI commands              or the host has written but not yet verified the queue.
listed in SPI transaction Table 9. However, if the host         However, once the host is finished servicing the queue, it
attempts to write beyond location 6 of the queue, the           performs a WR_NXT_LD_Q transaction to select the next
additional data is ignored.                                     queue. Once this occurs, the transmit buffer is no longer
The UART never attempts to transmit the queue selected          considered empty because LD_Q ≠ TX_Q.
by LD_Q because the host may be in the process of               The UART unloads/transmits the transmit queue if the fol-
loading it or, even if it has finished loading, may need to     lowing conditions are met:
verify (read) the contents of the load queue by using the
                                                                ● The UART is in Transmit_Queue mode (TX_Queue bit
RD_LD_Q transaction (C1h). The host can then select
                                                                    is set)
the next queue in sequence for loading by performing the
WR_NXT_LD_Q transaction (B0h), which increments the             ● The transmit buffer has at least one loaded queue
LD_Q value. It is only when this increment occurs that the          (TX_Empty_Status is false)
UART starts transmitting the data in the previously loaded      ● There is sufficient space in the receive buffer for the
queue. For both LD_Q[1:0] and TX_Q[1:0], values of 3h               message (RX_Space_ ≥ Message Length)
increment to 0h.
                                                                Note: The limitation on available space in the receive buf-
Table 8. Example of Queue Loaded with                           fer can be removed by setting the TX_Unlimited bit.
Message HELLOALL                                                Once the transmit conditions are met, the UART auto-
                                                                matically starts unloading the transmit queue until the
   LOCATION         VALUE              DESCRIPTION              entire message, including any required fill bytes, has
        0             03h     Message length                    been transmitted. After the transmission is complete, the
        1             57h     Command byte                      contents of the transmit queue are reset to their default
        2             00h     Address byte                      values and the queue is once again available to the host
        3             00h     Data byte                         for loading.
        4             C2h     Not written                       Receive Buffer
        5             D3h     Not written                       The receive buffer is a 62-byte circular buffer that the
        6             C2h     Not written                       host can read with the SPI, but can only be loaded by
                                                                the UART as it receives data. It utilizes three pointers as
Filling the Transmit Buffer                                     shown in the receive buffer memory map (Figure 12).
The host can load all available queues until LD_Q = TX_Q        ● RX_RD_POINTER: Read pointer or buffer location to
- 1. In this state, the transmit buffer is full (TX_Full_Status     be read by host (default 00h, read-only)
true). In this condition, the host cannot start loading the     ● RX_WR_POINTER: Write pointer or buffer location to
transmit queue because the UART may still be unloading/             be written by UART (default 01h, read-only)
transmitting data. If the transmit buffer is full and the host  ● RX_NXT_MSG_POINTER: Buffer location that is start
attempts to perform a WR_NXT_LD_Q transaction and                   of next unread message (default 00h, read-only)
thus attempts to load the transmit queue, the increment
does not occur and an overflow condition is indicated           In the default state, where the read pointer is one less
(TX_Overflow_Status true). The only time the host can           than the write pointer, the receive buffer is considered
write the transmit queue is when the transmit buffer is         empty (RX_Empty_Status is true). Any receive buffer data
                                                                read in this condition will be zero.
www.maximintegrated.com                                                                                Maxim Integrated │ 16


MAX17841B                                          Automotive SPI Communication Interface (ASCI)
Clearing the Receive Buffer
During UART initialization, it is recommended that the host                            RECEIVE BUFFER MEMORY MAP
clear the receive buffer by issuing the CLR_RX_BUF SPI                                             8 BITS
                                                                                000000
transaction (E0h). This resets the receive buffer as follows:
● RX_RD_Pointer: 00h                                                                             AVAILABLE        MESSAGE 1
                                                                                                  (EMPTY)         (ALREADY READ)
● RX_WR_Pointer: 01h
● RX_NXT_MSG_POINTER: 00h
                                                                                          FIRST BYTE OF MESSAGE 2
● Data in receive buffer (62 bytes) is cleared to 00h
                                                                                                                  MESSAGE 2
If the receive buffer is cleared during Transmit Preambles        RX_RD_POINTER                 DATA TO HOST
                                                                                                                  (BEING READ)
mode, the state of the buffer cannot be guaranteed.              RX_NXT_MESSAGE
Therefore, after disabling the Transmit Preambles mode,           RX_WR_POINTER
                                                                                          FIRST BYTE OF MESSAGE 3 PART OF
the host should wait until all transmitted preambles have                                                         MESSAGE 3
been received before clearing the buffer. Since the first                                                         (BEING LOADED
keep-alive stop character received after the last preamble                                    DATA FROM UART      BY UART)
results in a null message, the host can simply wait until
the buffer is no longer empty (RX_Empty_Status = 0)                                              AVAILABLE
before clearing the buffer.                                                                       (EMPTY)
The RX Clear Buffer command acts an an asynchronous                            11111 0
reset not only for the RX Buffer, but also for the UART                 EACH MESSAGE IS
receiver logic. When the UART receiver logic is reset, it               VARIABLE LENGTH
must resynchronize to the incoming UART signal before
bytes can be properly processed. This is accomplished         Figure 12. Receive Buffer Memory Map
by receiving either a preamble byte or an idle state
                                                              byte being read (the byte addressed by RX_RD_Pointer),
lasting at least one UART byte period. The preamble used to
                                                              which is useful for error checking:
resynchronize the data stream should not be the same
preamble that is at the beginning of the next transmitted     ● First_Byte bit: Indicates that the byte is the first data
message. The application should make sure that one of             byte in a message (the corresponding character was
these conditions is met following an RX buffer clear prior to     preceded by preamble character).
sending the next message from the MAX17841B.                  ● Byte_Error bit: Indicates that the byte may contain
Receiving Messages                                                an error (the corresponding character contained a
                                                                  Manchester and/or parity error). This bit drives the
UART messages are framed with the preamble and stop
                                                                  RX_Error interrupt.
characters. If the UART receiver decodes a valid pream-
ble, it prepares to receive a message but it does not store   ● Last_Byte bit: Indicates that the byte is the last byte in
the preamble in the receive buffer. Once data is received,        a message (the corresponding character was a stop
the buffer is no longer empty (RX_Empty_Status = 0) and           character and was stored as a null byte).
the UART sequentially stores decoded data bytes in the        Message Exceptions
receive buffer until either a stop character or another pre-
                                                              If a message is not framed with a valid preamble, then the
amble is received. When the stop character is received at
                                                              UART ignores the data and does not store it.
the end of a message, the UART stores it in the receive
buffer as a null byte (00h) and sets the RX_Stop_Status       If a message is not framed with a stop character, then
bit. The RX_Stop_Status bit is subsequently cleared           the preamble of the next message serves to delineate
when all unread messages have been read (buffer empty)        between the two messages. However, the first message
or the next preamble is detected. The host can set the        has no stop character stored.
RX_Stop_INT_Enable bit and monitor the interrupt line to      If the UART receives a preamble followed by a stop
determine when to service the receive buffer.                 character it stores a null message in the receive buffer
When the host services the receive buffer, three bits in the  consisting of a single null byte (00h). This occurs when
RX_Byte register indicate specific information about the      a keep-alive stop character is received after Transmit
                                                              Preambles mode is disabled. In this use case, the receive
www.maximintegrated.com                                                                                    Maxim Integrated │ 17


MAX17841B                                          Automotive SPI Communication Interface (ASCI)
buffer is not empty. The host should dispense of the null           read so the last address that can be written is the one just
message by either clearing the receive buffer or by simply          behind the read pointer. If more data is received after the
reading the null message and discarding it.                         last address is written, the UART simply overwrites the last
A receive buffer overflow occurs when the UART receives             address and then sets the RX_Overflow_Status bit. The
data but there is no more space to store it. This could             RX_Overflow_Status bit is cleared when the receive buffer
potentially occur if TX_Unlimited was set or if there was           is read, thereby creating more write space. To detect any
sufficient latency in the daisy-chain. The UART cannot              overflow, the status must be checked before servicing the
overtake the read pointer and overwrite the data being              receive buffer. After servicing the receive buffer, the status
Table 9. SPI Transactions
 REGISTER TRANSACTIONS
              ADDRESS                        NAME                                           DESCRIPTION
 0x01 to 0x1B and 0x95 to 0x9B       See the Register Table     Reads or writes the specified ASCI register
 BUFFER TRANSACTIONS
  COMMAND             START LOCATION                                               DESCRIPTION
                                               CLR_TX_BUF Command: Resets the transmit buffer to its default state and clears
      0x20                   —
                                               TX_Q and LD_Q.
                                               RD_MSG Command: Reads the receive buffer starting at the address RX_RD_
                          RX_RD_
      0x91                                     Pointer. Automatically increments the read pointer after the byte is read but does
                           Pointer
                                               not increment the read pointer into the next message.
                                               RD_NXT_MSG Command: Reads the receive buffer starting at the address RX_
                       RX_NXT_MSG_             NXT_MSG_Pointer (oldest unread message). Automatically increments the read
      0x93
                           Pointer             pointer after the byte is read but does not increment the read pointer into the next
                                               message.
      0xB0             LD_Q Location 0
      0xB2             LD_Q Location 1         WR_NXT_LD_Q Command: Increments LD_Q, then writes the transmit buffer
      0xB4             LD_Q Location 2         load queue. The increment occurs whether the host loads the data or not. The
      0xB6             LD_Q Location 3         command byte defines the first location to be written (locations 0 to 6). For
      0xB8             LD_Q Location 4         example, 0xB0 starts writing at location 0 and continues through location 6. Writes
      0xBA             LD_Q Location 5         beyond location 6 have no effect.
      0xBC             LD_Q Location 6
      0xC0             LD_Q Location 0
      0xC2             LD_Q Location 1
      0xC4             LD_Q Location 2         WR_LD_Q Command: Writes the transmit buffer load queue. The command byte
                                               defines the first byte written (locations 0 to 6). For example, 0xC0 starts writing
      0xC6             LD_Q Location 3
                                               at location 0 and continues through location 6. Writes beyond location 6 have no
      0xC8             LD_Q Location 4         effect.
      0xCA             LD_Q Location 5
      0xCC             LD_Q Location 6
      0xC1             LD_Q Location 0
      0xC3             LD_Q Location 1
      0xC5             LD_Q Location 2         RD _LD_Q Command: Reads transmit buffer load queue. The command byte
                                               defines the first byte read (locations 0 to 6). For example, 0xC1 starts reading
      0xC7             LD_Q Location 3
                                               at location 0 and continues through location 6. Reading beyond location 6 reads
      0xC9             LD_Q Location 4         zeros.
      0xCB             LD_Q Location 5
      0xCD             LD_Q Location 6
                                               CLR_RX_BUF Command: Resets the receive buffer and the receive buffer
      0xE0                   —
                                               pointers to their default state.
www.maximintegrated.com                                                                                         Maxim Integrated │ 18


MAX17841B                                               Automotive SPI Communication Interface (ASCI)
should be checked again for data errors (e.g., parity errors)         Applications Information
prior to initiating transmission of the next message.
                                                                      Transaction Sequence for UART Initialization
If multiple messages are received without being read,
                                                                      In the example shown in Table 10, the host initializes com-
then an overflow can occur and the UART sets the RX_
                                                                      munication with two UART slave devices. SHDN must be
Overflow_Status bit. This occurs when the write pointer
                                                                      deasserted first. Transactions to poll RX_STATUS regis-
has incremented until it is one less than the read pointer,
                                                                      ter are repeated until the poll is successful or times out.
at which point the UART no longer increments it. In this
case, the last data byte is overwritten.                              It is recommended that all writes to configuration registers
                                                                      be verified by reading back the register data. Transmit
Reading Messages                                                      buffer data can be verified by reading the buffer contents
The host can use two different SPI transactions to read               or by reading the transmitted data in the receive buffer.
the receive buffer:
                                                                      Transaction Sequence for UART Write and
● RD_RX_BUF (91h): Starts reading at the current read
                                                                      Read
    pointer location
                                                                      In the example shown in Table 11, the host communicates
● RD_NXT_MSG (93h): Starts reading at the start of the                with two UART slave devices to:
    next unread message
                                                                      ● Write the value B2B1h to the device register address
During any read transaction, the host may continue read-                   0x12 for all slave devices using a WRITEALL com-
ing data until the end of the message, after which the data                mand sequence
read will be 00h. The host cannot continue reading into
the next message, if there is one.                                    ● Read back the value B2B1h from the device register
                                                                           address 0x12 for all slave devices using READALL
During any read transaction, the UART increments the                       command sequence.
read pointer after the data byte is read so that if the SPI
transaction is prematurely terminated in the middle of                This example assumes that the slave devices have been
the byte, then the same location is resent on the next                configured with the alive counter enabled. To execute
RD_MSG SPI transaction. This allows the host to stop a                these two command sequences, the host performs the
read and restart it without losing data. Each byte in the             SPI transactions listed in Table 11.
buffer is cleared after it is read and is eventually available
to the UART for storing incoming data.
Table 10. UART Daisy-Chain Initialization Sequence
    DIN          DOUT                                                   DESCRIPTION
   TRANSACTION 1          Enable Keep-Alive mode (prior to the UART slave wake-up to prevent shutdown)
     10h          xxh     Write Configuration 3 register
     05h          xxh     Set keep-alive period to 160µs
   TRANSACTION 2          Enable Rx Interrupt flags for RX_Error and RX_Overflow
     04h          xxh     Write RX_Interrupt_Enable register
     88h          xxh     Set the RX_Error_INT_Enable and RX_Overflow_INT_Enable bits
   TRANSACTION 3          Clear receive buffer
    E0h           xxh     Clear receive buffer
   TRANSACTION 4          Wake-up UART slave devices (transmit preambles)
    0Eh           xxh     Write Configuration 2 register
     30h          xxh     Enable Transmit Preambles mode
   TRANSACTION 5          Wait for all UART slave devices to wake up (poll RX_Busy_Status bit)
     01h          xxh     Read RX_Status register (RX_Busy_Status and RX_Empty_Status should be true)
     xxh          21h     If RX_Status = 21h, continue. Otherwise, repeat transaction until true or timeout.
   TRANSACTION 6          End of UART slave device wake-up period
    0Eh           xxh     Write Configuration 2 register
     10h          xxh     Disable Transmit Preambles mode
www.maximintegrated.com                                                                                       Maxim Integrated │ 19


MAX17841B                                            Automotive SPI Communication Interface (ASCI)
Table 10. UART Daisy-Chain Initialization Sequence (continued)
   DIN       DOUT                                                        DESCRIPTION
  TRANSACTION 7        Wait for null message to be received (poll RX_Empty_Status bit)
   01h        xxh      Read RX_Status register
  TRANSACTION 8        Clear transmit buffer
   20h        xxh      Clear transmit buffer
  TRANSACTION 9        Clear receive buffer
   E0h        xxh      Clear receive buffer
 TRANSACTION 10        Load the HELLOALL command sequence into the load queue
   C0h        xxh      WR_LD_Q SPI command byte (write the load queue)
   03h        xxh      Message length
   57h        xxh      HELLOALL command byte
   00h        xxh      Register address (0x00)
   00h        xxh      Initialization address of HELLOALL
 TRANSACTION 11        Verify contents of the load queue
   C1h        xxh      RD_LD_Q SPI command byte
   xxh        03h      OK
   xxh        57h      OK
   xxh        00h      OK
   xxh        00h      OK
 TRANSACTION 12        Transmit HELLOALL sequence
   B0h        xxh      WR_NXT_LD_Q SPI command byte (write the next load queue)
 TRANSACTION 13        Poll RX_Stop_Status bit
   01h        xxh      Read RX_Status register
   xxh        12h      If RX_Status[1] is true, continue. If false, then repeat transaction until true.
                       Service receive buffer. Read the HELLOALL message that propagated through the daisy-chain and was
 TRANSACTION 14
                       returned back to the ASCI. The host should verify the device count.
   93h        xxh      RD_NXT_MSG SPI transaction
   xxh        57h      Sent command byte (HELLOALL)
   xxh        00h      Sent address = 00h
   xxh        02h      Returned address = 02h
 TRANSACTION 15        Check for receive buffer errors
   09h        xxh      Read RX_Interrupt_Flags register
   xxh        00h      If no errors, continue. Otherwise, clear and go to error routine.
www.maximintegrated.com                                                                                 Maxim Integrated │ 20


MAX17841B                                            Automotive SPI Communication Interface (ASCI)
Table 11. Transaction Sequence for UART Write and Read
  SPI DIN    SPI DOUT                                                    DESCRIPTION
   TRANSACTION 1          Load the WRITEALL command sequence into the load queue
   C0h           xxh      WR_LD_Q SPI command byte
   06h           xxh      Message length = 6
   02h           xxh      WRITEALL command byte
   12h           xxh      Register address of the device
   B1h           xxh      LS byte of register data to be written
   B2h           xxh      MS byte of register data to be written
   C4h           xxh      PEC byte for 02h, 12h, B1h, B2h
   00h           xxh      Alive-counter byte (seed value = 0)
   TRANSACTION 2          Start transmitting the WRITEALL sequence from the transmit queue
   B0h           xxh      WR_NXT_LD_Q SPI command byte
   TRANSACTION 3          Check if a message has been received into the receive buffer
   01h           xxh      Read RX_Status register
    xxh         12h       If RX_Status[1] is true, continue. Otherwise, repeat until true or timeout.
   TRANSACTION 4          Read receive buffer to verify the sent WRITEALL message
   93h           xxh      RD_NXT_MSG SPI
    xxh         02h       Sent command byte (WRITEALL)
    xxh         12h       Sent address
    xxh         B1h       Sent LS byte
    xxh         B2h       Sent MS byte
    xxh         C4h       Sent PEC
    xxh         02h       Alive-counter byte (= sent seed + 2, if alive counter enabled)
   TRANSACTION 5          Check for receive buffer errors
   09h           xxh      Read RX_Interrupt_Flags register
    xxh         00h       If no errors, continue. Otherwise, clear and go to error routine.
   TRANSACTION 6          Load the READALL command sequence into the load queue
   C0h           xxh      WR_NXT_LD_Q SPI command byte
   09h           xxh      Message length (5 + 2 x n = 9)
   03h           xxh      READALL command byte
   12h           xxh      Register address
   00h           xxh      Data-check byte (seed value = 00h)
   CBh           xxh      PEC byte for bytes 03h, 12h, 00h
   00h           xxh      Alive-counter byte (seed value = 00h)
   TRANSACTION 7          Start transmitting the READALL sequence
   B0h           xxh      WR_NXT_LD_Q SPI command byte
   TRANSACTION 8          Check if a message has been received into the receive buffer
   01h           xxh      Read the RX_Status register
    xxh         12h       If RX_Status[1] is true, continue. Otherwise, repeat until true or timeout.
www.maximintegrated.com                                                                               Maxim Integrated │ 21


MAX17841B                                              Automotive SPI Communication Interface (ASCI)
Table 11. Transaction Sequence for UART Write and Read (continued)
   SPI DIN     SPI DOUT                                                    DESCRIPTION
                            Read the receive buffer and verify that the device register data is what was written during the
      TRANSACTION 9
                            WRITEALL sequence
      93h         xxh       RD_NXT_MSG SPI command byte
      xxh         03h       Sent command byte (READALL)
      xxh         12h       Sent register address
      xxh         B1h       LS byte of device 1
      xxh         B2h       MS byte of device 1
      xxh         B1h       LS byte of device 0
      xxh         B2h       MS byte of device 0
      xxh         00h       Data-check byte (= 00h if all status bits have been cleared)
      xxh         67h       PEC (for the previous 7 bytes)
      xxh         02h       Alive-counter byte (= sent seed + 2, if alive counter is enabled)
     TRANSACTION 10         Check for receive buffer errors
      09h         xxh       Read RX_Interrupt_Flags register
      xxh         00h       If no errors, continue. Otherwise, clear and go to error routine.
Error Checking                                                          identify each message sent by sending up to 256 different
It is highly recommended that the host utilize the various              seed values for the alive-counter byte. The host should
error checking features available in both the ASCI and the              increment the seed value every time a message is sent
battery management UART protocol to ensure the integ-                   by the host so that its propagation through the daisy chain
rity of the data being received. The host should implement              can be verified in the received data. The alive-counter
the following verifications:                                            byte is sent after the PEC byte and therefore the PEC is
                                                                        not affected.
● Verification of write data received (matching values,
     number of bytes)                                                   Corrupted Message Content
● Verification of read data received (allowed values,                   Manchester, parity, and PEC errors are indications that
     ranges, number of bytes)                                           the data in the message may have been corrupted. For
                                                                        each UART message received, the host should perform
● Verification of the received PEC, data-check, and
                                                                        the appropriate computations on any error-checking bytes
     alive-counter bytes
                                                                        that may be available in the received message:
● Verification of ASCI FMEA register
                                                                        ● Data-Check byte: Error status provided by the slave
● Verification of the ASCI status bits (RX_Error_                          device(s); sent and returned on reads of slave device
     Status, RX_Overflow_Status, TX_Overflow_Status,                       data as described in the slave device data sheet.
     POR_Flag)
                                                                        ● PEC byte: CRC-8 packet error-checking byte provided
Corrupted Preamble Character                                               by the slave device(s); sent and returned with every
If the preamble for a message is corrupted, none of the                    message as described in the slave device data sheet.
message is entered into the receive buffer. To detect                   ● Alive-Counter byte: Used to verify the number of
this failure mode, the host should always verify that any                  devices responding to a transmitted message; can be
message that it transmitted was also received into the                     sent and received with every message as described in
receive buffer. In the case where the host is polling a                    the slave device data sheet.
register (identical messages) then the host can uniquely
www.maximintegrated.com                                                                                           Maxim Integrated │ 22


MAX17841B                                             Automotive SPI Communication Interface (ASCI)
The host should also set the ASCI’s RX_Error_INT_Enable          corrupted data character within a message, then the mes-
bit. If, in the course of reading the receive buffer, the ASCI   sage is prematurely terminated and a second, unexpected
sets the RX_Error_INT_Flag, it means that the UART had           message is created. This event can be detected by
detected a Manchester and/or parity error in at least one        comparing the number of received bytes in the message
of the received characters in the message. Because               to the expected number.
Manchester and parity errors can be introduced anywhere
                                                                 Unintended Stop Character
in the UART data stream, the errors denoted by the RX_
Error_INT_Flag are not necessarily reflected in the error-       The presence of an unintended stop character prema-
checking bytes returned by the slave device(s). Therefore,       turely terminates the message. This is detected by com-
the host should check and clear this flag after (but not         paring the number of received bytes in the message to the
before) reading each message in the receive buffer.              expected number.
Corrupted or Missing Stop Character                              UART Physical Layer
If a stop character is corrupted or missing, there is no data    Single-Ended Mode
loss because the message is still framed either by a sub-        By default, UART ports are configured for differential
sequent valid stop character (that is automatically sent in      communication. For single-ended operation, the host can
Keep-Alive mode) or by the preamble of the next UART mes-        set the Single_Ended_Mode configuration bit. This mode
sage. A corrupted stop character can be interpreted as a data    enables the UART to receive a single-ended signal by
character and would be stored as such in error. In this case,    shifting the input threshold negative so that zero differen-
if a valid stop character is eventually received before the next tial voltage is a logic one. The RXP input is connected to
preamble, the message length is one byte too long. The host      ground and the RXN input receives the inverted signal,
should check for this condition by computing the received        just as it does for differential mode. In this mode, the Tx
message length and comparing it to the expected message          port operates the same as in differential mode.
length.
Before reading the next message, the host should also check
the RX_Byte register to verify that the last character received
was a valid stop character, in which case all of the following
                                                                                                         RXP
are true:
1) The last byte in the message is a null byte (00h).
2) The Last_Byte bit is set.                                                             1.5kΩ
                                                                                                         RXN
3) The Byte_Error bit is cleared.
                                                                                              15pF
If a stop character was not received then the Last_Byte
                                                                                                         GNDL
bit is not set.
Unintended Preamble
The presence of an unintended preamble in the middle
of a message creates an unintended message in the
receive buffer. If the unintended preamble is the result of a    Figure 13. Single-Ended Mode
www.maximintegrated.com                                                                                  Maxim Integrated │ 23


MAX17841B                                          Automotive SPI Communication Interface (ASCI)
UART Transformer Coupling                                   A common-mode noise filter can be implemented by
The UART signals can be transformer-coupled because         capacitively coupling the center tap of the transformer on
of the DC-balanced signaling. Placing an isolation trans-   the transmitter side to the UART ground. Any common-
former between the UART’s transmitter and the slave         mode noise that passes through the transformer is effec-
device’s receiver provides common-mode isolation for        tively shunted to ground.
the case where the slave device is operating at a different UART Supplemental ESD Protection
voltage level.
                                                            The UART transmitter and receiver, with supplemental
When no data is being transmitted (idle state), the trans-  protection diodes as shown in the application circuits, can
mitter drives both outputs to a logic low level to prevent  be used for enhanced ESD protection. The diodes should
any current flow through the transformer winding.           be placed as close as possible to the external connector.
                       MAX17841B                                                MAX178XX
                                                                                BATTERY MANAGEMENT
                                                                                DEVICE
                                                                         15pF
                                          47Ω                  1.5kΩ
                              TXP                                               RXLP
                                                               1.5kΩ
                                                                                RXLN
                                                                         15pF
                                          47Ω
                              TXN                                               GNDL
                                              10nF
                             GNDL
Figure 14. Transformer Coupling of UART Signals
                                                                     1nF                                 15pF
                         47Ω                                        600V                           1.5kΩ  50V
              TXP                                                                                                    RXP
                                                                     1nF
                         47Ω                                        600V                           1.5kΩ
              TXN                                                                                                    RXN
                                                                                       100kΩ   100kΩ
             GNDL                                                                                        15pF
                                                                                                          50V
                                 PESD1CAN                              PESD1CAN
                                                                                                                     GNDL
Figure 15. Supplemental ESD Protection for UART Transmitter Figure 16. Supplemental ESD Protection for UART Receiver
                                                            (Shown with Capacitive Coupling)
www.maximintegrated.com                                                                               Maxim Integrated │ 24


MAX17841B                                              Automotive SPI Communication Interface (ASCI)
Internal ESD Protection
                                                      MAX17841B ESD DIODES
                                                                                                       RXP, RXN
                                                                                                       CS, SCLK,
                             VAA                                                                       DIN, INT
                           DOUT                                                                        TXP, TXN
                            DCIN                                                                       VDDL
                           SHDN                                                                        CTG
                          AGND                                                                         GNDL
                                 ALL DIODES ARE RATED FOR ESD CLAMPING CONDITIONS. THEY ARE NOT INTENDED
                                 TO ACCURATELY CLAMP DC VOLTAGE. ALL DIODES SHOWN HAVE A PARASITIC
                                 PN DIODE FROM THEIR CATHODE TO AGND THAT IS OMITTED FOR CLARITY.
                                 THIS PARASITIC DIODE HAS ITS ANODE AT AGND.
Figure 17. ESD Diode Diagram
www.maximintegrated.com                                                                                          Maxim Integrated │ 25


MAX17841B                                Automotive SPI Communication Interface (ASCI)
Register Table
  READ ADDRESS         WRITE ADDRESS DEFAULT VALUE                                  NAME
       0x01                  NA             11h         RX_Status
       0x03                  NA             13h         TX_Status
       0x05                 0x04            00h         RX_Interrupt_Enable
       0x07                 0x06            00h         TX_Interrupt_Enable
       0x09                 0x08            00h         RX_Interrupt_Flags
       0x0B                 0x0A            80h         TX_Interrupt_Flags
       0x0D                 0x0C            60h         Configuration_1
       0x0F                 0x0E            10h         Configuration_2
        0x11                0x10            0Fh         Configuration_3
       0x13                  NA             00h         FMEA
       0x15                  NA             84h         Model
       0x17                  NA             12h         Version
       0x19                  NA             01h         RX_Byte
       0x1B                  NA             3Eh         RX_Space
       0x95                  NA             00h         TX_Queue_Selects
       0x97                  NA             00h         RX_Read_Pointer
       0x99                  NA             01h         RX_Write_Pointer
       0x9B                  NA             00h         RX_Next_Message
 RX_STATUS REGISTER
  ADDRESS          BITS      DEFAULT          NAME                                 DESCRIPTION
                                                               The data byte at location RX_RD_Pointer may
                                                               contain an error (the corresponding character
                     7           0   RX_Error_Status           contained a Manchester and/or parity error). This
                                                               bit is set when the byte is read, not when the byte is
                                                               received or written.
                     6           0   Reserved                  Always reads logic zero.
                     5           0   RX_Busy_Status            The UART is busy receiving data.
                     4           1   RX_Idle_Status            The UART is not receiving data.
                                                               The data byte at location RX_WR_POINTER in the
                                                               receive buffer was overwritten because the receive
                     3           0   RX_Overflow_Status
                                                               buffer was full. Cleared when the receive buffer is not
     0x01
                                                               full (when the buffer is read).
    (Read)
   (Note 1)                                                    The number of empty bytes in the receive buffer is
                     2           0   RX_Full_Status            less than the length of the message in the transmit
                                                               queue.
                                                               The UART has finished receiving a properly framed
                                                               message (stop character) and it is ready to be read.
                                                               The UART clears this bit after all unread messages
                     1           0   RX_STOP_Status
                                                               have been read or if the UART detects a new
                                                               preamble character. The UART does not set this bit if
                                                               the buffer is empty and it receives a stop character.
                                                               The receive buffer is cleared and contains no unread
                     0           1   RX_Empty_Status
                                                               data (RX_RD_Pointer = RX_WR_Pointer - 1).
www.maximintegrated.com                                                                          Maxim Integrated │ 26


MAX17841B                           Automotive SPI Communication Interface (ASCI)
Register Table (continued)
 TX_STATUS REGISTER
   ADDRESS         BITS DEFAULT          NAME                                DESCRIPTION
                     7      0   Reserved                Always reads logic zero.
                     6      0   Reserved                Always reads logic zero.
                     5      0   TX_Busy_Status          The UART is busy transmitting data.
                     4      1   TX_Idle_Status          The UART is not transmitting data.
                                                        LD_Q could not be incremented because the next
      0x03           3      0   TX_Overflow_Status      queue contained untransmitted data. Any writes in
     (Read)                                             this state overwrite the load queue.
    (Note 1)                                            All queues in the transmit buffer are full except the
                     2      0   TX_Full_Status
                                                        load queue (LD_Q = TX_Q - 1).
                                                        One or more queues in the transmit buffer are
                     1      1   TX_Available_Status
                                                        available for loading (TX_Full_Status is false).
                                                        All the queues in the Transmit Buffer are cleared and
                     0      1   TX_Empty_Status
                                                        available for loading (LD_Q = TX_Q).
 RX_INTERRUPT_ENABLE REGISTER
                     7      0   RX_Error_INT_Enable      Interrupt enable for RX_Error_Status
                     6      0   Reserved                 Always reads logic zero.
                     5      0   RX_Busy_INT_Enable       Interrupt enable for RX_Busy_Status
  0x04 (Write)       4      0   RX_Idle_INT_Enable       Interrupt enable for RX_Idle_Status
  0x05 (Read)        3      0   RX_Overflow_INT_Enable   Interrupt enable for RX_Overflow_Status
                     2      0   RX_Full_INT_Enable       Interrupt enable for RX_Full_Status
                     1      0   RX_Stop_INT_Enable       Interrupt enable for RX_Stop_Status
                     0      0   RX_Empty_INT_Enable      Interrupt enable for RX_Empty_Status
 TX_INTERRUPT_ENABLE REGISTER
                    7:6    00   Reserved                 Always reads logic zero.
                     5      0   TX_Busy_INT_Enable       Interrupt enable for TX_Busy_Status
                     4      0   TX_Idle_INT_Enable       Interrupt enable for TX_Idle_Status
  0x06 (Write)
                     3      0   TX_Overflow_INT_Enable   Interrupt enable for TX_Overflow_Status
  0x07 (Read)
                     2      0   TX_Full_INT_Enable       Interrupt enable for TX_Full_Status
                     1      0   TX_Available_INT_Enable  Interrupt enable for TX_Not_Full_Status
                     0      0   TX_Empty_INT_Enable      Interrupt enable for TX_Empty_Status
www.maximintegrated.com                                                                   Maxim Integrated │ 27


MAX17841B                            Automotive SPI Communication Interface (ASCI)
Register Table (continued)
 RX_INTERRUPT_FLAG REGISTER
   ADDRESS         BITS DEFAULT          NAME                               DESCRIPTION
                     7     0    RX_Error_INT_Flag     Interrupt flag for RX_Error_Status
                     6     0    Reserved              Always reads logic zero.
                     5     0    RX_Bus_ INT_Flag      Interrupt flag for RX_Busy_Status
  0x08 (Write)
                     4     0    RX_Idle_INT_Flag      Interrupt flag for RX_Idle_Status
  0x09 (Read)
                     3     0    RX_Overflow_INT_Flag  Interrupt flag for RX_Overflow_Status
  (Notes 2, 3)
                     2     0    RX_Full_INT_Flag      Interrupt flag for RX_Full_Status
                     1     0    RX_Stop_INT_ Flag     Interrupt flag for RX_Stop_Status
                     0     0    RX_Empty_INT_Flag     Interrupt flag for RX_Empty_Status
 TX_INTERRUPT_FLAG REGISTER
                                                       Set by power-on-reset event and cleared only by
                     7     1    POR_Flag               writing to logic zero. Has no effect on state of the INT
                                                       pin.
                     6     0    Reserved               Always reads logic zero.
  0x0A (Write)
                     5     0    TX_Busy_INT_Flag       Interrupt flag for TX_Busy_Status
  0x0B (Read)
                     4     0    TX_Idle_INT_Flag       Interrupt flag for TX_Idle_Status
  (Notes 2, 3)
                     3     0    TX_Overflow_INT_Flag   Interrupt flag for TX_Overflow_Status
                     2     0    TX_Full_INT_Flag       Interrupt flag for TX_Full_Status
                     1     0    TX_Available_INT_Flag  Interrupt flag for TX_Available_Status
                     0     0    TX_Empty_INT_Flag      Interrupt flag for TX_Empty_Status
 CONFIGURATION_1 REGISTER
                                                       Enables the UART to receive a single-ended
                                                       signal by shifting the input threshold negative (zero
                                                       differential voltage is a logic one). In this mode, the
                                                       RXP input should be connected to ground and the
                     7     0    Single_Ended_Mode
                                                       RXN input should receive the inverted signal, same
                                                       as for differential mode. In this mode, the Tx port
                                                       operates the same as in differential mode. Default is
  0x0C (Write)                                         differential mode.
  0x0D (Read)
                                                       Configures the UART baud rate as follows:
                                                       00 = 500kbps
                    6:5    11   Baud_Rate [1:0]        01 = 500kbps
                                                       10 = 1Mbps
                                                       11 = 2Mbps (default)
                                                       Not used by the ASCI. Can be used by the host to
                    4:0    0    Device_Count [4:0]
                                                       store the device count or for general-purpose use.
www.maximintegrated.com                                                                   Maxim Integrated │ 28


MAX17841B                           Automotive SPI Communication Interface (ASCI)
Register Table (continued)
 CONFIGURATION_2 REGISTER
   ADDRESS         BITS DEFAULT         NAME                          DESCRIPTION
                                                 Receive Raw Data Mode: Disables Manchester
                                                 decoding of the received data. In this mode, there is
                     7     0    RX_Raw_Data
                                                 one data byte stored for every one character received
                                                 (instead of every two received).
                                                 Transmit Raw Data Mode: Disables Manchester
                                                 encoding of transmitted data. In this mode, each data
                     6     0    TX_Raw_Data
                                                 byte is transmitted as one character (instead of two
                                                 characters).
                                                 Transmit Preambles Mode: Transmits preambles
                     5     0    TX_Preambles     continuously. This mode takes precedence over all
                                                 transmit modes except Transmit Pause mode.
                                                 Transmit Queue Mode: Enables transmission of the
                                                 message loaded in the Transmit Queue IF 1) there is
                     4     1    TX_Queue         sufficient space in the Receive Buffer for the message
                                                 (RX_Full_Status is false) OR 2) the limitations on
                                                 message length are removed (TX_Unlimited is set).
                                                 Transmit Odd Parity Mode: Transmits characters with
                                                 odd parity. Since the UART protocol uses even parity,
                     3     0    TX_Odd_Parity
                                                 this mode can be used to test the system’s ability to
                                                 detect parity errors. Even parity is default.
  0x0E (Write)
                                                 Transmit Pause Mode: Places the transmitter into
  0x0F (Read)
                                                 idle state once the UART has finished transmitting
                                                 the current byte, however, the TX_Busy_Status and
                                                 TX_Idle_Status bits remain unchanged. Transmission
                     2     0    TX_Pause
                                                 resumes when this bit is cleared. Note: This mode
                                                 takes precedence over all other transmit modes
                                                 (Transmit Preambles, Transmit Queue, and Keep-
                                                 Alive modes).
                                                 Transmit No Stop Mode: Transmits messages without
                                                 a stop character. By sending subsequent messages
                                                 with the TX_No_Preamble bit set, a framed message
                     1     0    TX_No_Stop
                                                 of indefinite length can be constructed. The
                                                 TX_Unlimited bit must be set for messages greater
                                                 than 62 bytes.
                                                 Transmit No Preamble Mode: Transmits messages
                                                 without a preamble. By first sending a message in
                                                 which the TX_No_Stop bit is set and then sending
                                                 messages with this bit set, a framed message of
                     0     0    TX_No_Preamble   indefinite length can be constructed. However, if
                                                 the preceding message is terminated with a stop
                                                 character (end of frame), then the data sent in this
                                                 mode is unframed (no preamble) and is not stored in
                                                 the receive buffer.
www.maximintegrated.com                                                             Maxim Integrated │ 29


MAX17841B                             Automotive SPI Communication Interface (ASCI)
Register Table (continued)
 CONFIGURATION_3 REGISTER
   ADDRESS         BITS DEFAULT            NAME                          DESCRIPTION
                     7       0   Reserved          Always reads logic zero.
                     6       0   Reserved          Always reads logic zero.
                                                   In this mode, the transmit queue automatically limits
                                                   the message length to 255 bytes instead of the
                     5       0   TX_Unlimited      default 62-byte limit, and the message transmission is
                                                   permitted even if the message length is greater than
                                                   the available write space in the receive buffer.
                                                   SPI Output Enable: Asserts DOUT pin. Default is
                     4       0   DOUT_Enable
                                                   three-stated.
                                                   Keep-Alive Mode: Periodically sends a stop character
                                                   to prevent slave devices from shutting down during
                                                   periods of no communication (idle state). The idle
                                                   time in between the periodic stop characters is based
  0x10 (Write)                                     on the 4-bit value below. The default setting is infinite
      0x11                                         (mode disabled). Note: the Transmit Pause, Transmit
     (Read                                         Preambles, and the Transmit Queue modes take
                                                   precedence over this mode.
                                                   0000 = 0µs
                                                   0001 = 10µs
                    3:0    1111  Keep_Alive [3:0]  0010 = 20µs
                                                   0011 = 40µs
                                                   0100 = 80µs
                                                   0101 = 160µs
                                                   0110 = 320µs
                                                   0111 = 640µs
                                                   1000 = 1.28ms
                                                   1001 = 2.56ms
                                                   1010 = 5.12ms
                                                   1011 = 10.24ms
                                                   1111 = Infinite delay/disabled (default)
 FMEA REGISTER
                    7:3   00000  Reserved           Always reads logic 0.
                     2       0   AGND_Alert         Indicates VAGND - VGNDL > 0.2V
  0x13 (Read)
                     1       0   VDDL_Alert         Indicates VAA - VDDL > 0.3V
                     0       0   GNDL_Alert         Indicates VGNDL - VAGND > 0.2V
 MODEL REGISTER
  0x15 (Read)       7:0 10000100 Model [11:4]       First two digits of the Model Number (84h)
 VERSION REGISTER
                    7:4    0001  Model [3:0]        Last digit of the Model Number (1h)
  0x17 (Read)
                    3:0    0010  Version [3:0]      Mask revision (2)
www.maximintegrated.com                                                               Maxim Integrated │ 30


MAX17841B                                             Automotive SPI Communication Interface (ASCI)
Register Table (continued)
 RX_BYTE REGISTER
   ADDRESS           BITS         DEFAULT                   NAME                                      DESCRIPTION
                      7:3          00000        Reserved                        Always reads logic zero.
                                                                                The byte at location RX_RD_Pointer is the first data
                       2               0        First_Byte                      byte in a message (the corresponding character was
                                                                                preceded by preamble character).
                                                                                The byte at location RX_RD_Pointer may contain
  0x19 (Read)                                                                   an error (the corresponding character contained a
                       1               0        Byte_Error
                                                                                Manchester and/or parity error). This bit drives the
                                                                                RX_Error interrupt.
                                                                                The byte at location RX_RD_Pointer is the last byte in
                       0               0        Last_Byte                       a message (the corresponding character was a stop
                                                                                character and was stored as a null byte).
 RX_SPACE REGISTER
                                                                                 Number of available bytes in the receive buffer.
  0x1B (Read)         7:0         00111110      RX_Space [7:0]
                                                                                 Default is 62 bytes (3Eh).
 TX_QUEUE_SELECTS REGISTER
                      7:4           0000        Reserved                         Always reads logic zero.
                                                                                 Transmit Queue Select: Addresses one of four
                      3:2             00        TX_Q [1:0]                       queues in the transmit buffer that the UART has
  0x95 (Read)                                                                    selected for message transmission (sending).
                                                                                 Load Queue Select: Addresses one of four queues
                      1:0             00        LD_Q [1:0]                       in the transmit buffer that the host has selected for
                                                                                 message loading (writing).
 RX_READ_POINTER REGISTER
                                                                                 Receive Buffer Read Pointer: The location in the
  0x97 (Read)         7:0            00h        RX_RD_Pointer [7:0]              receive buffer that the host is to read. The UART
                                                                                 automatically increments this pointer.
 RX_WRITE_POINTER REGISTER
                                                                                 Receive Buffer Write Pointer: The location in the
  0x99 (Read)         7:0            01h        RX_WR_Pointer [7:0]              receive buffer that is written by the UART as it
                                                                                 receives data.
 RX_NEXT_MESSAGE REGISTER
                                                                                 Receive Buffer Next Message Pointer: The start of
                                                RX_NXT_MSG_                      the next unread message in the receive buffer. The
  0x9B (Read)         7:0            00h
                                                Pointer [7:0]                    RX_RD_Pointer is loaded with this value by the
                                                                                 RD_NXT_MSG SPI transaction.
Note 1: A status bit is set when its corresponding condition is true and is cleared when the condition is false.
Note 2: An interrupt flag (except the POR_Flag) is set only when its interrupt enable bit is true and its corresponding status bit goes
        from a logic zero state to logic one state. The flag can only be cleared by writing it to a logic zero.  If the status bit is true
        when the flag enable is set or when the flag is cleared, the flag remains cleared until the status bit transitions from a logic
        zero state to a logic one state.
Note 3: If any interrupt flag (except the POR_Flag) is set, then the INT pin is asserted (active low).
www.maximintegrated.com                                                                                              Maxim Integrated │ 31


MAX17841B                                        Automotive SPI Communication Interface (ASCI)
Ordering Information                                      Package Information
        PART            TEMP RANGE        PIN-PACKAGE     For the latest package outline information and land patterns
                                                          (footprints), go to www.maximintegrated.com/packages. Note
 MAX17841BGUE+         -40°C to +105°C      16 TSSOP      that a “+”, “#”, or “-” in the package code indicates RoHS status
 MAX17841BGUE/V+       -40°C to +105°C      16 TSSOP      only. Package drawings may show a different suffix character, but
+Denotes a lead(Pb)-free/RoHS-compliant package.          the drawing pertains to the package regardless of RoHS status.
/V denotes an automotive qualified part.
                                                             PACKAGE             PACKAGE       OUTLINE          LAND
                                                                TYPE                CODE          NO.       PATTERN NO.
                                                             16 TSSOP               U16+1       21-0066        90-0117
www.maximintegrated.com                                                                               Maxim Integrated │ 32


MAX17841B                                                         Automotive SPI Communication Interface (ASCI)
Revision History
  REVISION         REVISION                                                                                                                             PAGES
                                                                                DESCRIPTION
  NUMBER              DATE                                                                                                                          CHANGED
        0               9/13        Initial release                                                                                                        —
        1               2/14        Added MAX17842B to data sheet                                                                                        1–33
        2               1/15        Deleted MAX17842B from data sheet                                                                                    1–33
For information on other Maxim Integrated products, visit Maxim Integrated’s website at www.maximintegrated.com.
Maxim Integrated cannot assume responsibility for use of any circuitry other than circuitry entirely embodied in a Maxim Integrated product. No circuit patent licenses
are implied. Maxim Integrated reserves the right to change the circuitry and specifications without notice at any time. The parametric values (min and max limits)
shown in the Electrical Characteristics table are guaranteed. Other parametric values quoted in this data sheet are provided for guidance.
Maxim Integrated and the Maxim Integrated logo are trademarks of Maxim Integrated Products, Inc.                 © 2015 Maxim Integrated Products, Inc. │ 33
