                                                                                            XR88C681
                                                                                         CMOS Dual Channel
                                                                                                 UART (DUART)
                                                                                                              June 2006
FEATURES
D Two Full Duplex, Independent Channels                       D Programmable Interrupt Daisy Chain
D Asynchronous Receiver and Transmitter                       D 8 General Purpose Outputs (40 Pin DIP and 44 Pin
D Quadruple-Buffered Receivers and Dual Buffered                  PLCC Packages Only)
    Transmitters                                              D 7 General Purpose Inputs with Change of States
D Programmable Stop Bits in 1/16 Bit Increments                   Detectors on Inputs (40 Pin DIP and 44 Pin PLCC
D Internal Bit Rate Generators with More than 23 Bit              Packages Only)
    Rates                                                     D Multi-Drop Mode Compatible with 8051 Nine Bit
D Independent Bit Rate Selection for Each Transmitter             Mode
    and Receiver                                              D On-Chip Oscillator for Crystal
D External Clock Capability                                   D Standby Mode to Reduce Operating Power
D Maximum Bit Rate: 1X Clock - 1Mb/s, 16X Clock -             D Compatible with the Motorola MC2681 and
    125kb/s                                                       Signetics SCC2692 devices
D Normal, AUTOECHO, Local LOOPBACK and                        D Advanced CMOS Low Power Technology
    Remote LOOPBACK Modes
D Multi-function 16 Bit Counter/Timer                         APPLICATIONS
D Interrupt Output with Eight Maskable Interrupt              D Multimedia Systems
    Conditions
                                                              D Serial to Parallel/Parallel to Serial Converter
D Interrupt Vector Output on Acknowledge (40 Pin DIP
    and 44 Pin PLCC Packages Only)                            D DTE for Modem Communication Systems
GENERAL DESCRIPTION
The EXAR Dual Universal Asynchronous Receiver and             The DUART is fabricated using advanced two layer metal,
Transmitter (DUART) is a data communications device that      with a high performance density EPI/CMOS 1.8 process
provides two fully independent full duplex asynchronous       to provide high performance and low power consumption,
communication channels in a single package. The DUART         and is packaged in a 40 pin PDIP, a 28 pin PDIP, and a 44
is designed for use in microprocessor based systems and       pin PLCC.
may be used in a polled or interrupt driven environment.
The XR88C681 device offers a single IC solution for the
8080/85, 8086/88, Z80, Z8000, 68xx and 65xx
microprocessor families.
ORDERING INFORMATION
                                                                                         Operating
                    Part No.                         Pin Package
                                                                                    Temperature Range
                  XR88C681CJ                           44 PLCC                          0°C to 70°C
                XR88C681CN/40                          40 CDIP                          0°C to 70°C
                XR88C681CP/28                          28 PDIP                          0°C to 70°C
                XR88C681CP/40                          40 PDIP                          0°C to 70°C
                   XR88C681J                           44 PLCC                        -40°C to +85°C
                 XR88C681N/40                          40 CDIP                        -40°C to +85°C
                 XR88C681P/28                          28 PDIP                        -40°C to +85°C
                 XR88C681P/40                          40 PDIP                        -40°C to +85°C
     Rev. 2.11
     E2006


XR88C681
         TXDA      RXDA              TXDB       RXDB                         IP0 - IP6                   OP0 - OP7
         TSR        RSR              TSR        RSR                           IPR                          OPR
                                                                          Change of
                                                                        State Detectors                Output Port
          THR        RHR              THR       RHR                                                   Function Select
                                                                                                           Logic
                                                                               IPCR
         Mode Registers               Mode Registers
                                                                                                           OPCR
                                                                               ACR
         Status Register              Status Register
            Channel A                   Channel B                          Input Port                   Output Port
                                                   Internal Data Bus
                         Operation Control                Interrupt Control                     Timing
                                                                IVR                     CSRA              CSRB
                            CRA     CRB                                                        Bit Rate
        Data                                                   MISR
        Bus                                                                                   Generator
        Buffer           Command Decoder                        IMR                         Counter/Timer
                          Address Decoder                       ISR                           Oscillator
      D0 - D7   A0 - A3    -RD -WR    -CS RESET        IEI IEO -IACK -INTR                  X1/CLK      X2
                                    Figure 1. Block Diagram of the XR88C681
 Rev. 2.11
                                                                2


                                                                                                                                                                           XR88C681
PIN CONFIGURATION
                                                                                        42 IP5/IEO   41 -IP6/IACK
                                                                      44 Vcc                                                                                     A0   1         40   VCC
                  6 A2    5 IP1   4 A1     3 IP3             1 NC                                                    40 IP2
                                                    A0                                                                                                          IP3   2         39   IP4/IEI
                                                    2                 43 IP4/IEI                                                                                 A1   3         38   IP5/IEO
                                                                                                                                                                IP1   4         37   -IP6/IACK
                                                                                                                                                                 A2   5         36   IP2
       A3    7                                                                                                                     39 CS                         A3   6         35   -CS
      IP0    8                                                                                                                     38 -RESET                    IP0   7         34   RESET
    -WR      9                                                                                                                     37 X2                      -WR     8         33   X2
     -RD    10                                                                                                                     36 X1/CLK                   -RD    9         32   X1/CLK
   RXDB     11                                                                                                                     35 RXDA                   RXDB     10        31   RXDA
      NC    12                              XR-68C681CJ                                                                            34   NC                   TXDB     11        30   TXDA
   TXDB     13                                 PLCC                                                                                33   TXDA                  OP1     12        29   OP0
    OP1     14                                                                                                                     32   OP0                   OP3     13        28   OP2
    OP3     15                                                                                                                     31 OP2                     OP5     14        27   OP4
    OP5     16                                                                                                                     30 OP4                     OP7     15        26   OP6
    OP7     17                                                                                                                     29 OP6                      D1     16        25   D0
                                                                                                                                                               D3     17        24   D2
                 D1 18   D3 19    D5 20   D7 21             NC 23              D6 25   D4 26         D2 27          D0 28
                                                   GND 22           -INTR 24
                                                                                                                                                               D5     18        23   D4
                                                                                                                                                               D7     19        22   D6
                                                                                                                                                              GND     20        21   -INTR
                                          44 Lead PLCC                                                                                                       40 Lead PDIP, CDIP (0.600”)
                                                                                                               A0              1               28   VCC
                                                                                                               A1              2               27   IP2
                                                                                                               A2              3               26   -CS
                                                                                                               A3              4               25   RESET
                                                                                                        -WR                    5               24   X2
                                                                                                          -RD                  6               23   X1/CLK
                                                                                                     RXDB                      7               22   RXDA
                                                                                                     TXDB                      8               21   TXDA
                                                                                                        OP1                    9               20   OP0
                                                                                                              D1              10               19   D0
                                                                                                              D3              11               18   D2
                                                                                                              D5              12               17   D4
                                                                                                              D7              13               16   D6
                                                                                                      GND                     14               15   -INTR
                                                                                                               28 Lead PDIP (0.600”)
   Rev. 2.11
                                                                                                                                        3


 XR88C681
PIN DESCRIPTION
  44 PLCC      40 PDIP, 28 PDIP   Symbol    Type   Description
                CDIP
      1                               NC           No Connection.
      2            1       1          A0      I    LSB of Address Input. This input, along with Address Inputs,
                                                   A1 - A3 are used to select certain registers within the DUART
                                                   device, during READ and WRITE operations with the CPU.
      3            2                  IP3     I    Input Port 3. General Purpose Input - When the DUART is
                                 (TXCA - I)        operating in the I-mode, this input can also be used as the
                                (RXCA - Z)         external clock input for the Channel A Transmitter (TXCA).
                                                   When the DUART is operating in the Z-Mode, this input can
                                                   be used as the external clock input for the Channel A Receiv-
                                                   er (RXCA).
      4            3       2          A1      I    Address Input.
      5            4                  IP1     I    Input Port 1. General Purpose Input - This input can also be
                                  (-CTSB)          used as the Active Low, “Channel B Clear to Send” input.
                                                   (-CTSB)
      6            5       3          A2      I    Address Input.
      7            6       4          A3      I    MSB of Address Input. This input, along with Address In-
                                                   puts, A0 - A2 are used to select certain registers within the
                                                   DUART device, during READ and WRITE operations with the
                                                   CPU.
      8            7                  IP0     I    Input 0. General Purpose Input - This input can also be used
                                  (-CTSA)          as the active-low, “Channel A Clear-to-Send” input. (-CTSA)
      9            8       5         -WR      I    Write Strobe (Active-Low). A “low” on this input while -CS is
                                                   also “low” writes the contents of the Data Bus into the ad-
                                                   dressed register, within the DUART. The transfer occurs on
                                                   the rising edge of -WR.
     10            9       6         -RD      I    Read Strobe (Active Low). A “low” on this input while -CS is
                                                   also “low” places the contents of the addressed DUART regis-
                                                   ter, on the data bus.
     11           10       7       RXDB       I    Receive Serial Data Input (Channel B). The least significant
                                                   bit of the character is received first. If external receiver clock,
                                                   RXCB, is specified, the data is sampled on the rising edge of
                                                   this clock.
     12                               NC           No Connect.
     13           11       8        TXDB     O     Transmitter Serial Data Output (Channel B). The least sig-
                                                   nificant bit of the character is transmitted first. This output is
                                                   held in the high (marking state) when the transmitter is idle,
                                                   disabled, or when the channel is operating in the local LOOP-
                                                   BACK mode. If an external transmitter clock is specified,
                                                   TXCB, the transmitted data is shifted out of the TSR (Trans-
                                                   mitter Shift Register) on the falling the edge of this clock.
     Rev. 2.11
                                                 4


                                                                                 XR88C681
44 PLCC      40 PDIP, 28 PDIP   Symbol   Type   Description
              CDIP
   14           12       9         OP1     O    Output 1 (General Purpose Output). This output can also
                                (-RTSB)         be programmed to function as the active-low, “Channel B
                                                Request-to-Send” Output (-RTSB).
   15           13                 OP3     O    Output 3 (General Purpose Output). This output port can
                              (TXCB_1X)         also be programmed to function as: the “Channel B Trans-
                              (RXCB_1X)         mitter 1X clock” output (TXCB_1X), the “Channel B Receiv-
                              (-C/T_RDY)        er 1X clock” output (RXCB_1X), or the open drain, active-
                                                low “Counter/Timer Ready” output (-C/T_RDY).
   16           14                 OP5     O    Output 5 (General Purpose Output Pin). This output port
                               (-RXRDY/         pin can also be programmed to function as the open-drain,
                              -FFULL_B)         active-low, Channel B “Receive Ready” or “Receiver FIFO
                                                Full” indicator output (-RXRDY_B/-FFULL_B).
   17           15                 OP7     O    Output 7. (General Purpose Output Pin). This output port
                              (TXRDY_B)         pin can also be programmed to function as the open-drain,
                                                active-low, “Transmitter Ready” indicator output for Channel
                                                B (-TXRDY_B).
   18           16       10         D1    I/O   Bi-Directional Data Bus.
   19           17       11         D3    I/O   Bi-Directional Data Bus.
   20           18       12         D5    I/O   Bi-Directional Data Bus.
   21           19       13         D7    I/O   MSB of the Eight Bit Bi-Directional Data Bus. All transfers
                                                between the CPU and the DUART take place over this bus
                                                (consisting of pins D0 - D7). The bus is tri-stated when the
                                                -CS input is “high”, except during an IACK cycle (in the Z-
                                                Mode).
   22           20       14        GND   PWR    Signal Ground.
   23                               NC          No Connect.
   24           21       15       -INTR    O    Interrupt Request Output (Active Low, Open Drain).
                                                -INTR is asserted upon the occurrence of one or more of the
                                                chip’s maskable interrupting conditions. This signal will re-
                                                main asserted throughout the Interrupt Service Routine and
                                                will be negated once the condition(s) causing the Interrupt
                                                Request has been eliminated.
   25           22       16         D6    I/O   Bi-Directional Data Bus.
   26           23       17         D4    I/O   Bi-Directional Data Bus.
   27           24       18         D2    I/O   Bi-Directional Data Bus.
   28           25       19         D0    I/O   LSB of the Eight Bit Bi-Directional Data Bus. All transfers
                                                between the CPU and the DUART take place over this bus.
                                                The bus is tri-stated when the -CS input is “high”, except
                                                during an IACK cycle (in the Z-Mode).
   29           26                 OP6     O    Output 6 (General Purpose Output). This output pin can
                              (-TXRDY_A)        also be programmed to function as the open drain, active-
                                                low, “Transmitter Ready” indicator output for Channel A
                                                (-TXRDY_A).
   Rev. 2.11
                                              5


XR88C681
44 PLCC      40 PDIP, 28 PDIP    Symbol  Type Description
              CDIP
   30           27                 OP4     O  Output 4 (General Purpose Output). This output pin
                                (RXRDY/       can also be programmed to function as the open-drain,
                               FFULL_A)       active-low, “Receiver Ready” or “FIFO Full” indicator
                                              output for Channel A. (-RXRDY_A/-FFULL_A)
   31           28                 OP2     O  Output 2 (General Purpose Output). This output pin
                              (TXCA_16)       can also be programmed to function as any of the fol-
                               (TXCA-1X)      lowing: The Channel A Transmitter 16X or 1X clock
                              (RXCA_1X)       output (TXCA_16X or TXCA_1X), or the Channel A
                                              Receiver 1X clock output (RXCA_1X).
   32           29       20        OP0     O  Output 0 (General Purpose Output). This output pin
                                 (-RTSA)      can also be programmed to function as the active-low,
                                              Request-to-Send output for Channel A (-RTSA).
   33           30       21       TXDA     O  Transmitter Serial Data Output (Channel A). The
                                              least significant bit of the character is transmitted first.
                                              This output is held in the marking (high) state when the
                                              transmitter is idle, disabled, or operating in the Local
                                              LOOPBACK mode. If an external transmitter clock is
                                              specified, TXCA, the data is shifted out of the TSR
                                              (Transmitter Shift Register) on the falling the edge of
                                              the clock.
   34                               NC        No Connect.
   35           31       22       RXDA     I  Receive Serial Data Input (Channel A). The least
                                              significant bit of the character is received first. If an
                                              external receiver clock, RXCA, is specified, the data is
                                              sampled on the rising edge of the clock.
   36           32       23      X1/CLK    I  Crystal Output of External Clock Input. This pin is
                                              the connection for one side of the crystal and a capaci-
                                              tor to ground when the internal oscillator is used. If the
                                              oscillator is not used, an external clock signal must be
                                              supplied at this input.
                                              In order for the XR88C681 device to function properly,
                                              the user must supply a signal with frequencies be-
                                              tween 2.0MHz and 4.0MHz. This requirement can be
                                              met by either a crystal oscillator or by the external
                                              TTL-compatible clock signal.
   37           33       24         X2     O  Crystal Input. Connection for the one side of the crys-
                                              tal (opposite of X1/CLK). If the oscillator is used, a
                                              capacitor must also be connected from this pin to
                                              ground. This pin must be left open if an external clock
                                              is supplied at X1/CLK.
   Rev. 2.11
                                         6


                                                                                  XR88C681
44 PLCC      40 PDIP, 28 PDIP  Symbol  Type   Description
              CDIP
   38           34       25    RESET     I    Master Reset (Active High). Asserting this input clears in-
                                              ternal registers, SR, ISR, IMR, OPR, OPCR, and initializes
                                              the IVR to 0F16. Asserting this input also stops the Counter/
                                              Timer, puts OP0 - OP7 in the high state, and places both
                                              serial channels in the inactive state with TXDA and TXDB
                                              outputs marking (high).
   39           35       26       -CS    I    Chip Select (Active Low). The data bus is tri-stated when
                                              -CS is “high.” Data transfers between the CPU and the
                                              DUART via D0 - D7 are enabled when -CS is “low”.
   40           36       27       IP2    I    Input 2. (General Purpose Input). This input pin can also
                              (C/T_EX)        be programmed to function as the “Counter/Timer external
                                              clock” input (C/T_EX).
   41           37                IP6    I    Input 6 (I-Mode). General Purpose Input pin. This input pin
                               (RXCB)         can also be programmed to function as the External Receiv-
                                              er Clock for Channel B (RXCB).
   41           37              -IACK    I    Interrupt Acknowledge Input (Z-Mode). Active Low.
                                              This input is the CPU’s response to the Interrupt Request
                                              issued by the DUART device. When the CPU asserts this
                                              input, it indicates that the DUART’s interrupt request is about
                                              to be serviced, and that the very next cycle will be an Inter-
                                              rupt Acknowledge Cycle. The DUART will respond to the
                                              CPU’s Interrupt Acknowledge by placing the contents of the
                                              Interrupt Vector Register (IVR) on the data bus (D0 - D7).
   42           38                IP5    I    Input 5 (I-Mode). General Purpose Input pin. This pin can
                               (TXCB)         also be configured to function as the external clock input for
                                              the Transmitter of Channel B (TXCB).
   42           38                IEO   O     Interrupt Enable Output (Z-Mode). Active High.
                              (Z-Mode)        This output pin is normally “high”. However, either of the
                                              following two conditions can cause this output pin to be ne-
                                              gated (toggled “low”).
                                              1. If the IEI (Interrupt Enable Input) pin is “low”. If IEO is
                                                   “low” because of the IEI pin, IEO will toggle “high” once
                                                   the IEI has toggled “high”.
                                              2. The DUART has issued an Interrupt Request to the CPU
                                                   (-INTR pin is toggled “low”). If IEO is “low” because the
                                                   DUART has requested an Interrupt, then IEO will remain
                                                   “low”, throughout the Interrupt Service Routine, until the
                                                   CPU has invoked the “” command.
   43           39                IP4    I    Input 4 (I-Mode). General Purpose Input pin. This input pin
                               (RXCA)         can also be configured to function as the external clock input
                                              for the Receiver of Channel A (RXCA).
   43           39                 IEI   I    Interrupt Enable Input (Z-Mode). Active High.
                              (Z-Mode)        If this active-high input is at a logic “high”, the DUART is ca-
                                              pable of generating all non-masked Interrupt Requests to the
                                              CPU. If this input is at a logic “low”, the DUART is inhibited
                                              from generating any Interrupt Requests to the CPU.
   44           40       28      VCC   PWR    Most Positive Power Supply.
   Rev. 2.11
                                            7


   XR88C681
DC ELECTRICAL CHARACTERISTICS1, 2, 3
Test Conditions: TA = 0 - 70°C, VCC = 5V ¦ 5% unless otherwise specified.
    Symbol                  Parameter                Min.      Typ.     Max.        Unit    Conditions
         VIL     Input Low Voltage                    0.5                0.8         V
        VIH      Input High Voltage                   2.0                VCC         V
        VIH      Input High Voltage (Military)        2.2                            V      TA = -55°C to 125°C
      VIHX1      Input High Voltage (X1/CLK)          4.0                VCC         V
       VOL       Output Low Voltage                                      0.4         V      IOL = 2.4mA
       VOH       Output High Voltage                  2.4                            V      IOH = -400 A
         IIL     Input Leakage Current                -25                 25          A     VIN = 0 to VCC
      IILSEL     Select Pin Leakage Current           -30                +30          A     VIN = 0 to VCC
       IX1L      X1 Input Low Current                           -20                   A     VIN = 0
       IX2L      X2 Input Low Current                            -7                 mA
        IXIH     X1 Input High Current                           20                   A     VIN = VCC
       IX2H      X2 Input High Current                           20                   A     VIN = VCC
         ILL     Data Bus Tri-State Leakage           -10                 10          A     VO = 0 to VCC
                 Current
        IOC      Open Drain Output Leakage            -10                 10          A     VO = 0 to VCC
                 Current
       ICCA      Power Supply Current4                            6       15        mA      Active Mode
        ICCS     Power Supply   Current4                          3       10        mA      Standby Mode
Notes
1. Parameters are valid over the specified temperature and operating supply ranges. Typical values are 25°C, V
                                                                                                              CC = 5V and typical
   processing parameters.
2. All voltages are referenced to ground (GND). For testing, input signal levels are 0.4V and 2.4V with a transition time of 20ns
   maximum. All time measurements are referenced at input voltages of 0.8V and 2.0V as appropriate. See Figure 50.
3. For prime grade N, P, J, L, M, ML, V
                                       CC = 5V + 10%.
4. Measured operating with a 3.6864MHz crystal and with all outputs open.
       Rev. 2.11
                                                                 8


                                                                                 XR88C681
AC ELECTRICAL CHARACTERISTICS 1, 2, 3
Test Conditions: TA = 0 - 70°C, VCC = 5V ¦ 5% unless otherwise specified.
   Symbol                  Parameter             Min. Typ.  Max.       Unit Conditions
 Reset Timing (See Figure 51)
     tRES      RESET Pulse Width                 1.0                     A
 XR88C681 Read and Write Cycle Timing (Figure    52)4
       tAS     A0-A3 Setup Time to RD, WR         10                    ns
               Low
       tAH     A0-A3 Hold Time from RD, WR         0                    ns
               Low
       tCS     CS Setup Time to RD, WR Low         0                    ns
      tCH      CS Hold Time from -RD, -WR          0                    ns
               High
      tRW      -RD, -WR Pulse Width              225                    ns
      tDD      Data Valid from -RD Low                 60    175        ns
       tDF     Data Bus Floating from -RD High    10         100        ns
       tDS     Data Setup Time to -WR High       100                    ns
      tDH      Data Hold Time from -WR High        5                    ns
     tRWD      High Time Between Reads                100               ns
               and/or Writes5, 6
 Z-Mode Interrupt Cycle Timing (Figure 53)
      tDIO     IEO Delay Time from IEI                       100        ns
      tIAS     -IACK Setup Time to -RD     Low7                         ns
      tIAH     -IACK Hold Time from -RD High            0               ns
      tEIS     IEI Setup Time to RD Low                50               ns
     tEOD      IEO Delay Time from -INTR Low                 100        ns
 Port Timing (Figure  54)4
       tPS     Port Input Setup Time to            0                    ns
               -RD/-CS Low
       tPH     Port Input Hold Time from           0                    ns
               -RD/-CS High
       tPD     Port Output Valid from -WR/-CS                400        ns
               High
 Interrupt Output Timing (Figure 55)
        tIR    -INTR or OP3 - OP7 when used                  300        ns
               as Interrupts High from: Clear of             300        ns
               Interrupts Status Bits in ISR or
               IPCR Clear of Interrupt Mask in
               IMR
 Clock Timing (Figure 56)
     Rev. 2.11
                                                       9


XR88C681
Symbol               Parameter           Min. Typ. Max.  Unit Conditions
 tCLK      X1/CLK (External) High or Low 100              ns
           Time
 tCLK      X1/CLK Crystal or External              7.372 MHz
           Frequency
 Rev. 2.11
                                               10


                                                                                                        XR88C681
AC ELECTRICAL CHARACTERISTICS 1, 2, 3 (CONT’D)
Test Conditions: TA = 0 - 70°C, VCC = 5V ¦ 5% unless otherwise specified.
     Symbol                    Parameter                          Min.      Typ. Max.      Unit   Conditions
 Clock Timing (Figure 56) (Cont’d.)
       tCTC       Counter/Timer External Clock                    100                       ns
                  High or Low Time (IP2)
       tCTC       Counter/Timer External Clock                      0            7.372    MHz
                  Frequency
       tRTX       RXCn and TXCn (External) High                   220                       ns
                  or Low Time8
       fRTX       RXCn and TXCn (External)
                  Frequency
                  16X                                               0            16.0     MHz
                  1X                                                0             1.0     MHz
 Transmitter Timing (Figure 57)
       tTXD       TXD Output Delay - TXC                                          350       ns
                  (External) Low
       tTCS       TXD Output Delay - TXC                                          150       ns
                  (Internal) Output Low
       tRXS       RXD Data Setup Time to RXC                      240                       ns
                  (External) High
       tRXH       RXD Data Hold Time from RXC                     200                       ns
                  (External) High
Notes
1. Parameters are valid over the specified temperature and operating supply ranges. Typical values are 25°C, V
                                                                                                                     CC = 5V and typical
   processing parameters.
2. All voltages are referenced to ground (GND). For testing, input signal levels are 0.4V and 2.4V with a transition time of 20ns
   maximum. All time measurements are referenced at input voltages of 0.8V and 2.0V as appropriate. See Figure 50.
3. AC test conditions for outputs: CL = 50pF, RL = 2.7k to V .
                                                                           CC
4. If -CS is used as the strobing input, this parameter defines the minimum high time between -CSs.
5. Consecutive write operations to the same register require at least three edges of the X1 clock between writes.
6. This specification imposes a 6 MHz maximum 68000 clock frequency if a read or write cycle follows immediately after the previous
   read or write cycle. A higher 68000 clock can be used if this is not the case.
7. This specification imposes a lower bound on -CS and -IACK low, guaranteeing that they will be low for at least one CLK period.
8. The minimum high time must be at least 1.5 times the X1/CLK period and the minimum low time must be at least equal to the X1/CLK
   period if either channel’s Receiver is operating in external 1X clock mode.
                                              Specifications are subject to change without notice
ABSOLUTE MAXIMUM RATINGS1
DC Supply Voltage . . . . . . . . . . . . . . . . . . . . . . . . . . . 7V
Storage Temperature . . . . . . . . . . . . . -65° C to 150° C
All Voltages with
respect to Ground2 . . . . . . . . . . . . . . . . . . -0.5V to +7V
1. Stresses above those listed under the Absolute Maximum Ratings may cause permanent damage to the device.           This is a stress rat-
   ing only, and functional operation of the device at these or any other conditions above those indicated in the “Electrical Characteris-
   tics” section of this specification is not implied. Exposure to absolute maximum rating conditions for extended periods may affect
   device reliability.
       Rev. 2.11
                                                                             11


   XR88C681
2. This product includes circuitry specifically designed for the protection of its internal devices from damaging effects of excessive stat-
   ic charge. Nonetheless, it is suggested that conventional precautions be taken to avoid applying any voltage larger than the rated
   maximum.
       Rev. 2.11
                                                                     12


                                                                                                XR88C681
SYSTEM DESCRIPTION
The XR88C681 consists of two independent, full-duplex             D   Serial Communication Channels A and B
communication channels; each consisting of their own              D   Operation Control
Transmitter and Receiver. Each channel of the DUART               D   Timing Control
may be independently programmed for operating mode                D   Output Port
and data format. The DUART can interface to a wide
range of processors with a minimal amount of                      A. DATA BUS BUFFER
components. The operating speed of each receiver and
                                                                  The data bus buffer provides the interface between the
transmitter may be selected from one of 23 internally
                                                                  internal (within the chip) and external data buses. It is
generated fixed bit rates, from a clock derived from an
                                                                  controlled by the operation control block to allow data
internal counter/timer, or from an externally supplied 1x or
                                                                  transfers to take place between the host CPU and the
16x clock. The bit rate generator (the source of the 23
                                                                  DUART.
different fixed bit rates) can operate directly from a crystal
connected across two pins or from an external clock. The
                                                                  B. OPERATION CONTROL BLOCK
ability to independently program the operating speed of
the receiver and transmitter of each channel makes the            The control logic of the Operation Control block receives
DUART attractive for split speed channel applications             operating commands from the CPU and generates proper
such as clustered terminal systems.                               signals to the various sections of the DUART. The
Receiver data is quadrupled buffered and the transmitter          Operation Control Block functions as the user interface to
data is dual-buffered via on-chip FIFOs in order to               the rest of the device. Specifically, it is responsible for
minimize the risk of receiver overrun and to reduce               DUART Register Address Decoding, and Command
overhead in interrupt driven applications. The DUART              Decoding. Therefore all commands to set baud rates,
also provides a flow control capability to inhibit                parity, other communication protocol parameters, start or
transmission from a remote device when the buffer of the          stop the Counter/Timer or reading a “status register” to
receiving DUART is full, thus preventing loss of data.            monitor data communication performance must go
The DUART also provides a general purpose 16 bit                  through the Operation Control Block.
counter/timer (which may also be used as programmable             The Operation Control Block will control DUART
bit rate generators), a 7 bit multi-purpose input port and an     performance based upon the following input signals.
8 bit multi-purpose output port (for the 40 pin DIP and 44        Address Inputs, A0 - A3
pin PLCC packages only).                                          -RD
                                                                  -WR
PRINCIPLES OF OPERATION                                           -CS
Figure 1 presents an overall block diagram of the DUART.          RESET
As illustrated in the block diagram, the DUART consists of        When using the 6800 family processor, the DUART will
the following major functional blocks:                            require some glue logic. Interfacing a 6800 Family
D Data Bus Buffer                                                 Processor to the DUART can be easily achieved by
D Interrupt Control                                               including a small amount of external logic devices, as
D Input Port                                                      depicted in Figure 2.
      Rev. 2.11
                                                               13


  XR88C681
                         -R/W
                                                                                                   -WR
                       E clock
                                                                                                   -RD
                       -RESET                                                                      RESET
                         Figure 2. External Logic Circuitry required to interface a 6800 Family
                                            Processor to the XR88C681 Device
B.1 DUART Register Addressing
The addressing of the internal registers of the DUART is presented in Table 1. Please note that some of the
registers are “Read Only” and others are “Write Only”. Each channel is provided with the following dedicated
(addressable) registers.
D Command Registers
D Mode Registers (MR1 and MR2)
D Status Registers
D Clock Select Registers
D Receiver Holding Register (RHR) and Transmit Holding Register (THR)
Additionally, the DUART contains the following registers that support/control both channels.
D Interrupt Status Register
D Interrupt Mask Register
D Masked Interrupt Status Register
D Interrupt Vector Register
D Auxiliary Control Register
And finally, the DUART also contains other registers that support functions other than serial data communication, such
as the parallel ports and the counters/timers.
D OPCR- Output Port Control Register
D IPCR - Input Port Configuration Register
D CTUR - Counter/Timer Upper Byte Register
D CTLR - Counter/Timer Lower Byte Register
     Rev. 2.11
                                                           14


                                                                                                 XR88C681
     Address (Hex)                        Read Mode Registers                             Write Mode Registers
                                Register Name              Symbol               Register Name                 Symbol
            00                  Mode Register,           MR1A, MR2A             Mode Register,             MR1A, MR2A
                                   Channel A                                       Channel A
            01                 Status Register,              SRA             Clock Select Register,            CSRA
                                   Channel A                                       Channel A
            02                 Masked Interrupt             MISR             Command Register A                 CRA
                                Status Register
            03               Rx Holding Register,           RHRA              Tx Holding Register,             THRA
                                   Channel A                                       Channel A
            04                Input Port Change             IPCR                Auxiliary Control               ACR
                                    Register                                        Register
            05                  Interrupt Status             ISR            Interrupt Mask Register             IMR
                                    Register
            06              Counter/Timer Upper              CTU                 Counter/Timer                  CTU
                                 Byte Register                                Upper Byte Register
            07              Counter/Timer Lower              CTL             Counter/Timer Lower                CTL
                                 Byte Register                                    Byte Register
            08                   Mode Register,          MR1B, MR2B             Mode Register,             MR1B, MR2B
                                   Channel B                                       Channel B
            09                 Status Register,              SRB             Clock Select Register,            CSRB
                                   Channel B                                       Channel B
            0A                    RESERVED                                    Command Register,                 CRB
                                                                                   Channel B
            0B               Rx Holding Register,           RHRB              Tx Holding Register,             THRB
                                   Channel B                                       Channel B
            0C                  Interrupt Vector             IVR                Interrupt Vector                IVR
                                    Register                                        Register
            0D                     Input Port                 IP                  Output Port                  OPCR
                                                                             Configuration Register
                                                                                  (OP0 - OP7)
            0E                Start Counter/Timer           SCC               Set Output Port Bits            SOPBC
                                   Command                                         Command
            0F                Stop Counter/Timer             STC             Clear Output Port Bits           COPBC
                                   Command                                         Command
                                       Table 1. DUART Port and Register Addressing
Note: The shaded blocks are not Read/Write registers but are rather “Address-Triggered” Commands.
Table 1 indicates that each channel is equipped with two Mode Registers. Associated with each of these Mode Register
pairs is a “Mode Register” pointer or MR pointer. Upon chip/system power up or RESET each MR pointer is “pointing to”
the channel MR1n register. (Please note that the suffix “n” is used at the end of many of the DUART registers symbols in
order to refer, generically, to either channels A or B). However, the contents of the MR pointer will shift from the address
of the MR1n register to that of the MR2n register, immediately following any Read or Write access to the MR1n register.
The MR pointer will continue to “point to” the MR2n register until a hardware reset occurs or until a “RESET MR
POINTER” command has been invoked. The “RESET MR POINTER” command can be issued by writing the
     Rev. 2.11
                                                              15


  XR88C681
appropriate data to the appropriate channel’s Command Register. Therefore, both Mode Registers, within a given
channel, have the same logical address. The features and functions of the DUART that are controlled by the Mode
Registers are discussed in detail in Section G.3.
B.2 Command Decoding
Each channel is equipped with a Command Register. In general, the role of these Command Registers are to
enable/disable the Transmitter, enable/disable the Receiver, along with facilitating a series of other miscellaneous
commands. The bit format for each Command Register is presented herewith.
      Bit 7          Bit 6           Bit 5        Bit 4           Bit 3             Bit 2          Bit 1           Bit 0
                  Miscellaneous Commands                            Enable/Disable                   Enable/Disable
                                                                         Receiver                       Transmitter
                      See Following Text                            00 = No Change                   00 = No Change
                                                                     01 = Enable Rx                   01 = Enable Tx
                                                                     10 = Disable Rx                  10 = Disable Tx
                                                              11 = Not valid (do not use)       11 = Not Valid (Do not use)
                   Table 2. (CRA, CRB) Bit Format for Command Registers of Channels A & B
The function of the lower nibble of the Command Registers is fairly straight-forward. This nibble is used to either enable
or disable the Transmitter and/or Receiver.
The upper nibble of the Command Register is used to invoke a series of miscellaneous commands. Table 3 defines the
commands associated with the upper nibble of the Command Registers. Please note that the upper nibble commands
116 through B16 effects only the performance of Command Register’s Channel. However, commands C16 and D16
effects system (or chip) level operation.
       Bit 7             Bit 6             Bit 5        Bit 4          Description
         0                 0                0             0            Null Command.
         0                 0                0             1            Reset MRn Pointer. Causes the Channel’s MRn
                                                                       pointer to point to MR1n.
         0                 0                1             0            Reset Receiver. Reset the individual channel re-
                                                                       ceiver as if a Hardware Reset has been applied.
                                                                       The Receiver is disabled and the FIFO is flushed.
         0                 0                1             1            Reset Transmitter. Resets the individual channel
                                                                       transmitter as if a Hardware Reset had been applied.
                                                                       The TXDn output is forced to a high level.
                  Table 3. Miscellaneous Commands, Upper Nibble of all Command Registers,
                                   Unless Otherwise Specified (Cont’d Next Page)
     Rev. 2.11
                                                         16


                                                                                  XR88C681
 Bit 7         Bit 6          Bit 5          Bit 4     Description
   0             1              0              0       Reset Error Status. Clears the Received Break
                                                       (RB), Parity Error (PE), Framing Error (FE) and
                                                       Overrun Error (OE) status bits, SR[7:3].
                                                       Specifically, if the Error Mode, for a particular chan-
                                                       nel is set at “Block” Error Mode, this command will
                                                       reset all of the Receiver Error Indicators in the Status
                                                       Register. In the Block Error Mode, once either a PE,
                                                       FE, OE, or RB occurs, the error will continue to be
                                                       flagged in the Status Register, until this command is
                                                       issued.
                                                       If the Error Mode, for a particular channel is set to
                                                       “Character Error Mode”, then the contents of the
                                                       Status Register for PE, FE, and RB are reflected on
                                                       a character by character basis. In the “Character
                                                       Error Mode”, the state of these indicators is based
                                                       only upon the character that is at the top of the RHR.
                                                       The OE indicator is always presented as a “Block
                                                       Error Mode” indicator, and requires this command to
                                                       be reset.
   0             1              0              1       Reset Break Change Interrupt. Clears the chan-
                                                       nel’s break change interrupt status bit.
   0             1              1              0       Start Break. Forces the TXDn output low. The
                                                       transmitter must be enabled to start a break. If the
                                                       transmitter is empty, the start of the break may be
                                                       delayed up to two bit times. If the transmitter is ac-
                                                       tive, the break begins when the transmission of
                                                       those characters in the THR is completed, viz.,
                                                       TXEMP must be true before the break will begin.
   0             1              1              1       Stop Break. The TXDn line will go high within two
                                                       bit times. TXDn will remain high for one bit time be-
                                                       fore the next character, if any, is transmitted.
   1             0              0              0       Set Rx BRG Select Extend Bit. Sets the channel’s
                                                       “Receiver BRG Select Extend Bit” to 1.
   1             0              0              1       Clear Rx BRG Select Extend Bit. Clears the chan-
                                                       nel’s “Receiver BRG Select Extend Bit” to 0.
   1             0              1              0       Set Tx BRG Select Extend Bit. Sets the channel’s
                                                       “Transmitter BRG Select Extend Bit” to 1.
   1             0              1              1       Clear Tx BRG Select Extend Bit. Clears the chan-
                                                       nel’s “Transmitter BRG Select Extend Bit” to 0.
          Table 3. Miscellaneous Commands, Upper Nibble of all Command Registers,
                              Unless Otherwise Specified (Cont’d)
Rev. 2.11
                                              17


   XR88C681
       Bit 7             Bit 6          Bit 5              Bit 4        Description
         1                 1              0                 0           Set Standby Mode (Channel A). When this com-
                                                                        mand is invoked via the Channel A Command Regis-
                                                                        ter, power is removed from each of the transmitters,
                                                                        receivers, counter/timer and additional circuits to
                                                                        place the DUART in the standby (or lower power)
                                                                        mode. Please note that this command effects the
                                                                        operation of the entire chip. Normal operation is re-
                                                                        stored by a hardware reset or by invoking the “SET
                                                                        ACTIVE MODE” command.
                                                                        Reset IUS Latch (Channel B). When this command
                                                                        is invoked via the Channel B Command Register,
                                                                        and the DUART is operating in Z-mode, it causes
                                                                        the Interrupt-Under-Service (IUS) latch to be reset.
                                                                        This, in turn, will cause the IEO output to toggle
                                                                        “high”.
         1                 1              0                 1           Set Active Mode (Channel A). When this com-
                                                                        mand is invoked via the Channel A Command Regis-
                                                                        ter, the DUART is removed from the Standby Mode
                                                                        and resumes normal operation.
                                                                        Set Z-Mode (Channel B). When this command is
                                                                        invoked via the Channel B Command Register, the
                                                                        DUART is conditioned to operate in the Z-Mode. For
                                                                        a detailed discussion of the DUART’s operation while
                                                                        in the Z-Mode, Please see Section C.6.2. (Not avail-
                                                                        able for the 28 pin DIP packaged devices)
         1                 1              1                 0           Reserved.
         1                 1              1                 1           Reserved.
                   Table 3. Miscellaneous Commands, Upper Nibble of all Command Registers,
                                        Unless Otherwise Specified (Cont’d)
In addition to the commands which are available through         only thing that will happen, in response to this procedure
the command registers, the DUART also offers                    is the Counter/Timer will initiate counting. For a detailed
“Address-Triggered” commands. These commands are                discussion into the operation of the Counter/Timer, please
listed in Table 1, “DUART PORT AND REGISTER                     see Section D.2.
ADDRESSING”; and are further identified by being
                                                                Another example of an Address-Triggered commands is
“shaded” in Table 1. Specifically, these commands are:
                                                                the “SET OUTPUT PORT BITS” Command. This
D   START COUNTER/TIMER COMMAND                                 command is invoked by performing a write of data to
D   STOP COUNTER/TIMER COMMAND                                  DUART address 0E16. When the user invokes this
D   SET OUTPUT PORT BITS COMMAND                                command, he/she is setting certain bits (to “1”) within the
D   CLEAR OUTPUT PORT BITS COMMAND                              OPR (Output Port Register). All other bits, within the OPR
Each of these commands are invoked by either reading or         (not specified to be set), are not changed. The state of the
writing data to their corresponding DUART addresses as          output port pins are complements of the individual bits
specified in Table 1.                                           within the OPR. Hence, if OPR[0] is set to “1”, the state of
                                                                the corresponding output port pin, OP0, is now set to a
For Example:
                                                                logic “0”. Consequently, one can think of the “SET
The START COUNTER/TIMER COMMAND is invoked by                   OUTPUT PORT BITS” command as the “CLEAR
the procedure of reading DUART address 0E16. Please             OUTPUT PORT PINS” command. For a more detailed
note that this “Read Operation” will not result in placing      discussion into the operation of the Output Ports, please
the contents of a DUART register on the data bus. The           see Section F.
     Rev. 2.11
                                                            18


                                                                                                  XR88C681
C. INTERRUPT CONTROL BLOCK                                        D Receive FIFO A or B Full
                                                                  D Start or End of Received Break in Channels A or B
The Interrupt Control Block allows the user to apply the          D End of Counter/Timer Count Reached
DUART in an “Interrupt Driven” environment. The                   D Change of State on input pins, IP0, IP1, IP2, IP3
DUART includes an interrupt request output signal                 The Interrupt Control Block consists of an Interrupt Status
(-INTR), which may be programmed to be asserted upon              Registers (ISR), an Interrupt Mask Registers (IMR), a
the occurrence of any of the following events:                    Masked Interrupt Status Registers (MISR) and an
D Transmit Hold Register A or B Ready                             Interrupt Vector Register (IVR). Table 4 lists these
D Receive Hold Register A or B Ready                              registers, their address location (within the DUART).
                          Register                      Description                     Address Location
                                                                                   (in DUART Address Space)
                             ISR                 Interrupt Status Register                0516 (Read Only)
                             IMR                  Interrupt Mask Register                 0516 (Write Only)
                            MISR             Masked Interrupt Status Register             0216 (Read Only)
                             IVR                 Interrupt Vector Register                      0C16
                         Table 4. Listing and Brief Description of Interrupt System Registers
The role and purpose of each of these registers are               occurring. In general, the contents of the ISR will indicate
defined here.                                                     to the processor, the source or the reason for the Interrupt
                                                                  Request from the DUART. Therefore, any interrupt
C.1 Interrupt Status Registers (ISR)                              service routine for the DUART should begin by reading
The contents of the ISR indicates the status of all potential     either this register or the MISR (Masked Interrupt Status
interrupt conditions. If any bits within these registers are      Register). The bit-format of the ISR is presented in
toggled “high”, then the corresponding condition has or is        Table 5:
      Bit 7            Bit 6          Bit 5           Bit 4           Bit 3           Bit 2            Bit 1        Bit 0
   Input Port      Delta Break      RXRDY/          TXRDYB          Counter       Delta Break        RXRDY/       TXRDYA
     Change              B          FFULLB                           Ready             A            FFULLA
     0 = No           0 = No         0 = No          0 = No          0 = No          0 = No           0 = No       0 = No
     1 = Yes         1 = Yes        1 = Yes          1 = Yes        1 = Yes         1 = Yes          1 = Yes       1 = Yes
                                                  Table 5. ISR Bit Format
The definition of the meaning behind each of these bits is        D The individual Input Port pin that changed state
presented here.                                                   D The final state of the monitored input ports, following
                                                                      the Change of State.
ISR[7]: Input Port Change of State                                For a detailed description of the IPCR, see Section F.
If this bit is at a logic “1”, then a change of state was         Please note that in order to enable this Interrupt
detected at Input Port pins IP0 - IP3. The user would             Condition, the user must do two things:
service this interrupt by reading the IPCR (if ISR[7] = 1).       1. Write the appropriate data to the lower nibble of the
ISR[7] is cleared when the CPU has read the Input Port                Auxiliary Control Register, ACR[3:0]. In this step, the
Configuration Register (IPCR). By reading the IPCR, the               user is specifying which Input Pins should trigger an
user will determine:                                                  “Input Port Change” Interrupt request.
      Rev. 2.11
                                                               19


   XR88C681
2. Write a logic “1” to IMR[7].                                          Characters loaded into THRB while the transmitter is
                                                                         disabled will not be transmitted.
ISR[6] Delta Break Indicator - Channel B
                                                                         ISR[3] Counter Ready
When this bit is set, it indicates that the Channel B
                                                                         In the TIMER mode, the C/T (Counter/Timer) will set
receiver has detected the beginning or end of a received
                                                                         ISR[3] once each cycle of the resultant square wave
break (RB). This bit is cleared (or reset) when the CPU
                                                                         (available at the OP3 pin). ISR[3] will be cleared by
invokes a channel B “RESET BREAK CHANGE
                                                                         invoking the “STOP COUNTER” command. Bear in mind,
INTERRUPT” command (see Table 3).                       For more
                                                                         that in the TIMER mode, the “STOP COUNTER”
information into the DUART’s response to a BREAK
                                                                         command will not stop the C/T.
condition, please see Section G.2.
                                                                         In the COUNTER mode, this bit is set when the counter
                                                                         reaches the terminal count (000016) and is cleared when
ISR[5] RXRDY/FFULL B - Channel B Receiver Ready
or FIFO Full                                                             the counter is stopped by a “STOP COUNTER”
                                                                         command. When the Counter/Timer is in the COUNTER
The function of this bit is selected by programming                      Mode, the “STOP COUNTER” command will stop the
MR1B[6]. If programmed as the Receiver Ready                             Counter/Timer.
indicator (RXRDYB), it indicates that at least one
character of data is in RHRB and is ready to be read by the              ISR[2]: Delta Break A - Channel A Change in Break
CPU. This bit is set when a character is transferred from                Assertion of this bit indicates that the channel A receiver
the receiver shift register to RHRB and is cleared when                  has detected the beginning of or the end of a received
the CPU reads the RHRB. If there are still more                          break (RB). This bit is cleared when the CPU invokes a
characters in RHRB after the read operation, the bit will be             channel A “RESET BREAK CHANGE INTERRUPT”
set again after RHRB is “popped”.                                        command. For more information into the DUART’s
If this bit is programmed as FIFO full indicator (FFULLB),               response to a BREAK condition, please see Section G.2.
it is set when a character is transferred from the RSR to
RHRB and the transfer causes RHRB to become full. This                   ISR[1] RXRDYA/FFULL A - Channel A Receiver
bit is cleared when the CPU reads RHRB; and thereby                      Ready or FIFO Full
“popping” the FIFO, making room for the next character. If
                                                                         The function of this bit is selected by programming
a character is waiting in the RSR because RHRB is full,
                                                                         MR1A[6]. If programmed as the Receiver Ready
this bit will be set again after the read operation, when that
                                                                         indicator (RXRDYA), this bit indicates that there is at least
character is loaded into RHRB.
                                                                         one character of data in RHRA, and is ready to be read by
Note:                                                                    the CPU. This bit is set when a character is transferred
      If this bit is configured to reflect the FFULLB indicator, this    from the RSR to RHRA and is cleared when the CPU
      bit will not be set (nor will produce an interrupt request) if
      one or two characters are still remaining in RHRB, following       reads (or “pops”) RHRA. If there are still more characters
      data reception. Hence, it is possible that the last two char-      in RHRA, following the read operation, the bit will be set
      acters in a string of data (being received) could be lost due      again after RHRA is “popped”.
      to this phenomenon.
                                                                         If this bit is programmed as the FIFO (RHR) full indicator
                                                                         (FFULLA), it is set when a character is transferred from
ISR[4] TXRDYB - Channel B Transmitter Ready
                                                                         the RSR to RHRA and the newly transferred character
                                                                         causes RHRA to become full. This bit is cleared when the
This bit is a duplicate of TXRDY B, SRB[2].
                                                                         CPU reads RHRA. If a character is waiting in the RSR
This bit, when set, indicates that THRB is empty and is                  because RHRA is full, this bit will be set again, following
ready to accept a character from the CPU. The bit is                     the read operation, when that character is loaded into
cleared when the CPU writes a new character to THRB;                     RHRA.
and is set again, when that character is transferred to the              Note:
TSR. TXRDYB is set when the transmitter is initially                           If this bit is configured to reflect the FFULLA indicator, this
enabled and is cleared when the transmitter is disabled.                       bit will not be set (nor will produce an interrupt request) if
       Rev. 2.11
                                                                      20


                                                                                                    XR88C681
     one or two characters are still remaining in RHRA, following     Characters loaded into THRA while the transmitter is
     data reception. Hence, it is possible that the last two char-    disabled will not be transmitted.
     acters in a string of data (being received) could be lost due
     to this phenomenon. Therefore, the user is advised to read
     RHRA until empty.                                                C.2 Interrupt Mask Register (IMR)
                                                                      The Interrupt Mask Register is a “Write Only” register
ISR[0]: Channel A Transmitter Ready
This bit is a duplicate of TXRDY A, SRA[2].                           which enables the user to select the conditions that will
                                                                      cause the DUART to issue an Interrupt Request to the
This bit, when set, indicates that THRA is empty and is               processor. In other words, the user has the option of
ready to accept a character from the CPU. The bit is                  masking or blocking certain conditions from causing the
cleared when the CPU writes a new character to THRA;                  DUART to issue an Interrupt Request. Therefore, the
and is set again, when that character is transferred to the           bit-format of the IMR is essentially the same as the ISR.
TSR. TXRDYA is set when the transmitter is initially                  However, for completeness, the Bit Format of the IMR is
enabled and is cleared when the transmitter is disabled.              presented here.
      Bit 7             Bit 6            Bit 5            Bit 4           Bit 3          Bit 2           Bit 1         Bit 0
   Input Port       Delta Break        RXRDY/          TXRDYB           Counter       Delta Break      RXRDY/        TXRDYA
     Change               B            FFULLB                            Ready             A          FFULLA
     0 = Off           0 = Off          0 = Off         0 = Off          0 = Off        0 = Off         0 = Off       0 = Off
     1 = On            1 = On           1 = On          1 = On           1 = On         1 = On          1 = On        1 = On
                                                     Table 6. IMR Bit Format
If the user wishes to enable a certain interrupt, he/she              memory, for later recall. The additional hardware and
should write a “1” to the bit within the IMR, corresponding           software overhead required to support this activity can be
to that Interrupt Condition. Likewise, to disable or mask             eliminated via use of the MISR.
out a certain condition causing an interrupt, the user
should write a “0” to the bit location corresponding to that          C.4 Interrupt Vector Register, IVR
condition. To enable all interrupts the user would write
                                                                      This register is only used for Interrupt Vector generation
FF16 (all “1”s) to this registers.
                                                                      when the DUART is commanded into the special Z-Mode.
Please note that IMR is a Write Only Registers, and can               While in this mode, the contents of the IVR is typically
therefore not be read by the processor.                               related to the starting address of the DUARTs Interrupt
                                                                      Service Routine. Otherwise, in the I-Mode, Interrupt
C.3 Masked Interrupt Status Register (MISR)                           Vector generation is typically performed off-chip. When
                                                                      the DUART is operating in the I-Mode, the IVR can be
The content of the MISR register is basically the results of          used as general purpose read/write registers. The role of
ANDing the ISR and IMR together.                                      the IVR, while the DUART is operating in the Z-Mode is
MISR Content = [ISR Contents] ¯ [IMR Contents]                        presented in Section C.6.
One limitation of DUART Interrupt Service Routines that
                                                                      C.5 Limitations of the DUART Interrupt Structure
rely on reading the ISR is that the bits within the ISR can
toggle “high” due to their corresponding conditions                   The Interrupt Structure offered by the DUART allows the
whether or not they are enabled by the IMR. Therefore,                user to program the DUART to generate interrupts in
the user, following reading the Interrupt Status Register,            response to certain THR and RHR (FIFO) conditions; the
will have to make provisions for; and execute a “bit-by-bit”          Counter/Timer Ready condition, and to changes in the
AND of the ISR and IMR contents. Since the IMR is a                   Break Condition (at the Receiver). However, aside from
“Write Only” register and cannot be read by the processor,            the “Delta Break Condition” (RB), the DUART’s Interrupt
the contents of the IMR will have to be stored in system              Structure does not allow for interrupt requests due to
      Rev. 2.11
                                                                   21


  XR88C681
Receiver problems such as Parity Error (PE), Receiver             D 8051 P
Overrun Error (OE), or Framing Error (FE). The DUART              D 8080 CP
also does not offer the user to ability to configure one of       D 8085 P
the output ports to relay the occurrence of any of these          D 68HC11 C
conditions. Therefore, unless the user is implementing            D Z-80 P (Interrupt Modes 0 and 1)
some sort of “Data Link Layer” error checking scheme              However, the DUART should be operating in the Z-Mode
such as CRC, the user is advised to “validate” the                when interfacing the following microprocessors/
received data by frequently reading the Status Register;          microcontrollers.
and checking for any non-zero upper-nibble values. This           D 8088 P
is especially the case if the user has set the Error Mode to      D 8086 P
“Character” (MR1n[5] = 0).                                        D 80286 - 80486 Ps
                                                                  D Pentium P
C.6 Servicing DUART Interrupts                                    D Z-80 P (Interrupt Modes 2)
                                                                  The next few sections will provide detailed discussions of
Interrupt servicing with the XR88C681 DUART falls into            DUART/Microprocessor interfacing and interrupt
two broad categories: I-Mode and Z-Mode. I-Mode has               processing on each of the above-mentioned
historically been referred to as the “Intel” Mode. Likewise,      microprocessors. From this discussion, a detailed
the Z-Mode has been referred to as the “Zilog” Mode.              description of I-Mode Interrupt processing and Z-Mode
                                                                  Interrupt processing will emerge.
When the DUART is operating in the Z-Mode, the DUART
will place an 8 bit “interrupt vector” on the data bus, to the    C.6.1 I-Mode Interrupt Servicing
CPU, during the “Interrupt Acknowledge” or IACK cycle.
The CPU will read this interrupt vector from the Data Bus,        The DUART will be in the I-Mode following power up of the
and determine (from the Interrupt Vector data) the                IC, or a hardware reset. In general, a CPU interfacing to a
location of the appropriate interrupt service routine, in         DUART operating in the I-Mode, will function as follows,
system memory. Additionally, the Z-Mode gives the user            during interrupt servicing.
a hardware approach to prioritize the interrupt requests          If the DUART requires interrupt service from the CPU, it
among numerous peripheral devices. This phenomenon                will asserts the -INTR pin to the CPU. Once the CPU has
is discussed in greater detail in Section C.6.2.                  detected the interrupt request, it will determine the
When the DUART is operating in the I-Mode, the DUART              location of the appropriate interrupt service routine, and
will not provide any interrupt vector information to the          will branch program control to that location. The CPU will
CPU, during the IACK cycle. Interrupt Vector information,         accomplish all of this without providing an “Interrupt
or any means to route program control to the appropriate          Acknowledge” signal or any further interaction with the
Interrupt Service Routine, is accomplished external to the        DUART. Once the CPU has eliminated the cause(s) of the
DUART.                                                            DUART’s interrupt request, the DUART will then negate
                                                                  its -INTR pin. The CPU will then exit the “DUART”
The DUART will be in the I-Mode following power up or a           interrupt service routine and will resume normal
hardware reset. The user must invoke the “Set Z-Mode”             processing.
command, in order to command the DUART into the
Z-Mode.                                                           In general there are two approaches that CPUs
                                                                  commonly use to locate the appropriate interrupt service
Although the I-Mode has been referred to as the “Intel”           routine, when interfaced with an I-Mode DUART.
Mode, and the Z-Mode as the “Zilog” Mode; this does not           D Direct Interrupt Processing
mean that the user should only operate the DUART in the
                                                                  D (External) Vectored-Interrupt Processing
Z-Mode when interfacing a Zilog microprocessor, or in the
I-Mode when interfacing to an Intel microprocessor. The           Direct Interrupt Processing
division between I-Mode and Z-Mode is not necessary
along “corporate” lines. If you are interfacing the DUART         If a CPU employs “Direct Interrupt Processing” then once
to the following microprocessors/ microcontrollers, then          the CPU has detected the interrupt request, and has
the DUART must operate in the I-Mode.                             completed its current instruction, the CPU will branch
      Rev. 2.11
                                                               22


                                                                                                 XR88C681
program control to a specific location in system memory.        because the location of the interrupt service routine is
For CPUs that employ direct interrupts, this “location” is      determined by hardware “external” to the DUART. For
fixed by the CPU circuitry itself.                              some CPUs, (such as the 8080A and the 8085 P), this
For Example:                                                    “interrupt vector” information is a one byte op-code for a
                                                                CALL instruction to a special “RESTART subroutine”.
If the -INT0 interrupt request input pin, of the 8051 C, is     The location of this “RESTART subroutine” is fixed by
asserted, the CPU will branch program control to location       CPU circuit design. If the user employs this approach for
000316 in system memory. This location is fixed (by circuit     interrupt processing, he/she is responsible for insuring
design of the 8051 P) and cannot be changed by the              that either the interrupt service routine, or an
user.                                                           unconditional branch instruction (to the interrupt service
                                                                routine) resides at this location in memory.
(External) Vectored Interrupt Processing
                                                                Each of these Interrupt Processing techniques will be
CPUs that employ this form of interrupt processing              presented in greater detail in the following sections.
typically have an Interrupt Acknowledge output pin. This
“IACK” or “-INTA” output will be used to gate “interrupt        As mentioned earlier, the DUART should be operating in
vector” information onto the Data Bus, via external             the I-Mode, when interfaced to the P/ C presented in
(non-DUART) hardware. The term “External” is used to            Table 7. Table 7 also presents the type of interrupt
describe this form of vectored-interrupt processing;            processing that is employed by each of these Ps/ Cs.
             P/ C            Type of Interrupt Processing                                Comments
           8051 C                         Direct              The 8051 C has two external Interrupt Request inputs: -INT0
                                                              and -INT1.
          8080A P                  External Vectored          The 8080A P will allow the use of up to 8 different op codes
                                                              for “CALL” instructions to the Interrupt Service Routines.
                                                              The 8080A CPU module will output an interrupt ac-
                                                              knowledge output, -INTA, which can be used to “gate”
                                                              the “CALL” instructions on to the Data Bus.
           8085 P             Direct and External Vectored    The 8085 P has three “Direct” external Interrupt Request
                                                              inputs: RST 7.5, RST 6.5, and RST 5.5. Additionally, this P
                                                              has the exact same “vector” options as does the 8080A P.
         68HC11 C                         Direct              The 68HC11 C has a single “maskable” external Interrupt
                                                              Request input; -IRQ.
           Z-80 P                  External Vectored          The Z-80 CPU uses the exact same approach as presented
     (Interrupt Mode 0)                                       for the 8080A CPU.
           Z-80 P                    Direct Interrupt         The Z-80 will branch to 0038H in system memory if the -INT
                                                              interrupt request pin is asserted.
                   Table 7. Summary of P/ C and their types of Interrupt Processing (I - Mode)
The information presented in Table 7 is discussed in detail in the following sections.
      Rev. 2.11
                                                            23


  XR88C681
C.6.1.1 8051 Microcontroller
The 8051 family of microcontrollers is manufactured by Intel and comes with a variety of amenities. Some of these
amenities include:
D  On chip serial port
D  Four 8 bit I/O port (P0 - P3)
D  Two 16 bit timers
D  4k bytes of ROM
D  128 bytes of RAM
Figure 3 presents a block diagram of the 8051 microcontroller, and Figure 4 presents the pin out of this device.
                                -INT1
                                -INT0                                                                       -T2EX
                                Timer 2 (8032/8052)
                                Timer 1
                                                                                          Timer 2
                                Timer 0              128 bytes                                              -T2
                                                                                      (8032/8052)
                                Serial Port             RAM                ROM
                                                    (8032/8052)
                                                                                          Timer 1           -T1
                                                                      0K - 8031/8032
                 Interrupt          Other             128 bytes          4K - 8051
                  Control                               RAM              8K - 8052        Timer 0           -T0
                                   Registers
                   CPU
                 Oscillator         Bus Control                    I/O Ports               Serial Port
                            -EA                       ALE
                            RST                      -PSEN
                                                               P0  P1     P2      P3     -RXD      -TXD
                                  Figure 3. Block Diagram of the 8051 Microcontroller
    Rev. 2.11
                                                                24


                                                                                                XR88C681
                                         P1.0  1                                 40  VCC
                                         P1.1  2                                 39  P0.0 (AD0)
                                         P1.2  3                                 38  P0.1 (AD1)
                                         P1.3  4                                 37  P0.2 (AD2)
                                         P1.4  5                                 36  P0.3 (AD3)
                                         P1.5  6                                 35  P0.4 (AD4)
                                         P1.6  7                                 34  P0.5 (AD5)
                                                             8051
                                         P1.7  8        Microcontroller          33  P0.6 (AD6)
                                         RST   9                                 32  P0.7 (AD7)
                                 P3.0 (RXD) 10                                   31  -EA
                                 P3.1 (TXD) 11                                   30  ALE
                                P3.2 (-INT0) 12                                  29  -PSEN
                                P3.3 (-INT1) 13                                  28  P2.7 (A15)
                                   P3.4 (T0)  14                                 27  P2.6 (A14)
                                   P3.5 (T1) 15                                  26  P2.5 (A13)
                                  P3.6 (-WR) 16                                  25  P2.4 (A12)
                                  P3.7 (-RD) 17                                  24  P2.3 (A11)
                                      XTAL2 18                                   23  P2.2 (A10)
                                     XTAL1    19                                 22  P2.1 (A9)
                                         VSS 20                                  21  P2.0 (A8)
                                     Figure 4. Pin Out of the 8051 Microcontroller
The 8051 C consists of 4 8-bit I/O ports. Some of these          Port 1 (P1.0 - P1.7)
ports have alternate functions, as will be discussed here.
Port 0 (P0.0 - P0.7)                                             Port 1 is a dedicated I/O port on pins 1 - 8. The pins,
                                                                 designated as P1.0, P1.1, P1.2, ..., are available for
This port is a dual-purpose port on pins 32 - 39 of the 8051     interfacing as required. No alternative functions are
IC. In minimal component designs, it is used as a general        assigned for Port 1 pins; thus they are used solely for
purpose I/O port. For larger designs with external               interfacing to external devices. Exceptions are the
memory, it becomes a multiplexed address and data bus            8032/8052 ICs, which use P1.0 and P1.1 either as I/O
(AD0 - AD7).                                                     lines or as external inputs to the third timer.
Port 2 (P2.0 - P2.7)
Port 2 (Pins 21 - 28) is a dual-purpose port that can            address bus for designs with external code memory of
function as general purpose I/O, or as the high byte of the      more than 256 bytes of external data memory (A8 - A15).
     Rev. 2.11
                                                              25


   XR88C681
Port 3
Port 3 is a dual-purpose port on pins 10 - 17. In addition to functioning as general purpose I/O, these pins have multiple
functions. Each of these pins have an alternate purpose, as listed in Table 8.
                 Bit                          Name              Alternate Function
                P3.0                            RXD             Receive Data for Serial Port
                P3.1                            TXD             Transmit Data for Serial Port
                P3.2                           -INT0            External Interrupt 0
                P3.3                           -INT1            External Interrupt 1
                P3.4                             T0             Timer/Counter 0 External Input
                P3.5                             T1             Timer/Counter 1 External Input
                P3.6                            -WR             External Data Memory Write Strobe
                P3.7                            -RD             External Data Memory Read Strobe
                                       Table 8. Alternate Functions of Port 3 Pins
The 8051 also has numerous additional pins which are                        Interrupt                      Location
relevant to interfacing to the XR88C681 DUART or other
                                                                               -INT0                        0003H
peripherals. These pins are:
                                                                               -INT1                        0013H
ALE - Address Latch Enable
                                                                    Table 9. Interrupt Service Routine locations (in
                                                                            Code Memory) for -INT0 and -INT1
If Port 0 is used in its alternate mode - as the data bus and
the lower byte of the address bus -- ALE is the signal that      Therefore, if the user is using either one of these inputs as
latches the address into an external register during the         an interrupt request input, then the user must insure that
first half of a memory cycle. Once this is done, the Port 0      the appropriate interrupt service routine or an
lines are then available for data input or output during the     unconditional branch instruction (to the interrupt service
second half of the memory cycle, when the data transfer          routine) is located at one of these address locations.
takes place.
                                                                 If the 8051 C is required to interface to external
                                                                 components in the data memory space of sizes greater
                                                                 than 256 bytes, then both Ports 0 and Port 2 must be used
-INT0   (P3.2) and -INT1 (P3.3)
                                                                 as the address and data lines. Port 0 will function as a
                                                                 multiplexed address/data bus. During the first half of a
-INT0   and -INT1 are external interrupt request inputs to       memory cycle, Port 0 will operate as the lower address
the 8051 C. Each of these interrupt pins support “direct         byte. During the second half of the memory cycle Port 0
interrupt” processing. In this case, the term “direct”           will operate as the bi-directional data bus. Port 2 will be
means that if one of these inputs are asserted, then             used as the upper address byte. ALE and the use of a
program control will automatically branch to a specific          74LS373 transparent latch device can be used to
(fixed) location in code memory. This location is                demultiplex the Address and Data bus signals.
determined by the circuit design of the 8051 C IC and            Figure 5 presents a schematic illustrating how the
cannot be changed. Table 9 presents the location (in             XR88C681 DUART can be interfaced to the 8051 C.
code memory) that the program control will branch to, if
either of these inputs are asserted.
      Rev. 2.11
                                                              26


                                                                                                  XR88C681
                           -INT0                                                               -INTR
                              -RD                                                              -RD
                             -WR                                                               -WR
                    PORT 0                                                                     D0 - D7
                 (AD0 - AD7)
                                                          74HC373
                                                        D                        A0 - A3
                                                                   Q                           A0 - A3
                            ALE                         C
                                                           A5 - A7
                                                                           CS_DUART
                                                             Address                           -CS
                      PORT 2
                                                            Decoding
                    (A8 - A15)
                                                              Logic
                 8051 CPU                                                                           XR88C681
                                                                            to other ICs
           Figure 5. An Approach to Interfacing the XR88C681 DUART to the 8051 Microcontroller
The circuitry presented Figure 5 would function as follows        interrupt request, the DUART’s -INTR pin will be negated
during a DUART requested interrupt. The DUART device              (go “high”) and the CPU will return from the interrupt
requests an interrupt from the CPU by asserting its active        service routine and resume normal operation.
low -INTR output pin. This will cause the -INT0 input pin to
the CPU to go low. When this happens the 8051 CPU will            C.6.1.2 8080A Microprocessor
finish executing its current instruction, and will then           The 8080A Microprocessor is one of the earlier version of
branch program control to the DUART interrupt service             the Intel processors.        In general, it is an 8-bit
routine. In the case of Figure 5, since the DUART’s -INTR         microprocessor that requires +5V, -5V, and +12V power
pin is tied to the -INT0 pin of the C, then the beginning of      supplies. Additionally, this microprocessor requires two
the interrupt service routine will be located in 0003H in         other chips, in order to create a “complete” CPU module.
code memory. The 8051 CPU does not issue an Interrupt             Typically, these devices would be the 8224 Clock
Acknowledge signal back to the DUART. It will just begin          Generator and the 8228 System Controller. The 8224
processing through the DUART’s interrupt service                  Clock Generator is responsible for conditioning and
routine. Once the CPU has eliminated the cause(s) of the          generating the necessary timing source for the 8080A
      Rev. 2.11
                                                              27


  XR88C681
CPU, from a external crystal. The 8228 System                   -INTA - Interrupt Acknowledge
Controller is responsible for buffering the bi-directional      -MEMR - Memory Read
Data Bus. Additionally, since the 8080 CPU device does          -MEMW - Memory Write
not directly provide control bus signals, the 8228 Device is    -IOR - Input Port Read
responsible for translating signaling information, from the     -IOW - Output Port Write
8080A device, into the following Control Bus signals; in
order to access memory and peripheral devices.                  Figure 6 presents a schematic of the 8080A CPU Module.
                                        GND
                                         +5V              8080A CPU
                                         -5V
                                                                   A0 - A15
                                        +12V
                                                      HOLD
                                                                        -WR
                                                      INT
                                                                       DBIN
                                                      INTE
                                                                       HDLA
       TANK                                            1
                                                                         D0
        OSC                                                                                             D0
                                                       2                 D1
  PHI2 (TTL)                                                                                            D1
                                                                         D2
                                                      WAIT                                              D2
      RDYIN                                                              D3
                            8224
                                                      READY                                             D3
      -RESIN                Clock                                        D4
       +12V
                         Generator                                       D5
                                                                                                        D4
                                                      RESET                                  8228       D5
        +5V                                                              D6
                                                                                           System D6
                                                                         D7
        GND                                                                               Controller D7
                                                      SYNC
                                                                                                      INTA
                                                                          GND
                                                                                                     MEMR
                                                     -STATUS STROBE       +5V
                                                                                                    MEMW
                                                                                                       IOR
                                                                      -BUSEN
                                                                                                       IOW
                                      Figure 6. Schematic of 8080A CPU Module
8080A CPU Module Interrupt Structure                            interrupt requests from peripherals. Whenever the INT
                                                                pin is asserted by a peripheral device requesting an
The “Interrupt Structure” of the 8080A CPU is described
                                                                interrupt, the CPU will complete its current instruction.
here. The 8080A CPU device consists of two signals:
                                                                After completion of this instruction, the CPU module will
INTE and INT. Additionally, the 8228 Bi-Directional Bus
consists of a single output signal, -INTA. INTE is the          assert -INTA via the 8228 Bi-Directional Bus Driver (U2)
active-high Interrupt Enable output, and INT is the             by toggling -INTA “low”. -INTA is the active-low “Interrupt
active-high Interrupt Request input. If the “Enable             Acknowledge” signal that the CPU module outputs in
Interrupt” command has been invoked, the INTE output            order to initiate the process of interrupt servicing. The
will be “high” indicating that the 8080 CPU will honor          8080A CPU module only supports “external”
     Rev. 2.11
                                                             28


                                                                                                XR88C681
vectored-interrupt processing. Hence, when -INTA is            Interfacing the 8080 CPU Module to the XR88C681
asserted, the CPU module is awaiting “vector”                  DUART for Interrupt Processing
information on the Data bus. In the case of the 8080A
                                                               The 8080A CPU can be connected to the XR88C681 and
CPU Module, this “vector” information is typically the
                                                               run in the Interrupt Driven mode. Figure 7 presents an
op-code for one of the RESTART instructions (RST). The
                                                               approach that can be applied to interfacing the
8080A CPU supports up to eight different RST
                                                               XR88C681 DUART to the 8080A CPU for “external”
instructions (RST 0 through RST 7). These instructions
                                                               vectored interrupt processing. Please note that Figure 8
are one-byte calls to specific locations within the CPU’s
                                                               only includes information pertaining to DUART interrupt
memory space, where the appropriate interrupt service
                                                               servicing. Other circuitry (such as the 8224 Clock
routine exists. Table 10 presents a list of these RESTART
                                                               Generator, the Address Bus, etc.) have been omitted from
instructions, the op-codes, and the corresponding
                                                               the schematic. In this schematic, the DUART Interrupt
RESTART address.
                                                               Service Routine is located at 002016 in memory.
                                                               Additionally, the DUART has been configured to operate
    Op-Code (hex)       Mnemonic          Restart Address      in the I-Mode. The function description of this circuit is
                                                (hex)
                                                               presented here.
         C7                RST 0                0000
                                                               The XR88C681 will request an interrupt to the 8080A
         CF                RST 1                0008           CPU, by toggling its -INTR output “low”. This signal is
         D7                RST 2                0010           inverted and applied to the active-high INT input of the
         DF                RST 3                0018           CPU. Once the 8080A CPU has completed its current
         E7                RST 4                0020           instruction, it will assert the active-low -INTA signal (from
                                                               the 8228 Bi-Directional Bus Driver). At this time, both the
         EF                RST 5                0028
                                                               -INTR signal (from the DUART) and the -INTA signal
         F7                RST 6                0030           (from the 8228) are each at a logic “low”. The -INTR and
         FF                RST 7                0038           -INTA signals are both routed to a two-input OR gate.
                                                               Hence, when both -INTR and -INTA are at logic “low”, the
                                                               output of the OR-gate will also be at a logic “low”, and
 Table 10. 8080A and 8085 CPU Restart Instructions             thereby asserting both of the Output Enable (OE) inputs
              Used With Vectored Interrupts                    of the SN74LS244 Data Bus buffer (U3). This “ORing” of
                                                               the -INTR and -INTA signals is used to insure that only the
                                                               peripheral device requesting the interrupt is the one that
Therefore, once the CPU receives the op-code for one of        receives the service (e.g., responsive to the asserted
these RESTART instructions, it will begin executing this       -INTA signal). Once both -OE inputs of U3 are asserted,
instruction by loading the Program Counter will the            the data, applied at the input of this device (U3) will now
appropriate “Restart Address”. Afterwards, program             appear at the output of this device, and at the D7 - D0
control will be branched to the “Restart Address” location.    inputs of the 8228 device (U2). Please note that, in this
                                                               example, the value “E716 ” is hard-wired into the input of
For Example:
                                                               U3. This value is the op-code for the “RST 4” command.
If the op-code “E716” is loaded onto the Data Bus during       Hence, once this data is gated into the CPU module, via
the -INTA cycle, this op-code corresponds with the “RST        the data bus, the CPU will load 002016 into its Program
4” command and, the CPU will load 002016 into the              Counter and branch program control to that location. The
Program Counter and program control will branch to that        Interrupt Service Routine for the DUART exists at this
location in memory (see Table 10).                             location in memory.
      Rev. 2.11
                                                            29


  XR88C681
                U1
                                                                              Vcc                               U4
                     INTE                                U5
                      INT                                                                                  -INTR
                                                                                 U6
                                                                                         Vcc
                                                                   U3
                     DBIN
          8080A CPU                                 U2                  -OE1 -OE2                            XR88C681
                                                                                                              DUART
                      D0                                               DO0     DI0
                      D1                                               DO1     DI1
                                                                       DO2     DI2
                      D2
                                                                       DO3     DI3
                      D3
                                                                       DO4     DI4
                      D4
                                              8228                     DO5     DI5
                      D5                  Bi-Directional                       DI6
                                           BUS Driver                  DO6
                      D6                                                       DI7
                                                                       DO7
                      D7
                                                                         SN74LS244
                                                     INTA
                 Figure 7. Circuit Schematic depicting approach to Interface the XR88C681 DUART
                          to the 8080A CPU, for “External” Vectored Interrupt Processing
                               (Interrupt Service Routine resides at 002016 in Memory)
Since the 8080A CPU can support up to 8 different RST          of the advancements that were made in the transition
instructions, it can support up to 8 different                 from the 8080A to the 8085 include combining the Clock
interrupt-driven peripheral devices. This can be achieved      Generator functions of the 8224 onto the CPU chip,
by replicating the approach, presented in Figure 7, and        adding a non-maskable interrupt request, adding 3
by hardwiring the op-codes for each of the RESTART             “direct” interrupt request input pins, and adding some
instructions to the inputs of the Data Buffers (see            form of interrupt priority. The 8085 still requires some glue
Table 10).
                                                               logic in order to produce the Control Bus signals (i.e.,
These Data Buffers should be enabled only during the           -IOR, -IOW, -MEMR, -MEMW). Further, in order to
-INTA cycle, and only when their associated peripheral
                                                               minimize pin count, the 8085 contains a multiplexed
requested the interrupt service.
                                                               Address/Data Bus (AD0 - AD7). Specifically, the lower 8
C.6.1.3 8085 Microprocessor                                    bits of the Address Bus share pins with the 8 bit Data Bus.
The 8085 CPU is another early Intel microprocessor,            Hence, a 74LS373 8-bit latch is needed in order to
although it is more advanced than the 8080A CPU. Some          demultiplex the Address and Data buses.
     Rev. 2.11
                                                            30


                                                                                      XR88C681
Figure 8 presents a schematic of the 8085 CPU Module.
                            AD0                                               D0
                            AD1                                               D1
                            AD2                                               D2
                            AD3                                               D3
                            AD4                                               D4
                X1          AD5                                               D5
                            AD6                                              D6
                            AD7                                               D7
                X2                                                1Q
                                                      1D                      A0
                TRAP                                  2D          2Q          A1
                                                      3D          3Q          A2
                RST 7.5
                                                      4D          4Q          A3
                RST 6.5
                                                      5D          5Q          A4
                RST 5.5
                                                      6D          6Q          A5
                INTR                                  7D          7Q          A6
                -INTA                                 8D          8Q          A7
                           ALE                        C
                                                        74LS373
                            A8                                 A8
                            A9                                 A9
                            A10                                A10
                            A11
                                                                                                          -IOR
                                                               A11
                            A12                                A12
                            A13                                A13
                                                                                                          -MEMR
                            A14                                A14
                            A15                                A15
                          -IO/M                                                                           -IOW
                            -RD
                            -WR
                                                                                                          -MEMW
                   8085 CPU
                                Figure 8. A Schematic of the 8085 CPU Module
Figure 9 illustrates an approach to interfacing the       However, the user could have just as easily connected the
XR88C681 DUART to the 8085 CPU module. Note that          XR88C681 device to the CPU module’s I/O port (e.g, the
the XR88C681 DUART, in this case, is memory mapped        signal -IOR and -IOW of the CPU module are connected
(e.g., the signals -MEMR and -MEMW of the CPU module      to the -RD and -WR pins of the DUART, respectively).
are connected to the -RD and -WR pins of the DUART).
     Rev. 2.11
                                                       31


  XR88C681
                      AD0 - AD7                                                                  D0 - D7
                                                                             A0 - A3
                                                  1D - 8D                                       A0 - A3
                    X1                                                               -CS_DUART
                                                      1Q - 8Q          A4 - A7
                                                                                                -CS
                             ALE                  C
                    X2
                    TRAP                           74LS373
                    RST 7.5                                            A8 - A15
                    RST 6.5
                    RST 5.5                                             Address
                                                                        Decoder
                    INTR
                    -INTA                                                                        -RD
                       A8 - A15                                                                  -WR
                           -IO/M                       -MEMR
                                                                                                XR88C681
                             -RD
                                                       -MEMW
                                                                                           -CS_OTHER_IC
                            -WR
                     8085 CPU
            Figure 9. Schematic of the XR88C681 Interface to the 8085 CPU Module (Memory Mapped).
The DUART’s -INTR pin was deliberately omitted from            (TRAP). When discussing interfacing for the interrupt
Figure 9, because its use will be addressed in Figure 10       servicing of peripheral devices such as the DUART, we
and Figure 11.                                                 are only concerned with the maskable interrupt request
                                                               inputs. Of the four maskable interrupt request inputs;
8085 CPU Module Interrupt Structure                            three of these inputs support “Direct Interrupt”
The 8085 CPU supports both Direct and “External”               processing.     The remaining one interrupt request
Vectored Interrupt processing. The 8085 has 4 maskable         supports “External Vectored Interrupt” processing.
interrupt request inputs (RST 5.5, RST 6.5, RTS 7.5, and       Table 11 lists these Interrupt Request inputs and their
INTR), and 1 non-maskable interrupt request input              characteristics/features.
     Rev. 2.11
                                                            32


                                                                                                XR88C681
    Input Name                   Trigger                Priority          Type          Acknowledge        Address (Hex)
                                                                                           Signal?
       RST 7.5           Positive Edge Triggered           2              Direct             None               003C
       RST 6.5          High Level Until Sampled           3              Direct             None               0034
       RST 5.5          High Level Until Sampled           4              Direct             None               002C
        INTR            High Level Until Sampled           5       External Vectored    -INTA = “Low”       See Table 10
                    Table 11. 8085 CPU Maskable Interrupt Request Inputs and their Features
Direct Interrupts                                                prioritization scheme no longer applies to that particular
                                                                 interrupt. Consequently, it is possible that an RST 5.5
The 8085 CPU inputs RST 7.5, RST 6.5, and RST 5.5 are            interrupt request could “interrupt” the interrupt service
“Direct Interrupt” request inputs. Specifically, if any of       routine for the higher priority RST 7.5 interrupt request.
these inputs are asserted, then the program counter of           Therefore, the user must guard against this phenomenon
the CPU is, upon completion of the current instruction,          in his/her firmware.
automatically loaded with a memory location
(pre-determined by the circuitry within the 8085 device),        Table 11 also indicates that the 8085 CPU will support
and branches program control to that location. These             “external” vectored interrupts.       The manner and
“Direct” interrupts do not provide the peripheral device         commands that are used in external vectored interrupt
with any sort of “Interrupt Acknowledge”. Hence,                 processing are identical to that presented for the 8080
according to Table 11, if the RST 7.5 input were asserted,       CPU (see Section C.6.1.2).
the value “003C16” would be loaded into the program
counter of the CPU, and program control would branch to          Figure 10 and Figure 11 present two different
that location in memory. The user is responsible to insure       approaches that can be used to interface the XR88C681
that the correct interrupt service routine begins at that        DUART to the 8085 CPU.
location in memory.                                              Figure 10 presents a schematic where the DUART will
The 8085 CPU offers interrupt prioritization, within the set     request a “Direct” RST 6.5 Interrupt to the 8085 CPU. In
of Maskable Interrupts. This priority is reflected Table 11.     this case, the Interrupt Service Routine for the DUART
It should be noted that these priority levels only apply to      must begin at 003416 in system memory. This is a very
“pending” interrupt request. Once a particular interrupt         simple interface technique, because there is no “Interrupt
has “left the queue” and is being serviced by the CPU, this      Acknowledge” signal to route and interface.
      Rev. 2.11
                                                              33


  XR88C681
                                                                            Vcc
                          RST 6.5                                                        -INTR
                       AD0 - AD7                                                         D0 - D7
                                                        D      Q                         A0 - A3
                              ALE                       C
                                                                      A7 - A4
                                                        74LS373
                         A15 - A8                          Address Decoding              -CS
                                                                 Logic
                                                                    -IOR
                            -IO/M                                                        -RD
                               -RD                                -MEMR
                              -WR                                                        -WR
                                                                    -IOW
                                                                  -MEMW                      XR88C681
                 8085 CPU
                    Figure 10. The XR88C681/8085 CPU Interface for Direct Interrupt Processing
                          (Interrupt Service Routine is located at 003416 in System Memory)
Figure 11 presents a schematic where the DUART will request a “External-Vectored” Interrupt to the 8085 CPU. In this
case, the Interrupt Service Routine for the DUART must begin at 002016 in system memory.
    Rev. 2.11
                                                         34


                                                                                     XR88C681
                                                                        Vcc
                U1                                                                            U4
                                                    U5
                      INTR                                                             -INTR
                                                                     U6
                      -INTA                                                     Vcc
                                                                  U3
             8085 CPU
                                                                     -OE1 -OE2
                                                               D0
                        AD0                                         DO0     DI0
                                                               D1
                        AD1                                         DO1     DI1
                                                               D2
                        AD2                                         DO2     DI2
                                                               D3
                        AD3                                         DO3     DI3
                                                               D4
                        AD4                                         DO4     DI4
                                                               D5
                        AD5                                         DO5     DI5            XR88C681
                                                               D6
                        AD6                                         DO6     DI6
                                                               D7
                        AD7                                         DO7     DI7
                                                                   SN74LS244
                                                 1D         1Q  A0
                                                 2D         2Q  A1
                                                 3D             A2
                                                            3Q
                                                 4D             A3
                                                            4Q
                                                 5D         5Q  A4
                                                 6D         6Q  A5
                                                 7D         7Q  A6
                                                 8D         8Q  A7
                        ALE                      C
                                                   74LS373
                  Figure 11. The XR88C681/8085 CPU Interface for Vectored Interrupt Processing (In-
                            terrupt Service Routine is located at 002016 in system memory)
C.6.1.4 68HC11 Microcontroller
Motorola manufactures a family of microcontrollers, referred to as the MC68HC11 microcontrollers. This family of
microcontrollers offers some of the following amenities:
D 5 Multi-Function Parallel Ports
D ROM or EPROM
D RAM
D A/D Converter
    Rev. 2.11
                                                         35


 XR88C681
Figure 12 presents the block diagram of the MC68HC11 C.
                MODA        MODB      XTAL EXTAL E        -IRQ -XIRQ -RESET
                                      Oscillator            Interrupt
                 Mode Control                                 Logic
                                       Clock Logic
                                                                                            RAM 256 Bytes
                                                       CPU Core
                                                                                                                          VRH
                   Timer                                                                                                  VRL
                  System                  Bus Expansion
                                             Address         Address/Data
                                                                                      SPI         SCI
                                                                                                          A/D Converter
                                                                                    SS*
                                                                                                    RXD
                                                                                    SCK
                                                                                              TXD
                                          Strobe and Handshake Parallel I/O         MOSI
                                                                                    MISO
                                                   8
                                                                   Control               Control
                   Port A                    Port B                Port C                Port D              Port E
                                Figure 12. Block Diagram of the MC68HC11 Microcontroller
The 68HC11 can be configured to operate in a “Single                   configured into the Expanded Multiplexed mode by tying
Chip” Mode or in an “Expanded Multiplexed Bus” mode. If                both the MODA and MODB pin to Vcc, and then resetting
a device is configured to operate in the “Single Chip”                 the device.
mode, the entire 64K bytes of Address space is internal to             The MC68HC11 consists of 5 different multi-function
the C IC. Please note that this does not mean that there               parallel ports. Each of these ports are briefly discussed.
is 64K bytes of memory, or other addressable portions
within the device. A 68HC11 MCU configured for “Single                 Port A
Chip” mode operation cannot address any components
external to the MCU. Therefore, if a user desired to                   Port A consists of 3 input pins, 4 output pins and 1
interface the DUART to this C, then the C must operate                 bi-directional pin. This port is used to support the Timer
in the “Expanded-Multiplexed” mode. The MC68HC11 is                    System. One of the input pins can be used for the Pulse
    Rev. 2.11
                                                                  36


                                                                                                XR88C681
Accumulator. Three of the input pins support input              IRQ
capture functions; and four of the output pins support
output compare functions.                                       This is the “maskable” interrupt request input. If this input
                                                                is asserted (e.g., toggled “low”), then the 68HC11 C will
Port B                                                          branch program control to FFF2, FFF3 in system memory
Port B consists of 8 output pins. If the 68HC11 C is            (on-chip ROM). The user is responsible for insuring that
operating in the single chip mode, this port functions as a     the appropriate interrupt service routine resides at this
general purpose output port. However, if the 68HC11 is          location in memory.
operating in the expanded-multiplexed mode, then this
port will function as the upper address byte for
                                                                AS/STRA
memory/peripheral device interfacing (A8 - A15).
Port C                                                          AS or “Address Strobe” can be used to demultiplex the
                                                                address/data bus of Port C. This pin is at a logic “high”
Port C consists of 8 bi-directional pins. When the 68HC11       during the first half of a memory cycle; and at a logic “low”
is operating in the single-chip mode, this port functions as    during the second half of a memory cycle.
a general purpose bi-directional port. However, if the
68HC11 is operating in the expanded-multiplexed mode            If the 68HC11 is intended to operate in the
then this port will function as the multiplexed address/data    expanded-multiplexed mode and interface to more than
bus (AD0 - AD7). Specifically, during the first half of a       256 bytes of addressable memory space, then both Ports
memory cycle, this port will function as the lower address      B and C are required as shown in Figure 13. Figure 13
byte (Port B is the upper address byte) for addressing          also illustrates how the XR88C681 DUART could be
memory devices and peripheral components. During the            connected to the 68HC11 C for interrupt driven
second half of the memory cycle, this port will function as     operation. If the DUART requests an interrupt, its active
the bi-directional data bus.            This port can be        low -INTR pin will be asserted (toggle low), which will, in
demultiplexed via the use of the AS (Address Strobe) pin        turn, cause the -IRQ pin of the CPU to be asserted. When
and a 74LS373 latch device.                                     this occurs the C will continue executing its current
                                                                instruction. After completion of this instruction, program
Port D                                                          control will shift to location FFF2, FFF3 in system
                                                                memory. The user is responsible to insure that the
Port D consists of 8 bi-directional pins. However, this port    DUART’s interrupt service routine resides at this location
can be configured to support the on-chip Serial Peripheral      in memory.        The C will not issue an interrupt
Interface (SPI), and Serial Communications Interface            acknowledge signal to the DUART. Instead, the C will
(SCI).                                                          just processes through the interrupt service routine.
                                                                Once the C has eliminated the cause(s) of the DUART’s
Port E                                                          interrupt request, the -INTR pin will be negated and the C
Port E consists of either 4 or 8 inputs (depending upon the     will return from the Interrupt Service Routine and resume
packaging option). This port can be configured to function      normal processing.
as a general purpose input or as the inputs to the on-chip      One more point should be mentioned about Figure 13.
A/D converter.                                                  The glue-logic circuitry required to generate the -WR,
There are numerous other pins that are pertinent for            -RD, and the RESET signals for the DUART, from the
interfacing to the XR88C681 DUART device. Some of               -R/W, -RESET, and E clock presented in Figure 2. This
these pins are discussed here.                                  circuitry has also been included in Figure 14.
     Rev. 2.11
                                                             37


XR88C681
   5V                                                                    to other ICs
                               E
           MODA            -R/W
                       A8 - A15         Address
           MODB                         Decoder                         -CS
                                                                        -RD
                                                                        -WR
                            -IRQ                                        -INTR
                                                         A4 - A7
                              AS             G
                                                       Q
                                             D                          A0 - A3
                                                           A0 - A3
                                               74HC373
                     AD0 - AD7                                          D0 - D7
                68HC11                                                          XR88C681
                Figure 13. XR88C681/MC68HC11 Microcontroller Interfacing Approach
 Rev. 2.11
                                                38


                                                                                                  XR88C681
                   -R/W
                                                                                                           -WR
                    E clock
                                                                                                            -RD
                     -RESET                                                                               RESET
        Figure 14. Glue Logic Circuitry Required to Interface the MC68HC11 C to the XR88C681 DUART
C.6.1.5 Z-80 CPU                                                 be served. When the DUART has received (or detected)
                                                                 the IACK signal, it will, in response, place the contents of
The Z-80 CPU can be interfaced to a DUART operating in           the Interrupt Vector Register (IVR) on the Data Bus. The
the I-Mode, if it (the CPU) is operating in Interrupt Modes 0    CPU will read this “interrupt vector” information; and
or 1. However, for the sake of “process or continuity”, the      determine the following two things (based on the
details associated with the Z-80 CPU will be presented in        “interrupt vector” information).
Section C.6.2.1.
                                                                 D The source of the interrupt request (e.g., which pe-
                                                                     ripheral needs service).
C.6.2 Z-Mode Interrupt Servicing                                 D The appropriate location of the interrupt service rou-
                                                                     tine.
The DUART will be in the I-Mode following power up or a
hardware reset of the IC. The user must invoke the “Set          Afterwards, program-control will be branched to the
Z-Mode” command (see Table 3), in order to command               location of the interrupt service routine.
the DUART into the Z-Mode. In general, a CPU
                                                                 Another characteristic of Z-Mode operation is that it
interfacing to a DUART operating in the Z-Mode will
                                                                 allows the user to prioritize the interrupt requests from
function as follows during interrupt servicing.
                                                                 numerous peripheral devices, via hardware means. Let
If the DUART requests interrupt servicing from the CPU, it       us suppose that we have several DUART devices; and
will assert the -INTR pin (e.g., toggle “low”). Once the         that each of these devices have been configured to
CPU has detected the interrupt request, it will issue an         operate in the Z-Mode. The user could prioritize the
IACK (Interrupt Acknowledge) signal back to the DUART.           interrupt request of each of these devices by connecting
When the CPU sends the IACK signal to the DUART it is            these devices in a “daisy-chain” in a manner as presented
informing the DUART that its interrupt request is about to       in Figure 15.
      Rev. 2.11
                                                              39


  XR88C681
                                     VCC
                  -INT
                                            -INTR                      -INTR                            -INTR                     -INTR
                          VCC           IEI        IEO             IEI         IEO                  IEI       IEO             IEI       IEO
            CPU
                                            -IACK                      -IACK                            -IACK                     -IACK
               -IACK
                                           HIGHEST                                                                              LOWEST
                                                                                      PRIORITY
                       Figure 15. A Diagram of Numerous DUARTs Configured in an Interrupt
                                                 Daisy Chain (for Z-Mode Operation)
In addition to the -INTR and -IACK pins, the Z-Mode                        D An interrupt, requested by the device, has just been
DUART also uses the IEI and IEO pins; which are defined                          serviced
as follows:                                                                If any of these conditions are false, then the IEO pin will be
                                                                           at a logic “low”.
IEI - Interrupt Enable Input                                               Note:
                                                                              Once the IEO pin has toggled “low”, and the CPU has ac-
This active-high input is only available if the DUART is                      knowledged the interrupt request and has completed the inter-
configured to operate in the Z-Mode. If this input is at a                    rupt service routine, the IEO pin will remain “low” until the user
logic “high” then all unmasked interrupt requests, from                       invokes the “RESET IUS” command (see Table 3). Therefore,
this DUART, are enabled.                                                      if the DUART is going to operate in the Z-Mode, the user must
                                                                              include the “RESET IUS” Command at the very end of the
Note:                                                                         DUART interrupt service routine.
  Those interrupts which have been masked out by the IMR are
  still disabled. However, if this input is at a logic “low”, then all
  interrupts (whether masked or unmasked) are disabled.
                                                                           System Level Application of the IEI and IEO pins
  Hence, IEI can act to globally disable all DUART interrupt
  requests.                                                                Figure 15 depicts a series of DUARTs connected in a
                                                                           daisy-chain fashion. In this figure, the left-most DUART
IEO - Interrupt Enable Output                                              has the highest interrupt priority. This is because this
                                                                           DUART’s IEI input is hardwired to Vcc. Therefore, the
This active-high output is only available if the DUART is                  unmasked interrupt requests, from this DUART are
configured to operate in the Z-Mode. This output is often                  always enabled. The DUART device, located just to the
times connected to the IEI input of another (lower priority)               right of the “highest interrupt priority” device is of a lower
device. This output is “high” if all of the following                      interrupt priority. This is because the IEI input of this lower
conditions are true.                                                       priority device is connected to the IEO output of the
D The device’s IEI input is at a logic “high”                              highest priority DUART. Whenever the “highest priority”
D The device is not requesting an interrupt from the                       device requests an interrupt, its IEO output will toggle
    CPU                                                                    “low”. This will in turn, disable the “lower priority” device
       Rev. 2.11
                                                                       40


                                                                                               XR88C681
from issuing any interrupt requests to the CPU. This             right most DUART has the lowest-interrupt priority
“lower priority” DUART will be prohibited from issuing           because its “interrupt request” capability can be disabled
interrupts until the IEO pin of the “highest priority” DUART     by the actions of any one of the DUARTs to the left.
has toggled “high”.                                              Figure 16 presents a timing diagram depicting the
Referring, once again, to Figure 15, the further to the right    sequence of events that will occur during and following an
a DUART device is, the lower its interrupt priority. The         Interrupt Request from the DUART.
      -INTR
      -IACK
         -RD
   D0 - D7                       FLOAT                     NOT VALID          VECTOR                 FLOAT
         IEI
         IEO
                                                                                                           Reset IUS
                                                                                                           Command
              Figure 16. Timing Diagram Illustrating the Sequence of Events Occurring Between the
                    DUART and the CPU During an Interrupt Request/Acknowledge and Servicing
Additional Things to Note About Z-Mode Operation                 D 8086 P
                                                                 D 80286 - 80586 P
Z-Mode operation is supported by all Zilog Peripheral            Please note that it is possible to interface the 80X86
components. All Zilog Peripheral components have an              Family of microprocessors to an I-Mode DUART,
Interrupt Vector Register, Interrupt Acknowledge (IACK)          however, additional components and design complexity
input, IEI input, and an IEO output. Therefore, Figure 15        would be required in order to accomplish this. The
could have easily included some other peripheral                 technique/approaches to interfacing the Z-Mode DUART
components, in addition to or in lieu of DUARTs.                 to these microprocessors is presented in detail, in the
                                                                 following sections.
As mentioned earlier, Z-Mode operation is recommended
if the DUART is to be interfaced to the following                C.6.2.1 Z-80 Microprocessor
processors.
                                                                 The Z-80 P consists of an 8 bit Data Bus, a 16 bit Address
D Z-80 Microprocessor (Interrupt Mode 2)                         Bus and numerous control pins. The Z-80 P is a very
                                                                 flexible processor which can actually interface to either a
D 8088 C                                                         Z-Mode or an I-Mode DUART device. This is because the
     Rev. 2.11
                                                              41


  XR88C681
Z-80 P can be configured to operate in one of three                 previously mentioned) because its address and data bus
different “interrupt modes”. The Z-80 is also a little bit less     are not multiplexed. Figure 17 presents a schematic of
complicated to interface to (than some of the P/ Cs                 the pin out of the Z-80 P.
                                       A11   1                                    40 A10
                                       A12   2                                    39 A9
                                       A13   3                                    38 A8
                                       A14   4                                    37 A7
                                       A15   5                                    36 A6
                                       PHI   6                                    35 A5
                                         D4  7                                    34 A4
                                         D3  8                                    33 A3
                                         D5  9                                    32 A2
                                         D6 10                                    31 A1
                                                             Z80 CPU
                                       VCC  11                                    30 A0
                                         D2 12                                    29 GND
                                         D7 13                                    28 -RFSH
                                         D0 14                                    27 -M1
                                         D1 15                                    26 -RESET
                                       -INT 16                                    25 -BUSRQ
                                      -NMI  17                                    24 -WAIT
                                     -HALT 18                                     23 -BUSAK
                                   -MREQ 19                                       22 -WR
                                    -IORQ 20                                      21 -RD
                                       Figure 17. Pin Out of the Z80 CPU Device
The Z-80 CPU will support Read/Write operations                     (I/O Port Read), -IOW (I/O Port Write) or -IACK/-INTA
between memory and I/O. The Z-80 does require some                  (Interrupt Acknowledge) pins. Each of these functions
additional glue logic in order to interface directly to             can be derived from the -RD, -WR, -IORQ, -MREQ and
memory and peripheral devices. For instance, the Z-80               -M1 pins. Figure 18 presents a schematic of the Z-80
CPU device does not come with the control bus signals:              CPU Module, which shows how once can extract the
-MEMR (Memory Read), -MEMW (Memory Write), -IOR                     control bus signals from these CPU control pins.
     Rev. 2.11
                                                                 42


                                                                                              XR88C681
                                     GND
                                     +5V         A0 - A15
                 Clock input         PHI
                                                  D0 - D7
                                     -INT
                                     -NMI
                                     -WAIT             -WR                                       -MEMW
                                     -BUSRQ
                                                       -RD
                                                                                                  -MEMR
                                     -HALT         -MREQ
                                                                                                  -IOW
                                     -RFSH          -IORQ
                                     -BUSAK                                                       -IOR
                                                       -M1
                                                                                                  -INTA
                                     -RESET
                                    Figure 18. Schematic of Z-80 CPU Module
Z-80 CPU Interrupt Servicing Capability                        Each of these interrupt modes use the -INT pin of the Z-80
                                                               CPU and will be discussed in the following sections.
The Z-80 CPU contains two interrupt request pins: -NMI
and -INT. -NMI is the “Non-Maskable” interrupt request         External Vectored Interrupt Processing (Interrupt
input pin; and -INT is the “Maskable” interrupt request        Mode 0)
input pin. For the sake of interfacing to the DUART, we are    The Z-80 P will operate in this interrupt mode if the “IM 0”
only concerned with the -INT pin.                              instruction has been executed. Whenever the -INT pin is
                                                               asserted by a peripheral device requesting an interrupt,
The Z-80 CPU can be configured to operate in one of            the CPU will complete its current instruction. After
three different interrupt modes:                               completion of this instruction, the CPU module will assert
D External Vectored                                            -INTA (toggle “low”). -INTA is the active-low “Interrupt
                                                               Acknowledge” signal that the CPU module outputs in
D Direct
                                                               order to initiate the process of interrupt servicing. When
D “Peripheral” Vectored                                        the Z-80 CPU operates in the Interrupt Mode 0, it is
     Rev. 2.11
                                                            43


   XR88C681
awaiting “vector information” on the Data Bus, following       the DUART is operating in the I-Mode and that the Z-80 is
the assertion of -INTA. In this case (for this interrupt       operating in Interrupt Mode 0.
mode), this “vector” information is the op-code for one of
the RESTART instructions (RST). The Z-80 CPU                   Direct Interrupt Processing (Interrupt Mode 1)
supports up to eight different RST instructions (RST0 -
                                                               The Z-80 P will operate in this interrupt mode if the “IM 1”
RST38H). These instructions are one-byte calls to
                                                               instruction has been executed. Whenever the -INT pin is
specific locations within the CPU’s memory space, where
                                                               asserted by a peripheral device requesting an interrupt,
the appropriate Interrupt service routine resides.
                                                               the CPU will complete its current instruction. Afterwards,
Table 12 presents a list of these RESTART instructions,
                                                               the program counter will automatically be loaded with a
the op-codes and the corresponding RESTART
                                                               memory location (pre-determined by the circuit design of
addresses.
                                                               the Z-80 CPU device) and program control will be
                                                               branched to that location in system memory. In this case,
    Op-Code (hex)        Mnemonic             Restart          program control would branch to 003816 in memory. The
                                          Address (hex)
                                                               user is responsible for insuring that the appropriate
          C7                RST 0               0000           interrupt service routine is at that particular location in
          CF               RST 08               0008           memory. The Z-80 CPU module does not provide the
                                                               peripheral device with any sort of                  “Interrupt
          D7               RST 10               0010
                                                               Acknowledge”. The CPU just processes through the
          DF               RST 18               0018           Interrupt Service Routine, eliminates the cause(s) of the
          E7              RST 20H               0020           interrupt request and returns to normal operation.
          EF              RST 28H               0028
                                                               Peripheral Vectored Interrupt Processing
          F7              RST 30H               0030           (Interrupt Mode 2)
          FF              RST 38H               0038           The Z-80 P will operate in this interrupt mode if the “IM 2”
                                                               instruction has been executed. This interrupt “mode” is
                                                               very useful if the user wishes to connect the interrupt
        Table 12. Z-80 CPU Restart Instructions                request outputs of several peripherals to the one -INT
              Used with Vectored Interrupts                    input of the Z-80 CPU. This interrupt mode allows the
                                                               interrupting device to identify itself at a certain time, just
Therefore, once the CPU receives the op-code for one of        prior to interrupt servicing.
these RESTART instructions, it will begin executing this       Whenever the -INT pin is asserted by a peripheral device
instruction by loading the Program Counter with the            requesting an interrupt, the CPU will continue to complete
appropriate “Restart” Address. Afterwards, program             its current instruction. Once this current instruction is
control will be branched to the “Restart Address” location.    completed, the CPU Module will assert the -INTA signal to
For Example:                                                   inform the peripheral device that interrupt service is about
                                                               to begin. Once the interrupting peripheral device has
If the op-code E716 is loaded onto the Data Bus during the     detected the -INTA pulse, it will place an “interrupt vector”
-INTA   cycle, this op-code corresponds with the RST 20H       on the Data Bus. This interrupt vector will be read by the
instruction and, the CPU will load 002016 into the program     CPU and the CPU will branch program control to the
counter and program control with branch to that location       location (referred to by the interrupt vector). Please note
in memory (see Table 12). The user is responsible for          that if the IEI input to the DUART (or Zilog peripheral
insuring that the interrupt service routine begins at this     device) is “low” then the DUART (or Zilog peripheral
location in memory.                                            device) will be disabled from generating any interrupt
An example of a circuit realizing this form of interrupt       requests to the CPU.
processing, while interfacing to the DUART, is presented       An example of this approach is presented Figure 19. In
in Section C.6.1.2. This section discusses interfacing the     this case the XR88C681 DUART is configured to operate
DUART to the 8080A CPU Module. This exact same                 in the Z-Mode and is interfaced to the Z-80 CPU. When
approach could be used with the Z-80 CPU, provide that         the DUART requires interrupt servicing, it will assert its
      Rev. 2.11
                                                            44


                                                                                                          XR88C681
-INTR output. This action will, in turn, cause the -INT input       Acknowledge” cycle. DUART, in response to the -IACK
of the CPU to be asserted. Once the CPU has completed               signal, will place the contents of the Interrupt Vector
its current instruction, the CPU Module will assert the             Register (IVR) on the Data Bus. This data will be read by
-INTA signal. This will in turn assert the -IACK (Interrupt         the CPU, and program control will be branched to the
Acknowledge) input to the DUART. The purpose of the                 appropriate interrupt service routine. In the case of the
asserted -IACK signal is to inform the DUART that the               Z-80 CPU, this location is a 16 bit address which is
very next cycle will be an “IACK” or “Interrupt                     determined from Table 13.
                    Most Significant Byte                                                  Least Significant Byte
  Bit 15 Bit 14 Bit 13 Bit 12 Bit 11 Bit 10        Bit 9  Bit 8     Bit 7    Bit 6      Bit 5   Bit 4     Bit 3 Bit 2 Bit 1 Bit 0
           Contents of the I Register (within the CPU)             The 7 Most Significant Bits within the Interrupt Vector   0
                                                                                      Register of the DUART
Note: The LSB of the IVR is always set to “0” once read by the CPU. Interrupt Service Routines must begin at even ddresses.
        Table 13. The Relationship between the Contents of the Interrupt Vector Register (of the DUART)
                              and the location of the Interrupt Service Routine (Z-80 CPU)
Additionally, the user must be aware of the contents that he/she loads into the I Register of the CPU, during run time.
                                                                           from Vcc or higher
                                                                            priority peripheral       IEI
                                                            Address
                          A0 - A15                          Decoder           to lower priority
                                                                                  peripheral          IEO
                                                            Circuitry
                                                                                CS_DUART
                                                                                                      -CS
                                                                                A0 - A3
                                                                                                      A0 - A3
                           D0 - D7                                                                    D0 - D7
                               -INT                                                                   -INTR
                               -WR                                        -MEMW
                                                                                                      -WR
                                -RD                                       -MEMR
                                                                                                      -RD
                            -MREQ
                             -IORQ
                                                                          -INTA
                                                                                                      -IACK
                                M1
                     Z80 CPU                                                                             XR88C681
                    Figure 19. Schematic of an Approach to Interface the DUART to the Z-80
                                                 CPU (for Z-Mode Operation)
      Rev. 2.11
                                                                45


  XR88C681
C.6.2.2 8086 Microprocessor
The 8086 microprocessor is a 16 bit microprocessor manufactured by Intel Corporation. Figure 20 presents the pin out
diagram of this IC. Please note that in Figure 20, pins 24 - 31 have some additional labels, located off to the right of the
package. These additional labels will be explained later in this text.
                                    GND     1                                   40  VCC
                                    AD14    2                                   39  AD15
                                    AD13    3                                   38  A16/S3
                                    AD12    4                                   37  A17/S4
                                    AD11    5                                   36  A18/S5
                                    AD10    6                                   35  A19/S6
                                    AD9     7                                   34  -BHE/S7
                                    AD8     8                                   33  MN/MX
                                    AD7     9                                   32  -RD
                                    AD6    10                                   31  -RQ/-GT0     (HOLD)
                                                          8086 CPU
                                    AD5    11                                   30  -RQ/-GT1     (HLDA)
                                    AD4    12                                   29  -LOCK        (-WR)
                                    AD3    13                                   28  -S2          (M/-IO)
                                    AD2    14                                   27  -S1          (DT/-R)
                                    AD1    15                                   26  -S0         (-DEN)
                                    AD0    16                                   25  QS0          (ALE)
                                    NMI    17                                   24  QS1          (-INTA)
                                    INTR   18                                   23  -TEST
                                    CLK    19                                   22  READY
                                    GND    20                                   21  RESET
                                 Figure 20. Pin Out of the 8086 Microprocessor Device
Intel went to great lengths to keep the pin count of this IC     Bits A16 - A19 are multiplexed with status bits S3 - S6 to
low by multiplexing the functions of many of these pins.         form A16/S3, A17/S4, A18/S5 and A19/S6. All of these
This device consists of a 16 bit Data Bus and a 20 bit           pins are address lines during the first half of a memory
Address Bus. The Data Bus is multiplexed with the lower          cycle. However, during the second half of a memory
16 Address Bits (A0 - A15) to form AD0 - AD15. Address           cycle, these pins then take on their alternate functions
      Rev. 2.11
                                                              46


                                                                                               XR88C681
(e.g., AD0 - AD15 becomes D0 - D15, A16/S3 - A19/S6               column in Table 14. When the 8086 P operates in this
becomes S3 - S6). A second group of multiplexed pins is           mode, it presents a control bus very similar to that of the
controlled by the MN/-MX input pin. When this pin is high,        8085 P, and requires only an address latch and a clock
the “min” mode is selected and pins 24 through 31 take on         generator to form a CPU module.
the control definitions shown under the MN/-MX = 1
               Pin Number                          MN/-MX = 1 (Min Mode)                    MN/-MX = 0 (Max Mode)
                    24                                      HOLD                                     -RQ/-GT0
                    25                                       HLDA                                    -RQ/-GT1
                    26                                        -WR                                      -LOCK
                    27                                       M/-IO                                       -S2
                    28                                       DT/R                                        -S1
                    29                                       -DEN                                        -S0
                    30                                        ALE                                       QS0
                    31                                       -INTA                                      QS1
                     Table 14. MN/-MX Mode and Function of Pins 24-31 of 8086 CPU Device.
When MN/-MX is low, the 8086 P is operating in the “max”          request input; and INTR is the “maskable” interrupt
mode. This mode is intended for more complex                      request input. If the 8086 P is operating in the “min”
applications in which the 8086 P requires support from            mode, then the -INTA (Interrupt Acknowledge) pin is
the 8087 numeric data processor (NDP). In this mode, a            available on Pin 24 (see Figure 20). However, if the
special bus controller (the 8288) is required to generate         8086 P is operating in the “max” mode, then the -INTA
the memory and I/O control bus signals.                           signal must be derived from the -S0, -S1, and -S2 pins via
                                                                  the 8288 bus controller. Table 15 presents the processor
The 8086 P contains two interrupt request inputs: INTR            status and 8288 active outputs based on the -S0, -S1, and
and NMI. NMI is the active-high “non-maskable” interrupt          -S2 “max” mode status signals.
   -S2       -S1       -S0                  Processor State                                8288 Active Output
    0         0         0                Interrupt Acknowledge                                     -INTA
    0         0         1                     Read I/O Port                                       -IORC
    0         1         0                     Write I/O Port                                      -IOWC
    0         1         1                          Halt                                            None
    1         0         0                     Code Access                                        -MRDC
    1         0         1                    Read Memory                                         -MRDC
    1         1         0                     Write Memory                                       -MWTC
    1         1         1                        Passive                                           None
      Table 15. 8086 Processor State/8288 Bus Controller Active Output as a function of -S0, -S1 and -S2
     Rev. 2.11
                                                               47


  XR88C681
Figure 21 and Figure 22 present the 8086 CPU Mode, when operating in the “min” and “max” modes, respectively.
                                    AD0 - AD7                                         D0 - D7
                                                             D         Q
                        INTR                                                          A0 - A7
                                                             C
                                                               74LS373
                        -INTA
                                   AD8 - AD15                                         D8 - D15
                        HOLD
                                                             D         Q
                                                                                      A8 - A15
                                          ALE                C
                                                               74LS373
                        -DEN
                        DT/-R
                                                                                         -IOR
                                         M/-IO
                                                                                         -MEMR
                Vcc
                                          -RD
                                                                                         -IOW
                        MN/-MX
                                          -WR
                                                                                         -MEMW
                             8086 CPU
                             Figure 21. Schematic of the 8086 CPU Mode (Min Mode)
    Rev. 2.11
                                                      48


                                                                                                  XR88C681
                                                                CLK
                                                                                -MRDC                -MEMR
                       CLK                      -S0             -S0             -MWTC                -MEMW
                                                -S1             -S1
                                                                                  -IORC              -IOR
                                                -S2             -S2
                                                                                 -IOWC               -IOW
                                                                DEN
                                                                DT/-R              -INTA
                                                                ALE
                       INTR                                       8288 Bus Controller
                                        AD0 - AD7                                                    D0 - D7
                                                                    D                Q               A0 - A7
                                                                    C
                                                                        74LS373
                                       AD8 - AD15                                                    D8 - D15
                                                                    D                Q               A8 - A15
                              8086 CPU
                                                                    C
                       MN/-MX                                            74LS373
                                   Figure 22. Schematic of the 8086 CPU Mode (Max Mode)
8086 C Interrupt Processing                                       determine the location of the interrupt service routine in
                                                                  memory. Since this “interrupt vector” is 8 bits wide, the
                                                                  8086 P can accommodate up to 256 different interrupt
If a peripheral component requires interrupt service from
                                                                  vectors (0 - 255). Additionally, since each vector is
the CPU, it will assert the CPU’s INTR input (by toggling it
                                                                  multiplied by “4”, the user is expected to reserve the first
high). Once the CPU has completed its current
                                                                  1K byte of memory for the Interrupt Service
instruction, it will assert the -INTA pin (if operating in the
                                                                  Routines/Jump Table.
“min” mode) or set the -S0, -S1, and -S2 pins to “0” (see
Table 15). In either case, the -IACK input of the peripheral      Figure 23 presents a schematic of the XR88C681
will be asserted. Once this happens, the interrupting             DUART interfacing to a “min” Mode 8086 CPU device.
peripheral is expected to place an “interrupt vector” byte        Please note that the DUART has been configured to
on D0 - D7 of the data bus. The 8086 P will read this data        operate in the Z-Mode. Therefore, the user must account
and multiply this value by the number 4 in order to               for the IEI input to the DUART device.
      Rev. 2.11
                                                               49


  XR88C681
                                                       D0 - D7
                     AD0 - AD7                                                                      D0 - D7
                                                74LS373
                                                                                            A0 - A3 A0 - A3
                                                D       Q
                                                C
                                                                           A4 - A7
                    AD8 - AD15                               D8 - D15                               -CS
                                                                                  Address
           HOLD                                  74LS373                          Decoder
                                                               A8 - A15
                                                D       Q
                           ALE                  C
                         -INTA                                                                      -IACK
           -DEN
                          INTR                                                                      -INTR
           DT/-R
                                                                               from higher          IEI
                                                                               priority device
                         M/-IO
  Vcc
                           -RD
                                                                             -MEMR
                                                                                                    -RD
           MN/-MX
                           -WR                                             -MEMW
                                                                                                    -WR
              8086 CPU
                                                                                                        XR88C681
                       Figure 23. Schematic of the XR88C681 DUART Device Interfacing to a
                                              “Min” Mode 8086 CPU Device
D. TIMING CONTROL BLOCK
The Timing Control Block allows to the user to specify the       D 16 bit Counter/Timer
bit rates that he/she wishes to transmit and receive data at     D 4 - External Input Pins (to clock the Transmitters
each channel. The Timing Control Block consists of the               and Receivers, directly)
following elements:
                                                                 D Two Clock Select Registers (32:1 MUXs)
D Oscillator Circuit
                                                                 Figure 24 presents a block diagram of the Timing Control
D Bit Rate Generator                                             block for the XR88C681 device.
      Rev. 2.11
                                                             50


                                                                                           XR88C681
                                                                           IP4       IP3
                                                                        (RXCA)     (TXCA)
                                        Preset Registers                                             32:1
                                        (CTUR, CTLR)                                                 MUX        TxCA
          TXCA
          TXCB
             IP2                                                                                     32:1
                      Divide by 16          Counter/                                                 MUX        RxCA
      ACR[4-6]                              Timer
                                                                                                     32:1
                                                                                                     MUX        TxCB
                                            Divide by 16
                                                                                                     32:1
                                                                                                     MUX        RxCB
        X1/CLK                                   Bit Rate
                        Oscillator
            X2            Circuit               Generator
                                                                          IP5         IP2
                                                                       (TXCB)       (RXCB)
                                                  ACR[7]
                                 Figure 24. Block Diagram of DUART Timing Control Block
Each element of the Timing Control Block is discussed          signal, for use by the Bit Rate Generator, and
here:                                                          Counter/Timer. A crystal or TTL signal frequency of
                                                               between 2 MHz and 4 MHz is required for proper
D.1 Oscillator Circuit:                                        operation of the DUART. However, a crystal or TTL signal
A crystal oscillator is typically connected externally         frequency of 3.6864 MHz is required for the generation of
across the X1/CLK and X2 pins. The Oscillator Circuit          standard bit rates by the Bit Rate Generator (See
(within the chip) functions as the load for the resonant       Table 18).      Figure 25 presents a recommended
(crystal) oscillator, and buffers the resulting oscillating    schematic for the XTAL Oscillator circuitry.
     Rev. 2.11
                                                            51


   XR88C681
                                                   C1: 10pF + (Stray < 5pF)
                                                   C2: 10pF + (Stray < 5pF)
                                                   R1: 100ohm
                                                   R2: 100ohm        R1
                                                                             X1
                                C1
                                                                               XR88C681
                                 C2
                                                                      R2
                                                                             X2
                                                3.6864MHz
                                                   Parallel Resonant Crystal
                        Figure 25. A Recommended Schematic for the XTAL Oscillator Circuitry
Note: The user also has an option to drive the Oscillator Circuit with a TTL input signal, in lieu of using a crystal oscillator. If this
        approach is used, the TTL must be driven into the X1/CLK pin, and the X2 pin must be left floating.
If the user desires to run numerous DUARTs from a single crystal oscillator, Figure 26 presents an approach and the
necessary circuitry to accomplish this objective.
                                                     XR88C681
                                                X1                  X2
                                                           Y1
                                                                                                     To X1 inputs of
                                                                                                     other DUARTs
                                                       3.684MHz
                                                                                    74HC14
     Figure 26. A Recommended Schematic to Drive Multiple DUARTs From the Same Crystal Oscillator.
Note: The user is urged not to use the 74LS14 Schmitt Trigger Inverter in lieu of the 74HC14 device. The input of the 74LS14 tends to
        load down the oscillating signal from the DUART, to the point that the Schmitt Trigger inverter can no longer change state or
        respond to the oscillator signal.
      Rev. 2.11
                                                                   52


                                                                                                  XR88C681
D.2 Bit Rate Generator                                              clock frequencies output from the BRG are at 16 times
                                                                    these rates.
The BRG (Bit Rate Generator) accepts the timing output              The user can select one of two different sets of bit rates, to
of the Oscillator Circuit and generate the clock signal for         be generated from the BRG. This selection is made by
23 commonly used data communication bit rates ranging               setting or clearing ACR[7]. A listing of these sets of Bit
from 50 bps up to 115.2kbps. Please note that the BRG               Rates, from the BRG, is presented in the discussion of the
will only generate these standard bit rates if the Oscillator       Clock Select Registers (CSRs) in Section D.5. A block
Circuit is running at 3.6864 MHz. Additionally, the actual          diagram of the BRG circuitry is presented in Figure 27.
                                                                                        CSRA[7:4]
                                                                                        32:1 MUX        RXCA
                                                                                        CSRA[3:0]
                                                      ACR[7]
                                                                                        32:1 MUX        TXCA
         X1/CLK            Oscillator            Bit Rate Generator
              X2            Circuit              Channels A and B
                                                                                        CSRB[7:4]
                                                                                        32:1 MUX        RXCB
                                                                                        CSRB[3:0]
                                                                                        32:1 MUX        TXCB
            Figure 27. Block Diagram of the Bit Rate Generator portion of the Timing Control Block
      Rev. 2.11
                                                                53


  XR88C681
D.3 Counter/Timer                                                 timing sources for the Counter/Timer can be made by
                                                                  writing the appropriate data to ACR[6:4] (Auxiliary Control
The Timing Control Block also contains a 16 bit                   Register bits 6 through 4). Please see Table 16 for the
Counter/Timer (C/T). The C/T is a programmable 16 bit             relationship between the Counter/Timer mode, the
down-counter which can use one of several timing                  Timing Source and ACR[6:4]. The C/T output is available
sources as its input. Figure 28 presents a block diagram          to the Clock Select Registers for use as a programmable
of the circuitry surrounding the C/T. The selection of these      bit rate generator for both Transmitters and Receivers.
                         Oscillator
                          Circuit                           Preset Registers
                                                            (CTUR, CTLR)
                                       Divide by 16
                                                                                               to 32:1 MUXs
                            IP2
                                       Divide by 16           Counter/Timer
                           TXCA                                                               C/T_RDY
                                                                                                 (OP3)
                          TXCB
                                                               ACR[4-6]
                               Figure 28. A Block Diagram of the Circuitry Associated with the
                                                           Counter/Timer
     Bit 6         Bit 5         Bit 4                  C/T Mode                   Timing Source
      0              0             0                     Counter                   External Input - IP2
      0              0             1                     Counter                   TXCA 1X - Clock of Channel A Transmitter
      0              1             0                     Counter                   TXCB 1X - Clock of Channel B Transmitter
      0              1             1                     Counter                   X1/CLK Input Divided by 16
      1              0             0                      Timer                    External Input - IP2
      1              0             1                      Timer                    External Input - IP2, Divided by 16
      1              1             0                      Timer                    X1/CLK Input
      1              1             1                      Timer                    X1/CLK Input Divided by 16
                                        Table 16. ACR[6:4] Bit Field Definition - C/T
     Rev. 2.11
                                                               54


                                                                                               XR88C681
D.3.1 Timer Mode:                                              interrupt generator, if the condition is programmed to
                                                               generate an interrupt via the interrupt mask register
Please note that of the two C/T Modes, the Timer Mode is       (IMR). The ISR[3] can be cleared by issuing the
the only mode which is relevant to the function of Bit Rate    address-triggered “STOP COUNTER” command (See
Selection. However, for completeness, the Counter              Table 1). In the TIMER mode, however, the command
Mode is also discussed here.                                   does not actually stop the C/T.
In the Timer mode, the C/T acts as a programmable
divider and generates a square wave whose period is            D.3.2 COUNTER MODE
twice the value (in clock periods) of the contents of the
                                                               In the Counter Mode, the C/T counts down the number of
Counter/Timer Registers, CTUR and CTLR. The C/T can
                                                               pulses written into CTUR/CTLR, beginning at the receipt
be used as a programmable bit rate generator in order to
                                                               of a “START COUNTER” command.                             The
produce a 16X clock for any bit rate not provided by the
                                                               COUNTER/READY status bit (ISR[3]) is set upon
BRG. The square-wave, originating from the C/T is
                                                               reaching the count of 000016. The C/T will continue to
output on Output Port pin, OP3.
                                                               count past the 000016 and underflow (with the next count
If the C/T is programmed to operate in the Timer mode,         being FFFF16) until it is stopped by the CPU via a “STOP
the frequency of the resulting C/T square wave can be          COUNTER” command. If OP3 is programmed to be the
expressed as follows:                                          output of the C/T, the output will remain high until the
C/T Output Frequency =                                         terminal count is reached, at which time the output goes
                                                               low. It then returns to the high state and ISR[3] is cleared
           Frequency of Selected Timing Source                 when the C/T is stopped (via the “STOP COUNTER”
                 2·([CTUR]·2 8 + [CTLR] )                      command). A “START COUNTER” command while the
                                                               counter is running restarts the counter with the values in
                                                               CTUR/CTLR. The CPU may change the contents of
Where: [CTUR] = the contents of the CTUR register in
                                                               CTUR or CTLR at any time but the new count takes effect
         decimal form
                                                               only on after the subsequent START COUNTER
         [CTUR] = the contents of the CTLR register in
                                                               command. If new values are not programmed the
         decimal form
                                                               previous values are preserved and used for the next
Since the C/T Output is handled as a 16X clock signal by       cycle.
the DUART circuitry, the resulting bit rate is 1/16 the
frequency of the C/T Output signal. Therefore, the bit         D.4 External Inputs
rate, derived from the C/T can be expressed as follows:
                                                               The DUART allows for some of the Input Port pins (IP2 -
Bit Rate =                                                     IP5) to be used as direct external inputs to the Timing
           Frequency of Selected Timing Source                 Control Block as timing sources for the Transmitters and
                32·([CTUR]·2 8 + [CTLR] )                      Receivers of both channels. Please note that the user can
                                                               specify whether a clock signal, applied to one of these
The contents of the CTUR and CTLR registers may be             external inputs, is a 1X or a 16X clock signal; via the Clock
changed at any time, but will only begin to take effect at     Select Registers (see Section D.5). For a more detailed
the next half cycle of the square wave. The C/T begins         discussion on the Input Port pins and their function,
operation using the values in CTUR/CTLR upon receipt of        please see Section E.
the Address-Trigger “START COUNTER” command (See
Table 1).                                                      D.5 Clock Select Registers, CSRA and CSRB
The C/T then runs continuously. A subsequent “START            In Figure 24, the Clock Select Registers are the 32:1
COUNTER” command causes the C/T to terminate the               MUX’s. The Clock Select Registers are the means that
current timing cycle and begin a new timing cycle using        the user can select which clock signals will drive the
the current values stored in CTUR and CTLR. The                Transmitters and Receivers of both channels. The CSRs
COUNTER READY status bit, in the Interrupt Status              allow the user to select the 23 different standard bit rates
Register (ISR[3]), is set once each cycle of the square        from the BRG, the Counter/Timer output, or to use an
wave. This allows the use of the C/T as a periodic             external input as the timing source for the Transmitters
      Rev. 2.11
                                                            55


  XR88C681
and Receivers. Table 17 and Table 18 present the relationship between the contents of the CSRs and the clock source
driving the Transmitters and Receivers.
       Bit 7          Bit 6          Bit 5            Bit 4           Bit 3           Bit 2           Bit 1          Bit 0
                     Receiver Clock Select                                          Transmitter Clock Select
                          See Table 18                                                    See Table 18
                        Table 17. Bit Format of the Clock Select Registers, CSRA and CSRB
                Field                                                          Bit Rate
               CSR[7:4]                                ACR[7] = 0                                   ACR[7] = 1
               CSR[3:0]                      X=0                     X=1                    X=0                  X=1
     0        0        0        0               50                     75                     75                   50
     0        0        0        1              110                    110                    110                  110
     0        0        1        0            134.5                   134.5                  134.5                134.5
     0        0        1        1              200                    150                    150                  200
     0        1        0        0              300                   3600                    300                 3600
     0        1        0        1              600                  14.4K                    600                 14.4K
     0        1        1        0             1200                  28.8K                   1200                 28.8K
     0        1        1        1             1050                  57.6K                   2000                 57.6K
     1        0        0        0             2400                  115.2K                  2400                115.2K
     1        0        0        1             4800                   4800                   4800                 4800
     1        0        1        0             7200                   1800                   1800                 7200
     1        0        1        1             9600                   9600                   9600                 9600
     1        1        0        0            38.4K                  19.2K                   19.2K                38.4K
     1        1        0        1            Timer                   Timer                  Timer                Timer
     1        1        1        0        External - 16X         External - 16X         External - 16X        External - 16X
     1        1        1        1         External - 1X          External - 1X          External - 1X        External - 1X
Note: the b suffix denotes a binary expression. x = don’t care value.
                    Table 18. Bit Format of the Clock Select Registers, CSR[3:0] and CSR[7:4]
Please note that Table 18 calls for the user to specify the       X - The Select Extend bit
following parameters:
D ACR[7] - the most significant bit (MSB) of the Auxil-
    iary Control Register                                         Each transmitter and receiver, within the DUART has an
D X - The Extend bit                                              extend bit that can be set or cleared by writing the
ACR[7] is the MSB of the Auxiliary Control Register, and          appropriate data to the channel’s Command Register.
can easily be programmed by writing 1xxxxxxxb or                  Although this information can be found in Table 3.
0xxxxxxxb to the ACR, in order to set or clear,                   Table 19 summarizes these commands, and their effect
respectively.                                                     on the Extend bits.
      Rev. 2.11
                                                               56


                                                                                                         XR88C681
                     Register                                Contents                                Resulting Action
          Command Register A, CRA                              0816                        Set Rx BRG Select Extend Bit (X = 1)
          Command Register A, CRA                              0916                       Clear Rx BRG Select Extend Bit (X = 0)
          Command Register B, CRB                              0A16                        Set Tx BRG Select Extend Bit (X = 1)
          Command Register B, CRB                              0B16                       Clear Tx BRG Select Extend Bit (X = 1)
                                Table 19. Command Register Controls Over the Extend Bit
Note: If the user programs either nibble of the Clock Select Register (CSRn[7:4] or CSRn[3:0]) with values ranging from 016 to C16,
        then the user is using the BRG as a source for timing. However, these standard bit rates (presented in Table 18) apply only if
        the X1/CLK pin is driven with a 3.6864 MHz signal. If a signal with a different frequency (fo) is applied to the X1/CLK pin, then
        the DUART channel is running at the following baud rate:
Actual Baud Rate =
                          [Table 6 Baud Rate Value] · fo
                                    3.6864 MHz
provided that fo is between 2.0 MHz and 4.0 MHz.
Additionally, as in the case for standard baud rates, the actual frequency of the clock signal will be 16 times these values.
1X vs 16X Clock Signals
The terms “1X Clock” and “16X Clock” have been applied               Suppose that we have a serial data transmission system
throughout this text. Therefore, it is important to discuss          as depicted in Figure 29. This system consists of a
their meaning and significance.               A “16X clock”          remote transmitter (TX), and a local receiver (RX).
over-samples the received serial data by a factor of 16.
Whereas a “1X clock” only samples the signals once per
bit period. From this one should correctly conclude that
greater accuracy (lower bit error rates) are achieved via
the use of the 16X clock in lieu of the 1X clock. The
following paragraphs will clarify the reasons.                               Transmitter                                  Receiver
                                                                                   TX                                       RX
A receiver in one of the DUART channels is clocked by a
local timing source (from the Timing Control Block). If this
receiver is active and is receiving data from a remote
                                                                              TX Clock                                    RX Clock
serial transmitter, that transmitter is also clocked by its
own local timing source. Hence, there is no guarantee
that the clock frequency for the receiver is exactly the                        Figure 29. Example of a Serial Data
same as that for the remote transmitter. This is a                                        Transmission System
characteristic        of    asynchronous        serial      data
communication. Although the receiver and remote
transmitter have been programmed to receive and
transmit data at exactly the same baud rate, sufficient              Let us further assume that the Receiver is clocked by a
differences in the frequencies of the two clock sources              source that is slightly faster than that of the Transmitter,
(local receiver and remote transmitter) can contribute to            and that the Receiver is only sampling the serial data once
bit errors in the receiving process, as presented in the             per bit period. Figure 30 presents the results of this
following discussion.                                                phenomenon.
     Rev. 2.11
                                                                  57


  XR88C681
               Figure 30. Receiver (1X) Sampling, if the RX Clock is Slightly Faster Than the TX Clock
Figure 30 shows that the phase relationship between the Receiver’s sampling point and each serial data bit is changing.
In this case, the Receiver is sampling each serial data bit, earlier and earlier in the bit period, with each successive data
bit. This phenomenon is known as receiver drift. If there is no correction for receiver drift, there will be many errors in the
transmission and reception of this serial data, as depicted in Figure 31.
    Received Data            0        1         0           1          0          0           1           0        1
       Actual Data           0        1            0             1           0              1           0          1
                                   Figure 31. Illustration of an Error due to Receiver Drift
Figure 31 shows the Receiver sampling an eight bit string of data with bit pattern 0101010. It is interesting to note that, in
Figure 31, the Receiver sampled 01010010. It should be noted that Receiver drift can also be a problem is the local
Receiver is slower than the remote Transmitter clock.
      Rev. 2.11
                                                              58


                                                                                                XR88C681
In general the bit-error-rate, for this “uncorrected” system    factor of 16. However, after 7 16X clock periods has
is a function of the timing differences between the TX and      elapsed, the receiver will assume this point (within the
RX local clock signals. However, in order to correct for        START bit) to be the mid point of the bit period, and will
Receiver Drift and to minimize the BER during serial data       cease oversampling of the START bit and of the
transmission, many UARTs in the market place, employ            subsequent data. From this point, through the end of the
Receiver Oversampling of the START bit. When this               character, the Receiver will sample the serial data stream
feature is employed, the Receiver, upon detection of the        at the 1X rate. Stated another way, once the Receiver has
START bit, will begin oversampling this START bit by            reached, what it believes to be the mid-point of the START
some integer factor. Typically, for most present day            bit, the receiver will, from that point, begin sampling the
UARTs, this over-sample factor is 16. (The XR88C681             serial data at 1-bit period interval (see Figure 32). After
device also accommodates 16X receiver oversampling of           the Receiver has received the STOP bit, it will await the
the START bit). Therefore, in these devices, when the           occurrence of the START bit. Once the START bit has
Receiver detects the occurrence of a START bit, it (the         been detected, this oversampling procedure is repeated.
Receiver) will begin oversampling this START bit by a
                     Chosen as
                   the Midpoint
                     of the Bit
                                1 Bit Period
              7- 16X clock
                periods
             Figure 32. The Typical Sampling Pattern of Each Receiver Within the XR88C681 Device.
      Rev. 2.11
                                                             59


  XR88C681
The oversampling technique mitigates many of the serial           4. Write 1xxxxxxxb to ACR This step selects “Bit Rate”
data bit errors by attempting to adjust the receiver                   Set #2 per Table 18 of this data sheet.
sampling point, to near the midpoint of the bit periods, on a     Where the b suffix denotes a binary expression, and x
character to character basis. This approach is successful         denotes a “don’t care” value for the binary expression.
for two reasons:
                                                                  5. Write 8816 to CSRA. This step sets the Receive and
1. It offers periodic correction to the Receiver sampling              Transmit bit rate for Channel A to 115.2kbps (per
    point.                                                             Table 17 and Table 18).
2. It limits the Receiver drift phenomenon (between
    sampling point adjustments) to typically at most 12 bits      Example B: Programming the Bit Rate via the
    (8 bit character + parity and STOP bits).                     Counter/Timer
Therefore, if the user selects to receive data at a baud rate     Suppose the user wishes to transmit and receive data at
of 9600 baud; upon detection of the START bit, the                62.5kbps via Channel B. Please note that this particular
Receiver will begin sampling the data at (9600 x 16) =            bit rate is not offered by the BRG. In this case the user can
153,600Hz.         However, once the Receiver has                 do the following.
oversampled up to the 7th 153.6kHz clock pulse, it will
                                                                  1. Drive a 4 MHz TTL signal into the X1/CLK pin, while
mark this location as the midpoint of the START bit. From
                                                                       the X2 pin is left floating.
this point on, the 153.6kHz clock signal is divided by 16 to
generate the sample clock (9600Hz) for the remaining              2. Write 0016 to CTUR and 0216 to CTLR. This steps
data and overhead bits of the character.                               results in the C/T generating a square wave of
                                                                       frequency = 4 MHz/2.[2] = 1 MHz.
The XR88C681 devices gives the user the option to
declare an external input clock signal as either a 1X or          3. Write 110b to ACR[6:4] This will set the C/T into the
16X clock signal. Whenever the user is given a choice to               Timer mode, and select the Timing source for the C/T
use either the 1X or 16X clock signal (per the Clock Select            to be the X1/CLK input.
Registers), the user is advised to always use the 16X             4. Write DD16 to CSRB. This will specify that the timing
clock, in order to mitigate the effects of receiver drift. The         source for the Receiver and Transmitter of Channel B
user is further advised never to use the 1X clock features             will be derived from the C/T. Please note that when the
of the DUART, unless the incoming serial data stream is                DUART is programmed in this configuration, the C/T
synchronous with the Receiver (1X) clock.                              output represents a 16X over sample of the
                                                                       Transmitted and Received data. Therefore, the chip
D.6 Application Examples using the Timing Control                      circuitry will divide the 1 MHz square wave by 16, just
Block                                                                  like for clock signals originating from the BRG.
In order to clarify the roles of the assets within the Timing     Thus: Bit Rate = 1 MHz/16 = 62.5kbps.
Control Block, three examples are included.
                                                                  Example C: Using the External Input Ports
Example A: Using the BRG
                                                                  Suppose that, in addition to running Channel B at
Suppose that the user wishes to receive and transmit data         62.5kbps (see Example B), he/she wants to Transmit and
at a rate of 115.2kbps via Channel A. The user must do            Receive data at 1 Mbps via Channel A.
the following:                                                    The user needs to perform all of the steps presented in
1. Use a 3.6864 MHz crystal oscillator across the                 Example B, along with the following:
    X1/CLK and X2 pins; or driving a 3.6864 MHz TTL               1. Write xxxx01xxb to the OPCR                 (Output Port
    signal into the X1/CLK pin (with the X2 pin floating).             Configuration Register).
2. Write 0A16 to Command Register A. This step will set           This step allows the 1 MHz square wave from the C/T to
    the Transmitter BRG Select Extend bit (X = 1).                be output on OP3.
3. Write 0816 to Command Register A. This step will set           Note: x = don’t care
    the Receiver BRG Select Extend bit (X = 1).                   The b suffix denotes a binary expression
      Rev. 2.11
                                                               60


                                                                                               XR88C681
2. Externally connect the OP3 pin to the IP3 and IP4 pins.      incoming serial data stream is synchronous with the 1
    Thereby applying a 1 MHz square wave into these two         MHz (1X) clock signal; in order to minimize bit errors.
    input pins.
3. Write FF16 to CSRA.
                                                                D.7 Explanation of Clock Timing Signals
This step will specify that the timing source for the
Transmitter and Receiver of Channel A will be derived
from input pins IP3 and IP4, respectively. Additionally,        The purpose of this section is to explain the Data Sheet
this step allow the DUART hardware to presume that              specification on the Timing Control Block parameters. In
these input signal are 1X signals. Hence, there is no           the past, this subject has been the source of considerable
division-by-16 of this signal. Therefore, the bit rate of       confusion by numerous users.
Channel A is at 1 Mbps.                                         The XR88C681 Data Sheet presents the following
Please note that if the user were to apply this example,        parameter specifications in the
he/she would be responsible for ensuring that the               “AC ELECTRICAL CHARACTERISTICS”
        Symbol        Parameter                                          Min.          Typ.          Max.           Units
         tCLK         X1/CLK (External) High or Low Time                 100                                         ns
         fCLK         X1/CLK Crystal or External Frequency               2.0          3.6864           4.0          MHz
         tCTC         Counter/Timer External Clock High or Low           100                                         ns
                      Time - IP2 Input
         fCTC         Counter/Timer External Clock Frequency - IP2         0                           4.0          MHz
                      Input
         tRTX         RXC and TXC (External) High or Low Time -          220                                         ns
                      via IP2, IP3, IP4 and IP5
         fRTX         RXC and TXC (External) Frequency - via IP2,
                      IP3, IP4, and IP5
      fRTX - 16X      16X                                                  0                           2.0          MHz
       fRTX - 1X      1X                                                   0                           1.0          MHz
                                            Table 20. Clock Timing (Figure 13)
Now, here is an explanation for each of these parameters.
D tCLK - X1/CLK (External) High or Low Time                     D tCTC - Counter/Timer External Clock High or Low
                                                                    Time - IP2 Input
The DUART employs dynamic logic throughout much of              This parameter places a lower limit on the amount of time
its circuitry. Therefore, limits on tCLK and fCLK are           that the signal, being applied to the IP2 pin, for use by the
needed in order to ensure that the device will function         Counter/Timer, can reside at the high and low states.
properly. This parameter just places a lower limit on the       Please note that this limit has no relationship with the
amount of time at the signal applied through the X1/CLK         parameter tRTX, which is another spec associated with
pin must reside at the high and low states.                     the IP2 input.
                                                                D fCTC - Counter/Timer External Clock Frequency -
D fCLK - X1/CLK Crystal High or Low Time                            IP2 Input
                                                                This parameter places an upper limit of the input
This parameter specifies the range of frequencies               frequency being applied to the IP2 pin, for use by the
permissible at the X1/CLK input, via either crystal             Counter/Timer. The spec basically states that a signal
oscillator or applied TTL input signal. Therefore, the use      with frequency up to 4.0 MHz can be applied at the IP2
can only apply between 2.0 and 4.0 MHz at this input.           pin, and still be properly handled by the Counter/Timer.
      Rev. 2.11
                                                             61


  XR88C681
This spec is not related to the parameter tRTX, which also      or she desires. The Timing Control Block gives the user
specifies limits on signals applied to IP2 or other input       access to the following resources:
pins, for use at the External Clock Source for Transmitter      D 23 different standard bit rates via the BRG.
and Receivers.                                                  D The Counter/Timer, which can be configured to gen-
D tRTX - RXC and TXC (External) High or Low Time                    erate bit rates which are not available from the BRG.
    - via IP2, IP3, IP4 and IP5                                 D Inputs to the Timing Control Block (via some Input
                                                                    Port pins) which allows the use of external clock sig-
This spec places a lower limit on the amount of time that a         nals to generate a custom bit rate.
signal, being applied at the General Purpose Input Pins,
IP2 - IP5, for use as the Transmitter and Receiver Clock        E. INPUT PORT
source, can reside at the high or low state. This spec has
no relationship to tCTC, even though it is also applies to      The Input Port can be used as a general purpose input or
Input pin IP2.                                                  the DUART can be programmed to use some of these
                                                                inputs for special functions. The current state of the
D fRTX - RXC and TXC (External) Frequency - via                 inputs to this unlatched port can be read by the CPU by
    IP2, IP3, IP4, and IP5                                      reading the IP register (for the states of IP0 - IP5). A high
This spec places limits on both the 1X and 16X external         input signal at the IPn pin results in a logic “1” in the IPR[n]
signals that are to be used to clock the Transmitters and       bit position, within the IP register. Likewise, a “low” input
Receivers. If the user wishes to use a 1X clock, he/she         signal at the IPn pin results in a logic “0” in the IPR[n] bit
can only apply a signal with frequencies up to 1.0 MHz.         position, within the IP register.
This input will results in a bit rate of 1 Mbps (see Example
C). If the user wishes to use a 16X clock, he/she can only      E.1 Alternate Functions for the Input Port
apply a signal with frequencies up to 2.0 MHz. Since this
                                                                Table 17 describes the alternate uses for the input pins,
signal is a 16X signal, this will result in a bit rate of
                                                                such as clock inputs and data flow control signals and
125kbps.
                                                                includes a brief summary as how to program the alternate
In summary, the DUART Timing Control block gives the            function. A read of the IP registers will show the logic state
user the ability to generate virtually any baud rate that he    at the pin, regardless of its programmed function.
      Rev. 2.11
                                                             62


                                                                                                     XR88C681
      Input Port                   Alternate Function(s)                        Approach to Program Alternate Functions
          IP0        -CTSA: Clear to Send (CTS) input for Channel A.        IP0 can be programmed to function as the -CTSA
                     Note: this input is Active Low, for the CTS function   input by setting MR2A[4] =1. For a more detailed
                                                                            discussion on this function, please see Section
                                                                            G.3.
          IP1        -CTSB: Clear to Send (CTS) input for Channel B.        IP1 can be programmed to function as the -CTSB
                     Note: This input is Active Low for the CTS function    input by setting MR2B[4] =1. For a more detailed
                                                                            discussion on this function, please see Section G.3.
          IP2        CT_EX: Counter/Timer External Clock Input.             IP2 can be programmed to function as the external
                                                                            clock input for the Counter/Timer by setting
                     RXCB: External Clock input for Receiver                ACR[6:4] = [0, 0, 0]. For a more detailed discus-
                     Channel B                                              sion into the effect of this action please see Section
                                                                            D.2
                                                                            IP2 can also be programmed to function as the
                                                                            external clock input for the Receiver of Channel B
                                                                            by setting CSRB[7:4] = [1, 1, 1, 0] for the 16X
                                                                            Clock, or CSRB[7:4] = [1, 1, 1, 1] for the 1X Clock.
          IP3        TXCA: External Clock input for Transmitter             IP3 can be programmed to function as the external
                     Channel A                                              clock input for the Transmitter of Channel A by set-
                                                                            ting CSRA[3:0] = [1, 1, 1, 0] for the 16X Clock, or
                                                                            CSRA[3:0] = [1, 1, 1, 1] for the 1X Clock.
          IP4        RXCA: External Clock input for Receiver                IP4 can be programmed to function as the external
                     Channel A                                              clock input for the Receiver of Channel A by setting
                                                                            CSRA[7:4] = [1, 1, 1, 0] for the 16X Clock, or
                                                                            CSRA[7:4] = [1, 1, 1, 1] for the 1X Clock.
          IP5        TXCB: External Clock input for Transmitter             IP5 can be programmed to function as the external
                     Channel B                                              clock input for the Transmitter of Channel B by set-
                                                                            ting CSRB[3:0] = [1, 1, 1, 0] for the 16X Clock, or
                                                                            CSRB[3:0] = [1, 1, 1, 1] for the 1X Clock.
                             Table 21. Listing of Alternate Function for the Input Port
E.2 Input Port Configuration Registers (IPCR)
Change of state detectors are provided for input pins IP0 through IP3. These inputs are sampled by the 38.4kHz output
of the BRG (2.4kbps x 16). A high-to-low or low-to-high transition at these input lasting at least two clock periods
(approximately 50 s) will guarantee that the corresponding bit in the input port change register (IPCR) will be set,
although it may be set by a change of state as short as 25 s. The bit format of the IPCR follows. The status bits in the
IPCR (IPCR[7:4]) are cleared when the register is read by the CPU. Any change of state can also be programmed to
generate an interrupt via the “Input Port Change of State” interrupt.
      Bit 7         Bit 6           Bit 5             Bit 4           Bit 3            Bit 2             Bit 1           Bit 0
   Delta IP3      Delta IP2       Delta IP1        Delta IP0          IP3               IP2               IP1             IP0
     0 = No        0 = No          0 = No           0 = No          0 = Low          0 = Low           0 = Low          0 = Low
    1 = Yes        1 = Yes         1 = Yes          1 = Yes         1 = High         1 = High          1 = High        1 = High
                                 Table 22. Input Port Configuration Register - IPCR
     Rev. 2.11
                                                               63


  XR88C681
In order to enable the “Input Port Change of State” interrupt, one must do the following.
D Write the appropriate data to the lower nibble of ACR. The bit formats for ACR is presented in Table 23. Please
    note that the applicable bits, within the ACR register, are shaded.
      Bit 7           Bit 6             Bit 5            Bit 4             Bit 3           Bit 2              Bit 1           Bit 0
   BRG Set             Counter/Timer Mode and Source                   Delta IP3        Delta IP2         Delta IP1       Delta IP0
     Select                                                             Interrupt        Interrupt         Interrupt       Interrupt
    0 = Set1                        See Table 7                          0 = OFF         0 = OFF            0 = OFF         0 = OFF
    1 = Set2                                                             1 = ON           1 = ON            1 = ON          1 = ON
                                          Table 23. ACR- Auxiliary Control Register
D Setting IMR[7].
Note: This “two-tiered” interrupt enabling/disabling approach, for the “Input Change of State” interrupt allows tremendous flexibility
       for the user. Setting or clearing the bits in ACR[3:0] allows the user to specify exactly which Input Port pins to be enabled (or
       disabled) for generating the “Input Port Change of State” interrupt. Setting or clearing IMR[7] allows the user to “globally”
       enable or disable this interrupt.
The upper nibble of the IPCR will indicate which of the four          Register (OPR), and the output port pins themselves.
input pins experienced the “Change of State.” The lower               The contents of the OPR are complements of the actual
nibble of the IPCR contains the present state of these                state of the Output Port pins.
input pins. Therefore, when reading the IPCR, in                      For Example:
response to the “Change of State” interrupt, the CPU will
determine:                                                            If the bit OPR[5] is set to a logic “1”, this will result in the
                                                                      OP5 pin being at a logic “0”. Likewise, if the bit OPR[5] is
D The input pin(s) that toggled.                                      set to a logic “0”, this results in the OP5 pin being at a logic
D The final state of the changing input pin.                          “1”. The other thing that makes programming the parallel
                                                                      port a little odd is the procedure that one must use to
E.3 28 Pin Packaged DUARTs                                            accomplish this feat. When writing to this parallel output
                                                                      port, one must invoke one of the two address triggered
The 28 pin packaged DUARTs come with only one input                   commands: SET OUTPUT PORT BITS and CLEAR
port pin, IP2. Therefore, the only alternative functions that         OUTPUT PORT BITS. It is important to note that when
are available to the device (via this input port pin) are             invoking the “SET OUTPUT PORT BITS” command, the
CT_EX (C/T External Clock Input) and RXCB (External                   user is setting the bits (to logic “1”) in the OPR. However,
Clock input for Receiver Channel B).                                  this action results in setting the corresponding Output
                                                                      Port pins to logic “0”; due to the complementary
F. OUTPUT PORT                                                        relationship between the state of the Output Port pins and
The DUART consists of an 8 bit parallel Output Port. The              the bits in the OPR. Likewise, when the CLEAR OUTPUT
Output Port can be used as a general purpose output or                PORT BITS command is invoked, the specified bits,
can be used for output timing and status signals by                   within the OPR are “cleared” to logic “0”. However, the
appropriately programming of the mode registers (MR1A,                corresponding Output Port pins are set to the logic “1”
B and MR2A, B) and also the output port configuration                 state.
register, OPCR. When used to output status signals the                The state of each bit within the OPR, following a Power-on
Output Port pins are open drain, which allows their use in            Reset (POR), is all “0”. Therefore, the state of each
a wire OR interrupt scheme.                                           Output Port pin, following a POR is logic “1”.
Programming the Output Port is a little different from the            The bits of the OPR can be set and cleared individually. A
conventional writes to a typical parallel port or the data            bit is set by the address-triggered “SET OUTPUT PORT
bus. The Output Port circuitry consists of the Output Port            BITS” command (see Table 1) with the accompanying
     Rev. 2.11
                                                                   64


                                                                                                     XR88C681
data, at the Data Bus, specifying the bits, within the OPR,       0E16, the state of the corresponding bit, within the OPR is
to be set ( 1 = set, 0 = no change). A bit is cleared by the      unchanged.
address triggered “CLEAR OUTPUT PORT BITS”                        We could state this another way as: For every “1” that is
command (see Table 1) with the accompanying data, at              present on the Data Bus, during the use of the “SET
the Data Bus, specifying the bits to be reset (1 = cleared, 0     OUTPUT PORT BITS” command, the corresponding
= no change).                                                     Output Port pin is set to a logic “low”. And for every “0” that
                                                                  is present on the Data Bus, during this command, the
F.1 Writing Data to the OPR/Output Port Pins                      state of the corresponding Output Port pin is unchanged.
As mentioned earlier, the state of the OPR and                    For Example:
consequently, the Output Port pins is controlled by two           Suppose that the content of the OPR are OPR[7:0] = [0, 0,
“Address Triggered” commands.                                     0, 0, 1, 1, 1, 1]. Hence, the state of the Output Port pins
D Set Output Port Bits Command                                    are as follows:
D Clear Output Port Bits Command                                  [OP7, OP6, OP5, OP4, OP3, OP2, OP1, OP0] = [1, 1, 1, 1,
                                                                  0, 0, 0, 0]
The procedure and effect of using these commands are
                                                                  If we write the following to DUART Address 0E16;
discussed in Section F.1.1.
                                                                  [D7,...,D0] = [1, 1, 1, 1, 0, 0, 0, 0]; the resulting state of the
                                                                  Output Port Register Bits follows:
F.1.1 Set Ouput Port Bits Command
                                                                  OPR[7:0] = [1, 1, 1, 1, 1, 1, 1, 1].
The actual procedure used to invoke the “SET OUTPUT               Consequently, the state of the Output Port pins are as
PORT BITS” command is the same as writing the                     follows:
contents on the Data Bus (D7 - D0) to DUART Address
0E16 for (OP7 - OP0). For every “1” that exists within the        [OP7, OP6, OP5, OP4, OP3, OP2, OP1, OP0] = [0, 0, 0, 0,
latched contents of the Data Bus, the corresponding bit,          0, 0, 0, 0]
within the OPR is set to a logic “high”. For every “0” that is    This example of the “SET OUTPUT PORT BITS”
present on the data bus and is written to DUART Address           command is illustrated in Figure 33.
                                                                                    State of Output Port Pins (OP7 - OP0)
                    Initial OPR[7:0] 0    0  0    0   1   1    1   1                 1     1    1   1     0   0   0    0
             Data Bus, D7 - D0       1    1   1   1   0   0    0   0                         DUART Address 0Eh
               Final OPR[7:0]        1   1   1    1   1   1    1   1                  0    0    0   0    0    0   0   0
                   Figure 33. Illustration of the “SET OUTPUT PORT BIT” Command and its Effect
                             on the Output Port Register and the State of the Output Port Pins.
     Rev. 2.11
                                                               65


  XR88C681
In summary, for the “SET OUTPUT PORT BITS”                       the state of the corresponding OPR register bit, and in
command;                                                         turn the state of the Output Port pin is unchanged.
Dn = 0; results in no change for OPR[n], nor Output Port         For Example:
pin OPn.                                                         Suppose that the contents of the Output Port Register,
                                                                 OPR = [1, 1, 1, 1, 1, 1, 1, 1]. Consequently, the state of the
Dn = 1; results in OPR[n] = “1”, and Output Port pin, OPn =
                                                                 Output Port pins are:
“0”
                                                                 [OP7, OP6, OP5, OP4, OP3, OP2, OP1, OP0] = [0, 0, 0, 0,
                                                                 0, 0, 0, 0]
F.1.2 Clear Output Port Bits Command                              If we were to write [D7,...,D0] = [1, 1, 1, 1, 0, 0, 0, 0] to
                                                                 DUART address 0F16, the resulting contents of the
The procedure for invoking this command is very similar          Output Port register will be:
to that for “SET OUTPUT PORT BITS COMMAND”;                      OPR[7:0] = [0, 0, 0, 0, 1, 1, 1, 1]
except in that the user now writes to DUART address 0F16
for [OP7,...,OP0].                                               Further, the resulting state of the Output Port pins will be:
                                                                 [OP7, OP6, OP5, OP4, OP3, OP2, OP1, OP0] = [1, 1, 1, 1,
For every “1” that is “written” to this address, the
                                                                 0, 0, 0, 0]
corresponding bit in the OPR register is set to a logic “low”
and the corresponding Output Port pin, OPn is set to a           This example of the “SET OUTPUT PORT BITS”
logic “high”. For every “0” that is written to this address,     command is illustrated in Figure 34.
                                                                             State of the Output Port Pins (OP7-OP0)
          Initial OPR [7:0]  1  1   1    1    1   1    1   1                  0     0     0   0    0     0   0   0
       Data Bus, D7 - D0     1  1   1    1    0    0  0     0                          DUART Address 0Fh
          Final OPR [7:0]    0  0   0    0   1    1   1    1                  1     1     1   1    0     0   0   0
           Figure 34. Illustration of the “CLEAR OUTPUT PORT BIT” Command and its Effect
                       on the Output Port Register and the State of the Output Port Pins.
In summary, for the “CLEAR OUTPUT PORT BITS”                     Dn = 1, results in OPR[n] = 0, and sets the corresponding
command;                                                         Output Port pin to a logic “1”.
Dn = 0, results in no change for OPR[n] and no change in
the state of the Output Port pin, OPn.
     Rev. 2.11
                                                              66


                                                                                                  XR88C681
F.2 Output Port Configuration Register (OPCR)
The Output Port pins can be used as General Purpose Output pins, or they can be configured to used in alternate
functions. Table 24 lists the Alternate Functions of each of the Output Port pins.
                Output Port                 Alternate Function(s)
                   OP0                      -RTSA: Request-to-Send (RTS) output for Channel A. Note: This output is Active
                                            Low for the RTS function.
                   OP1                      -RTSB: Request-to-Send (RTS) output for Channel B. Note: This output is Active
                                            Low for the RTS function.
                   OP2                      TXCA_16X Output: Channel A 16X Transmitter Clock Output.
                                            TXCA_1X Output: Channel A 1X Transmitter Clock Output.
                                            RXCA_1X Output: Channel A 1X Receiver Clock Output.
                   OP3                      TXCB_1X Output: Channel B 1X Transmitter Clock Output.
                                            RXCB_1X Output: Channel B 1X Receiver Clock Output.
                                            C/T_RDY: The Counter/Timer Ready Output for C/T #1. Note: This output is an
                                            Open-Drain output when used as the Counter/Timer Ready Output.
                   OP4                      RXRDY/FFULL_A Output: Channel A Receiver Ready/FIFO Full Indicator. Note:
                                            This is an Open-Drain output for the RXRDY/FFULL_A function.
                   OP5                      RXRDY/FFULL_B Output: Channel B Receiver Ready/FIFO Full Indicator. Note:
                                            This is an Open-Drain output for the RXRDY/FFULL_B function.
                   OP6                      TXRDY_A Output: Channel A Transmitter Ready Indicator. This is an Open-Drain
                                            output for the TXRDY_A function.
                   OP7                      TXRDY_B Output: Channel B Transmitter Ready Indicator. This is an Open-Drain
                                            output for the TXRDY_B function.
                            Table 24. Listing of the Alternate Functions for the Output Port
Many of the Alternate Functions of the various Output Port pins are selected by writing the appropriate data to the OPCR.
The bit format of this register follows
      Bit 7           Bit 6           Bit 5             Bit 4         Bit 3           Bit 2          Bit 1            Bit 0
      OP7             OP6             OP5               OP4                    OP3                            OP2
   0 = OPR[7]      0 = OPR[6]      0 = OPR[5]       0 = OPR[4]             00 = OPR[3]                    00 = OPR[2]
  1 = TXRDYB      1 = TXRDYA      1 = RXRDY/       1 = RXRDY/          01 = C/T #1 Output              01 = TXCA (16X)
                                    FFULLB           FFULLA             10 = TXCB (1X)                  10 = TXCA (1X)
                                                                        11 = RXCB (1X)                  11 = RXCA (1X)
Note: OPCR only addresses the alternate functions for Output Port pins, OP7 - OP2. OP0 and OP1 assume their RTS roles if either
        MR1n[7] = 1 or MR2n[5] = 1. Setting those Mode Register bits enables the RTS function. Otherwise, these two ports will only
        be General Purpose Output Ports.
                                 Table 25. Output Port Configuration Register - OPCR
      Rev. 2.11
                                                               67


  XR88C681
F.3 28 Pin DIP Packaged DUARTs                                        This section of the data sheet discusses the resources
                                                                      that are available to each channel. These resources are
The 28 pin DIP packaged devices have only two output                  listed here:
ports, OP0 and OP1. Hence the effect of the “SET                      D Transmitter (Transmit Holding Register and Transmit
OUTPUT PORT BITS” and “CLEAR OUTPUT PORT                                   Shift Register)
BITS” commands only effects these two pins. Additionally              D Receiver (Receive Holding Register and Receive
-RTSA and -RTSB are the only alternative output port pin                   Shift Register)
functions available to this version of the XR88C681.
                                                                      D Status Register
                                                                      D Mode Registers
G. SERIAL CHANNELS A and B
                                                                      D Command Register (See Section B.2, Command
                                                                           Decoding)
Each serial channel of the DUART comprises a
                                                                      D Clock Select Register (See Section D, Timing
full-duplex asynchronous receiver and transmitter. The
                                                                           Control Block)
two channels can independently select their operating
frequency (from the BRG, the C/T, or an external clock) as
                                                                      G.1 Transmitter (TSR and THR)
well as operating mode. Besides the normal mode in
which the receiver and transmitter of each channel                    The transmitter accepts parallel data from the CPU and
operate independently, the DUART can be configured to                 converts it to a serial bit stream where it is output at the
operate in various looping modes, which are useful for                TXDn pin, adding start, stop and optional parity bits as
local and remote diagnostics, as well as in a wake up                 required by the asynchronous protocol.
mode used for multi-drop applications.                                Each transmitter consists of a Transmit Shift register (TSR)
In this section certain symbols will be used to denote                and a Transmit Holding Register (THR). The THR is
certain aspects of the Transmitter and Receiver. The                  actually a 1 byte FIFO. Figure 35 presents a simplified
definition of some of these symbols follows.                          illustration of the TSR and THR. The CPU initiates the
                                                                      transmission of serial data by writing character data to the
TXDn - Transmitter (Serial) Data Output for Channel n                 THR. The character will be loaded into and processed
TXCn - Transmitter Clock Signal for Channel n                         through the FIFO, until it reaches the TSR. During the
RXDn - Receiver (Serial) Data Input for Channel n                     transition from the THR to the TSR, the character data is
RXCn - Receiver Clock Signal for Channel n                            serialized and is transmitted out of the chip via the TXDn pin.
                                            Transmitter Clock (from Timing Block)
                                                            TXCn
                                                                              Transmit Shift Register
                                                                                                                  TXDn
                                                                                                      Outgoing
                                                                                                      Serial Data
                              From Data Bus.
                              Parallel Data from
                              the CPU
                                                       Transmit Holding
                                                            Register
  Figure 35. A Simplified Drawing Depicting the Transmit Shift Register and the Transmit Holding Register.
      Rev. 2.11
                                                                  68


                                                                                                XR88C681
Whenever a transmitter is idle or inactive, the TXDn            bit, the least significant bit of the character will be sent
output for that particular channel will be continuously         first, followed by progressively more significant bits. If the
marking (at a logic “high”). However, just prior to the         communication protocol calls for it, the Transmitter will
transmission of a character, the transmitter alerts the         send a “parity” bit between the most significant bit of the
receiver by generating a “START” bit. The START bit is          character and the STOP bit. Figure 36 presents the
basically the TXDn output toggling “low” for one bit period,    waveform (format) of the transmitter (TXDn) output. In
following an idle period or the STOP bit of the preceding       this case, the transmitter is send 5D16, with 8-N-1
character. Immediately after transmission of the START          protocol (8 bits per character, No-parity, 1-Stop Bit).
                       Transmitter Idle
                       or Stop Bit
             TXDn
                                          1        0       1        1         1      0       1        0
                             Start Bit                                                                      Stop Bit
                         Figure 36. The Output Waveform of the Transmitter While Sending
                                                   5D16 (8-N-1 Protocol).
The DUART can be programmed to generate an Interrupt            G.2 Receiver (RSR and RHR
Request to the CPU by setting IMR[0] and IMR[4] for
Channels A, and B, respectively. In this case, the DUART        The function of the serial receiver is to receiver serial data
would generate an Interrupt Request anytime a                   at the RXDn input; convert it to parallel data, where it can
Transmitter THR and TSR are empty of characters. The            be read by the CPU. The receiver is also responsible for
CPU can service this interrupt request by writing a             computing and checking parity, if parity is being used.
character to the empty THR.
                                                                The receiver consists of the Receive Shift Register (RSR)
The Transmitter can be enabled or disabled via the              and a Receive Holding Register (RHR). The RHR is, in
Command Register (see Section B.2). If the command is           essence, a three byte FIFO. The receiver receives data at
issued to disable the transmitter, while there are still        the RXDn pin, where it is processed through the RSR.
characters in the THR and TSR, the Transmitter will             Afterwards, the data is converted to parallel format, and is
continue transmitting all of the remaining data within the      transferred to the RHR. This character is then processed
THR and TSR, until they are completely empty of                 through the 3 bytes of FIFO. Once the received character
characters. No new characters can be written to the THR         reaches the top of the FIFO, it can be “popped” or read by
once the DISABLE TRANSMITTER command has been                   the CPU; when it reads the RHR. Figure 37 depicts a
issued.                                                         simplified drawing of the Receiver.
     Rev. 2.11
                                                             69


  XR88C681
                                                           Receiver Clock (from Timing Block)
                                Receive Shift Register                  RXCn
            Incoming    RXDn
            Serial Data
                                                                                                 To Data Bus
                                                                                                 To be read by the CPU
                                                                  Receive Holding
                                                                       Register
                             Figure 37. A Simplified Drawing of the Receiver Shift Register
                                                 and Receiver Holding Register
The receiver functions by sensing the voltage level at the        2. To establish the phase relationship between the 1x bit
RXDn input. When the far-end transmitter is idle, its TXDn             sampling clock, and the incoming serial data stream.
output (and consequently, the RXDn input) is                           The idea is to sample each data bit in the middle of its
continuously “marking”. During this period the Receiver is             bit period.
inactive and is not receiving or processing any data.
However, when the far-end transmitter sends the START             Please note that if a 16X clock is selected for the receiver,
bit, (with its TXDn output toggling “low”), a receiver clock,     this over-sampling procedure occurs with each and every
which is 16 times the baud rate (with the 16x clock), will        start bit.
start sampling this START bit. If the receiver determines
that its RXDn input is still “low” after its 7th sample, then     The receiver will continue to sample (and receive) each
the receiver hardware considers this signal to be a valid         bit of the character that follows the START bit, at one-bit
START bit. If the RXDn input is not “low” at the 7th              time intervals. Upon reception of the character’s MSB the
sample, the Receiver will ignore this downward pulse as           receiver will check parity (if programmed) or will sample
“noise”. From this 7th sample on, the Receiver will
                                                                  for the STOP bit. If the Receiver samples a mark
sample each successive bit at one bit-period intervals
                                                                  condition at this time and the parity check (if any) was
(1/baud rate) with the 1x clock. The purpose of this 16x
                                                                  valid; a successful reception of the character is
Clock is then two-fold.
                                                                  presumed; and the Receiver will prepare to sense and
1. To verify that the detected “low” level in the RXDn input      oversample the occurrence of the START bit for the next
     is indeed a START bit.                                       character.
       Rev. 2.11
                                                               70


                                                                                                   XR88C681
Receiver Errors                                                      once again be requested (if programmed) and flagged in
                                                                     the Interrupt Status Register.
If the Receiver does not sample a “mark”, at the presumed
time of the STOP bit, a Framing Error (FE) is flagged by             The DUART can be programmed to generate an Interrupt
setting, SRn[6] =1. If, upon complete reception of the               Request to the CPU if a RXRDY (Receiver Ready) or a
character, the subsequent parity check is incorrect, a               FFULL (FIFO Full) Condition exists for either channel. A
Parity Error (PE) is flagged by setting SRn[5] = 1. If the           RXRDY Condition exists when at least one character of
RHR was full, and another character existed in the RSR;              data exists within the RHR, and is ultimately waiting to be
and if more data enters the DUART via the corresponding              “popped” and read by the CPU. The FFULL condition
RXDn pin; then the character in the RSR will be                      exists when the RHR is completely full and cannot accept
overwritten, and a Receiver Overrun Error (OE) condition             any new characters from the RSR until the CPU has read
will be flagged in the Status Register (SRn[4] = 1). This            or “popped” the FIFO. The user can select the Interrupt
phenomenon obviously results in a loss of data.                      Request to occur due to either (but not both) the RXRDY
                                                                     or FFULL condition via the Channel Mode Registers.
Finally if the RXDn input is held at the space condition for         These interrupts are enabled by setting IMR[1] and
an entire character period, and no STOP bit was detected             IMR[5] for Channels A and B, respectively.
(STOP bit sampling resulted in a space); a Received
Break (RB) condition is presumed. When this condition is             Each channel is equipped with numerous other registers
detected several things happen.                                      that are used to provide control and monitoring of these
                                                                     channels. Some of these registers were discussed in
1. The “Received Break” condition is flagged in the                  earlier sections of the data sheet. However, a detailed
     Status Register (SRn[7] = 1).                                   discussion of the remainder of these registers are
2. The “Break” character is loaded into the RHR.                     presented in Section G.3.
     However, no further data is received or loaded into the
     RHR until the RXDn input returns to the “mark”
     condition.                                                      G.3 Mode Registers, MR1n and MR2n
3. The corresponding “Delta Break” interrupt is
                                                                     The Mode Registers, allow the user to specify of the
     requested (if programmed) and flagged in the Interrupt
                                                                     protocol parameters that he/she wish the channel to run
     Status register.
                                                                     at. These registers also allow the user to configure the
Once the RXDn input returns to the “mark” condition,                 DUART channels to engage in modem handshaking
subsequent characters will be loaded into the RHR, and               techniques. The bits of each of these registers are
the corresponding “Delta Break” interrupt condition will             discussed in Table 26.
       Bit 7           Bit 6          Bit 5            Bit 4           Bit 3           Bit 2         Bit 1           Bit 0
     Rx RTS       Rx Interrupt     Error Mode               Parity Mode               Select      Select Number of Bits per
     Control          Select                                   Select                 Parity               Character
      0 = No        0=RxRDY       0=Character             00 = With Parity          0 = Even                 00 = 5
      1 = Yes       1=FFULL         1= Block             01 = Force Parity           1 = Odd                 01 = 6
                                                           10 = No Parity                                    10 = 7
                                                       11 = Multi-Drop Mode                                  11 = 8
Note: MR1n for each channel is accessed when the channel’s MR pointer points to MR1. The pointer is set to MR1n by a hardware
         RESET or by a “RESET MR POINTER” command invoked via the channel’s command register. After any read or write to
         MR1, the MR pointer will automatically point to MR2.
                                         Table 26. Mode Registers - MR1A, MR1B
       Rev. 2.11
                                                                  71


  XR88C681
      Bit 7           Bit 6           Bit 5          Bit 4           Bit 3             Bit 2           Bit 1           Bit 0
         Channel Mode               Tx RTS       CTS Enable                                  Bit Length
                                     Control          Tx
           00 = Normal               0 = No         0 = No                  0 = 0.563                        8 = 1.563
         01 = Auto Echo              1 = Yes        1 = Yes                 1 = 0.625                        9 = 1.625
        10 = Local Loop                                                     2 = 0.688                        A = 1.688
       11 = Remote Loop                                                     3 = 0.750                        B = 1.750
                                                                            4 = 0.813                        C = 1.813
                                                                            5 = 0.875                        D = 1.875
                                                                            6 = 0.938                        E = 1.938
                                                                            7 = 1.000                        F = 2.000
                                         Table 27. Mode Registers - MR2A, MR2B
MR1n[7] - Receiver Request to Send Control                       OR of the status for all characters coming to the top of the
                                                                 FIFO since the last “RESET ERROR STATUS” command
Ordinarily, RTS (Request to Send) is asserted or negated         for the Channel was issued.
by invoking the “SET OUTPUT PORT BITS COMMAND”
or “CLEAR OUTPUT PORT BITS COMMAND” in the                       MR1n[4:3] - Parity Mode Select
appropriate manner. However, if MR1n[7] = 1 is set, then
the Receiver will have control over the negation of the          If “with parity” or “force parity” operation is programmed, a
-RTSn output. Specifically, setting this bit will allow the      parity bit is added to the transmitted characters and the
Receiver to negate -RTSn if its RHR is full. This “flow          receiver performs a parity check on received characters.
control” technique is useful in preventing Receiver              See Section H.2 for description of Multi-Drop Mode
Overrun Errors.                                                  Operation.
Figure 42 presents a diagram which illustrates how a
                                                                 MR1n[2] - Parity Type Select
Receiver-Controlled Request-to-Send configuration
would function.                                                  This bit selects ODD or EVEN parity if “WITH PARITY
                                                                 MODE” is programmed and the state of the forced parity
MR1n[6] - Receiver Interrupt Select                              bit if the “FORCE PARITY” mode is programmed. In the
                                                                 Multi-Drop mode it selects the state of the A/D flag bit.
This bit selects either the RXRDY status bit or the FFULL        This bit has no effect if “NO PARITY” is selected in
status bit of the channel to be used as the criteria for         MR1n[4:3].
generating an Interrupt Request to the CPU, ISR[1] for
Channel A and ISR[5] for Channel B.                              MR1n[1:0] - Bits per Character Select
                                                                 Selects the number of bits to be transmitted and received
MR1n[5] - Error Mode Select
                                                                 in the data field of the character. This does not include
This bit controls the operation of the three FIFO status bits    START, PARITY, and STOP bits.
(PE, FE, Received Break) for the Channel. If this bit is set
to “0”, this particular channel will operate in the              Mode Register 2 (Channels A and B)
“Character” Error Mode. If this bits is set to “1”, this
                                                                 MR2n for each Channel is accessed when the Channel’s
particular channel will operate in the “Block” Error Mode.
                                                                 MR Pointer points to MR2n, which occurs after any
In the character mode these status bits apply only to the        access to the Channel’s MR1 Register. Subsequent
character that is currently at the top of the FIFO. In the       “reads” or “writes” to MR2n does not change the contents
block mode, these bits represent the cumulative logical          of the MR pointer.
     Rev. 2.11
                                                              72


                                                                                            XR88C681
MR2n[7:6] - Channel Mode Select                           D Setting MR2n[7:6] = 01 places the channel in the Auto-
Each Channel can operate in one of four modes.               matic Echo Mode, which automatically re-transmits
D Setting MR2n[7:6] = 00 configures the channel to op-       the received data. Figure 39 presents a diagram de-
  erate in the Normal Mode. In this mode, the receiver       picting Automatic Echo Mode Operation. The follow-
  and transmitter operate independently. Figure 38           ing conditions apply while in this mode.
  presents a diagram depicting Normal Mode Opera-
  tion.
                                                RXCn    TXCn
     Incoming     RXDn                                                                      TXDn       Outgoing Serial
     Serial Data       Receive Shift Register                      Transmit Shift Register                    Data
                                                                                             Transmit Holding
                                                                                                 Register
       Receive Holding
           Register
                                                                                 8
                                   8
                            To Data Bus                              From Data Bus.
                       (To be read by the CPU)                 (Parallel data from the CPU)
                          Figure 38. A Block Diagram Depicting Normal Mode Operation.
    Rev. 2.11
                                                       73


  XR88C681
                                                       RXCn    TXCn
           Incoming     RXDn                                                                      TXDn   Outgoing Serial
           Serial Data         Receive Shift Register                     Transmit Shift Register              Data
                                                                                                    Transmit Holding
                                                                                                        Register
            Receive Holding
                Register
                                            8
                                  To Data Bus                                CPU has no access to
                             (To be read by the CPU)                           the Transmitter
                              Figure 39. A Block Diagram Depict Automatic Echo Mode
In this mode:
1. Received data is transmitted on the channel’s TXD          6. A received break is echoed as received until the next
    output.                                                      valid start bit is detected.
2. The receiver must be enabled but the transmitter need      7. CPU to receiver communications operates normally,
    not be enabled.                                              but the CPU to transmitter link is disabled.
                                                              Each DUART channel can be configured into one of two
3. The channel’s TXRDY and TXEMT status bits are
                                                              diagnostic modes.
    inactive.
4. The received parity is checked but is not generated for    Local Loopback Mode
    transmission. Thus, transmitted parity is as received.
                                                              This mode is selected by setting MR2n[7:6] = 10.
5. Character framing is checked but the stop bits are         Figure 40 is a diagram depicting Local Loopback Mode
    transmitted as received.                                  operation.
      Rev. 2.11
                                                           74


                                                                                            XR88C681
                                                                                                     VCC
                                                         TXCn
                              Receive Shift Register
  RXDn                                                               Transmit Shift Register                    TXDn
                                                                                               Transmit Holding
                                                                                                   Register
          Receive Holding
              Register
                                                                                  8
                                          8
                                   To Data Bus                             From Data Bus.
                              (To be read by the CPU)                 (Parallel Data from CPU)
                          Figure 40. A Block Diagram depicting Local Loopback Mode Operation
In this mode:
1. The transmitter output is internally connected to the    Remote Loopback Mode.
    receiver input.
                                                            This mode is selected by setting MR2n[7:6] = 11.
2. The transmit clock is used for the receiver.
                                                            Figure 41 presents a diagram depicting Remote
3. The channel’s TXDn output is held marking (high).        Loopback Mode operation.
4. The channel’s RXDn input is ignored.
5. The transmitter is enabled, but the received need not
    be enabled.
6. CPU to transmitter and receiver communications
    continue normally.
     Rev. 2.11
                                                         75


  XR88C681
                                     RXCn                                                 TXCn
                     RXDn                                                                                TXDn
       Incoming                                                                                                   Outgoing
       Serial Data            Receive Shift Register                             Transmit Shift Register         Serial Data
                                                                                                           Transmit Holding
                                                                                                               Register
         Receive Holding
              Register
                             Note: The CPU has no access to the Serial Data during Remote Loopback Mode.
                            Figure 41. A Block Diagram Depicting Remote Loopback Mode
In this mode:
1. Received data is transmitted on the channel’s TXDn               time after the characters in the TSR and THR have been
    output                                                          transmitted and are now empty.
2. Received data is not sent to the CPU and the error               Figure 44 presents a diagram illustrate how a
    status conditions are not checked.                              Transmitter-Controlled Request-to-Send configuration
3. Parity and framing (stop bits) are transmitted as                would function.
    received.
                                                                    MR2n[4] - Clear to Send Control
4. The receiver must be enabled.
5. The received break is echoed as received until the               If this bit is a 0, the channels -CTSn input (IP0 for Channel
    next valid start bit is detected.                               A, or IP1 for Channel B) has no effect on the transmitter. If
                                                                    the bit is a “1”, the transmitter will check the state of its
MR2n[5] - Transmitter Request-to-Send Control                       -CTSn input each time is it ready to send a character. If
                                                                    -CTSn is low (or “true”), the character is transmitted. If
Ordinarily, the RTS (Request to Send) output is asserted            -CTSn is high (or negated), TXDn remains in the marking
or negated by invoking the “SET OUTPUT PORT BITS                    state and the transmission of the next character is
COMMAND” or “CLEAR OUTPUT PORT BITS                                 delayed until -CTSn goes low. Changes in the -CTSn
COMMAND” in the appropriate manner, by the system                   input while a character is being serialized do not affect
software. However, setting MR2n[5] = 1 allows the                   transmission of that character. This phenomenon is
Channel Transmitter to negate RTS automatically, one bit            further illustrated in Figure 42 and Figure 44.
     Rev. 2.11
                                                                 76


                                                                                                      XR88C681
MR2n[3:0] - Stop Bit Length                                            G.4 Status Register, SRn
This bit field programs the duration of the stop bits                  The Status Register provides the user with status on the
appended to each transmitted character. Stop bit                       RHR and THR (Receiver and Transmitter FIFOs,
duration of 9/16 to 1 bit time and 1 9/16 to 2 bit times, in           respectively); and serves to provide the CPU with a
increments of 1/16 bits can be programmed for character                measure of the quality of the reception of data by the
lengths of 6, 7 and 8 bits. For a 5 bit character, the stop bit        receiver. FIFO Status indicators are useful in polled
duration can be programmed from 1-1/16 to 2 bit times.                 systems and allows the CPU to check and see if the
If an external 1x clock is programmed for the transmitter              Transmitter is empty and/or is ready for data from the
clock (TXCn), MR2n[3] = 0 selects a stop bit duration of               CPU. The FIFO Status indicators also indicate whether or
one bit time and MR2n[3] = 1 selects a duration of two bit             not the RHR has a character, which is waiting to be read
times for transmission.                                                by the CPU, or is full and incapable of receiving any more
                                                                       characters without an overrun. The Transmitter and
The receiver only checks for mark condition at the center
                                                                       Receiver FIFO status indicators are located in the lower
of the first stop bit (that is, one bit time after the last data or
                                                                       nibble of the Status Register.
parity bit is sampled) regardless of the programmed
transmitted stop bit length. If the receiver does not sample           The upper nibble of the Status Register alerts the user of
a “mark” a “Frame Error” (FE) is flagged in the Status                 any data reception errors. The bit-format of the Status
Register.                                                              Register and a discussion of each bit follows:
      Bit 7              Bit 6              Bit 5            Bit 4           Bit 3          Bit 2         Bit 1           Bit 0
    Received       Framing Error        Parity Error      Overrun          TXEMT          TXRDY         FFULL           RXRDY
     Break                                                  Error
     0 = No             0 = No             0 = No           0 = No          0 = No        0 = No         0 = No          0 = No
     1 = Yes            1 = Yes            1 = Yes         1 = Yes         1 = Yes        1 = Yes       1 = Yes          1 = Yes
                                               Table 28. Status Register - SRA, SRB
SRn[7] Received Break                                                  input is brought to a logic “high” level, in the next
                                                                       character.
This bit indicates that an all zero character of the
                                                                       If the “Error” Mode has been set to “Block” mode, then this
programmed character length was received without a
                                                                       bit, once set will remain asserted until the “RESET
stop bit. Only a single FIFO position is occupied when a
                                                                       ERROR STATUS” command has been invoked (please
break is received. Additional transfers into the FIFO are
                                                                       see Table 3). Please note that if the Error Mode is “Block”
inhibited until the RXD line returns to the marking state for
                                                                       this bit, in the Status Register will remain set, for all
at least half a bit time. This is defined as two successive
                                                                       subsequent characters, independent of the condition of
edges of the internal or external 1x clock.
                                                                       these received characters, until the “RESET ERROR
When this bit is set, the channel’s “CHANGE IN BREAK                   STATUS” command has been invoked.
STATUS” bit in the ISR is set. The bit in the ISR is also set
when the end of the break condition, as defined above, is              SRn[6] Framing Error
detected.
                                                                       Following reception of the character bits, and any
The chip’s break detect logic can detect breaks that begin             associated parity bit, the Receiver will check for a “mark”
in the middle of a character. However, the break must                  condition one bit-time following the last data or parity bit.
persist until the end of the next character time in order for it       This “mark” condition is the STOP bit. If the Receiver
to be detected.                                                        does not detect a “mark” at this time, the bit is toggled
If the Error Mode, of the channel, has been set to                     “high” flagging the occurrence of a Frame Error (FE).
“Character” Mode, this bit only applies to the Character at            If the Error Mode has been set to “Character” Mode, this
the top of the RHR. This bit will be cleared if the RXDn               bit only applies to the Character at the top of the RHR. If
      Rev. 2.11
                                                                    77


   XR88C681
this bit is set for a given character, it will be cleared if the    SRn[3] Transmitter Empty (TXEMT)
STOP bit is properly detected in the next character.
                                                                    This bit is set when the transmitter underruns. It is set
If the “Error” Mode has been set to “Block” mode, then this         after transmission of the last stop bit of a character and if
bit, once set will remain asserted until the “RESET                 there is no character in the THR or TSR awaiting
ERROR STATUS” command has been invoked (please                      transmission. This bit is cleared when the transmitter is
see Table 3). Please note that if the Error Mode is “Block”         disabled, or when the CPU writes a new character to the
this bit, in the Status Register will remain set, for all           THR.
subsequent characters, independent of the condition of
these received characters, until the “RESET ERROR                   SRn[2] Transmitter Ready (TXRDY)
STATUS” command has been invoked.
                                                                    This bit, when set, indicates that the THR is empty and
                                                                    ready to accept a character from the CPU. The bit is
SRn[5] Parity Error                                                 cleared when the CPU writes a new character to the THR,
                                                                    and is set when that character is transferred to the TSR.
This bit is set when the “WITH PARITY” or “FORCE                    TXRDY is set when the transmitter is initially enabled and
PARITY” modes are programmed and if the                             is reset when the transmitter is disabled. Characters
corresponding character in the data FIFO was received               loaded into the THR while the transmitter is disabled will
with incorrect parity.                                              not be transmitted.
If the Error Mode has been set to “Character” Mode, this            SRn[1] FIFO Full (FFULL)
bit only applies to the Character at the top of the RHR. If
this bit is set for a given character, it will be cleared if the    This bit is set when a character is transferred from the
received parity is correct in the next character.                   RSR to the RHR and the transfer causes it to become full,
                                                                    i.e., all three FIFO positions are occupied. It is reset when
If the “Error” Mode has been set to “Block” mode, then this         the CPU reads the RHR. If a character is waiting in the
bit, once set will remain asserted until the “RESET                 RSR because the FIFO is full, FFULL will not be reset
ERROR STATUS” command has been invoked (please                      when the CPU reads the RHR.
see Table 3). Please note that if the Error Mode is “Block”
this bit, in the Status Register will remain set, for all
                                                                    SRn[0] Receiver Ready (RXRDY)
subsequent characters, independent of the condition of
these received characters, until the “RESET ERROR                   This bit indicates that at least one character has been
STATUS” command has been invoked.                                   received and is waiting in the FIFO to be read by the CPU.
                                                                    It is set when a character is transferred from the RSR to
                                                                    the RHR and is cleared with the CPU reads the last
SRn[4] Overrun Error
                                                                    character currently stored in the FIFO.
                                                                    Please note that some of the conditions that are flagged
If set, this bit indicates that one or more characters in the
                                                                    by the Status Register can also be programmed to
received data have been lost, it is set upon receipt of a
                                                                    generate an Interrupt Request to the CPU. However,
new character when the FIFO is full and a character is
                                                                    there are some conditions that are flagged by the Status
already in the RSR waiting for an empty FIFO position.
                                                                    Register that cannot be programmed to generate an
When this occurs, the character in the RSR is overwritten.
                                                                    Interrupt. These conditions are listed here:
Please note that unlike the Status Register bits for FE             D SRn[6] - Framing Error
(Framing Error), PE (Parity Error) and RB (Received                 D SRn[5] - Parity Error
Break), the OE (Overrun Error) indicator is always flagged
                                                                    D SRn[4] - Overrun Error
on a “Block” Error Mode basis. The OE condition is never
flagged on a character-to-character basis, and only                 Therefore, if system level error-checking is not employed,
cleared when the “RESET ERROR STATUS” command is                    the user is recommended to validate each character by
invoked.                                                            checking the Status Register.
      Rev. 2.11
                                                                 78


                                                                                                 XR88C681
H. SPECIAL MODES OF OPERATION                                   H.1.1 Receiver-Controlled RTS/CTS Handshaking
H.1 RTS/CTS Handshaking                                         In this mode, the Receiver has the ability to automatically
                                                                negate the RTS output (to the Transmitting device).
The DUART can be programmed to support RTS/CTS
                                                                Specifically, this mode allows the Receiver to negate the
Handshaking, as a means of data flow control with other
                                                                RTS signal if its RHR is full; and, is thereby, very effective
devices. This section will describe a couple of options that
                                                                in preventing Receiver Overrun Errors. Figure 42
the DUART allows the user in implementing RTS/CTS
                                                                presents a diagram of an example illustrating the
Handshaking. Specifically, these options are:
                                                                operation of the Receiver-Controlled RTS configuration.
D Receiver-Controlled RTS/CTS Handshaking
D Transmitter-Controlled RTS/CTS Handshaking
                       Receiving Device                                        Transmitting Device
                                       RTSA                                   CTSB
                                       (OP0)                                  (IP1)
                                       RXDA                                   TXDB
                                       TXDA                                   RXDB
                                       CTSA                                   RTSB
                                        (IP0)                                 (OP1)
                            FFULLA
                                 (OP4)
                            To CPU
               FFULLA
                 RTSA
                 RXDA
                   Figure 42. Block Diagram and Timing Sequence of Two DUARTs Connected
                                      in the Receiver-RTS Controlled Configuration
    Rev. 2.11
                                                             79


   XR88C681
Figure 42 shows two DUART devices, a “Receiving                   If the CPU reads (or “pops”) the RHRA of the Receiving
Device” and a “Transmitting Device”. These devices are            Device, RHRA will no longer be full, and the FFULLA
labeled such because of their role in this example transfer       indicator will toggle false. In this case, the FFULLA
of data between them. This example is going to ignore, for        indicator is connected to some input port of the CPU. In
the time being, the fact that the “Receiving Device” has a        response to the FFULLA toggling false, the CPU would
transmitter and that the “Transmitting Device” has a              interpret this “negative-edge” of FFULLA as an Interrupt
receiver. Further, this example, is using Channel A of the        Request. The CPU would service this “Interrupt” by
“Receiving Device” and Channel B of the “Transmitting             “writing” [D7,...,D0] = [0, 0, 0, 0, 0, 0, 0, 1] to DUART
Device”.                                                          address 0E16. This action executes the “SET OUTPUT
                                                                  PORT COMMAND” and causes OPR[0] to toggle “high”
The example starts with the assumption that the                   and Output Port pin OP0 (or -RTSA) to toggle “low”.
“Receiving Device” has been programmed such that                  Consequently, -RTSA is now asserted.
MR1A[7] = 1. According to Section G.3, this results in            With the -RTSA output of the “Receiving Device” being
programming the “Receiving Device” for Receiver RTS               asserted the -CTSA input of the “Transmitting Device” is
Control. Additionally, the “Transmitting Device” has been         now asserted, as well and data transmission from the
programmed such that MR2B[4] = 1. According to                    “Transmitting Device” to the “Receiving Device” is now
Section G.3, the Transmitter of Channel B of the                  permitted.
“Transmitting Device” has now been programmed to be
under -CTSB input control. In this example, the                   Figure 42 shows the RXDA input receiving data after
“Receiving Device” controls the -RTSA output signal.              -RTSA has been asserted. However, in this example, this
This output signal is fed directly into the -CTSB input of the    newly received character now causes RHRA of the
Transmitting Device.                                              “Receiving Device” to be full. The FFULLA indicator
                                                                  status is now asserted and RTSA (of the “Receiving
If RHRA of the “Receiving Device” is full (as depicted by         Device”) is now automatically negated via the Receiver
the FFULLA output being at a logic “high”), -RTSA will            control over the RTS signal. Therefore, transmission
automatically be negated by virtue of the Receiver                from Channel B of the Transmitting Device is, once again,
Controlled RTS features. Consequently, the Channel B              inhibited.
Transmitter of the “Transmitting Device” will have its            Figure 43 presents a flow diagram illustrating an
-CTSB input negated and will not be permitted to transmit         algorithm that could be used in implementing the
any data to RXDA of the “Receiving Device”.                       Receiver-Controlled RTS/CTS Handshaking Mode.
      Rev. 2.11
                                                               80


                                                                                           XR88C681
                                      For Receiving Device
                                      MR1A[7] = 1
                                      For Transmitting Device
                                      MR2B[7] = 1
                                                 Start
                                  Assert RTSA
                                  Write 01h to QUART Address 0Eh
                                  (This invokes the “SET OUTPUT
                                  PORT BITS COMMAND” and sets
                                  the Output Port pin, OP0 to a logic
                                   “0”.)
                                                   Is
                               No              FFULLA
                                               Asserted?
                                                      Yes                   No
                                         RTSA is Automatically                   Is       Yes
                                         Negated by Receiver                  FFULLA
                                         Controlled RTS Function.             Negated?
                  Figure 43. A Flow Diagram Depicting an Algorithm That Could be Used to Apply
                                the Receiver-Controlled RTS/CTS Handshaking Mode
H.1.2 Transmitter-Controlled RTS/CTS Handshaking
In this mode, the Transmitter now has the ability to negate the RTS output (to the Receiving Device). Specifically, this
mode allows the Transmitter to negatye the RTS signal, one bit period after emptying the THR and TSR.
      Rev. 2.11
                                                                81


XR88C681
                  Transmitting Device                                  Receiving Device
                                    RTSA                               IP2
                                    (OP0)                            (RTS-in)
                                    CTSA                               OP3
                                     (IP0)                          (CTS-out)
                                    TXDA                              RXDB
                        TXRDY_A
                          (OP7)
                        To CPU
   TXRDY_A
        RTSA
        CTSA
        RXDA
             Figure 44. Block Diagram and Timing Sequence of Two DUARTs Connected
                            in the Transmitter-RTS Controlled Configuration.
 Rev. 2.11
                                                   82


                                                                                            XR88C681
Figure 44 shows two DUART devices, one labeled                “Transmitting Device” and allow it to transmit data to the
“Transmitting Device” and the other, “Receiving Device”.      “Receiving Device”.
This example starts with the assumption that the              Once Channel A Transmitter has emptied both its THR
“Transmitter Device” has been programmed such that            and TSR of data, it will negate the -RTSA output, via the
MR2A[5] = 1, which results in programming the                 “Transmitter-RTS Control” feature. When the -RTSA
“Transmitting Device” for Transmitter-RTS Control. This       output the “Transmitting Device” is toggled “high”, the IP2
example further assumes that the “Transmitting Device”        (RTS-in) is also toggled “high”, thereby generating
has been programmed such that MR2A[4] = 1. According          another “Input Change of State” interrupt request to the
to Section G.3, the Transmitter of Channel A of the           CPU. With IPCR[2] = 1, the likely Interrupt Service
“Transmitting Device” has now been programmed to be           Routine would be to “Write” [D7,..., D0] = [0, 0, 0, 0, 1, 0, 0,
under -CTSA input control.                                    0] to DUART address 0F16. In this step, the Interrupt
                                                              Service Routine would invoke the “CLEAR OUTPUT
In the case of the “Receiving Device”, IP2 (RTS-in) has       PORT BITS COMMAND”, and in the process toggle OP3
been programmed to generate an “Input Port Change of          (CTS-out) “high”. This would in turn negate the -CTSA
State” interrupt request to the CPU. The firmware for the     input of the “Transmitting Device” and inhibit the
Interrupt Service Routines is written such that if the IP2    transmission of data from the Channel A of the
input were to change and IPCR[2] = 0, the CPU would           “Transmitting Device”.
“write” [D7,..., D0] = [0, 0, 0, 0, 1, 0, 0, 0] to DUART      Figure 45 presents a Flow Diagram which depicts an
address 0E16. In this step, the Interrupt Service Routine     Algorithm that could be used to implement the
would invoke the “SET OUTPUT PORT BITS                        Transmitter-Control RTS/CTS Handshaking Mode.
COMMAND”, and in the process toggle OPR[3] to a logic         Please note that the shaded block pertain to occurrences
“high” and the Output Port pin, OP3, (CTS-out) to a logic     within the “Receiving Device”. Whereas the “White” block
“low”. This would, in turn, assert the -CTSA input of the     pertain to operation within the “Transmitting Device.”
     Rev. 2.11
                                                           83


  XR88C681
                               START
                 ASSERT RTSA                                          Generate “Input Port Change of State”
                 (Write 01h to DUART Address 0Eh)                     Interrupt (IP2) in Receiving Device
                                                                TOGGLE OP3 (CTS_out) PIN                            Is
                                                                “LOW”                                           IP2 = 1
                 *CTSA INPUT IS ASSERTED.                                                                            ?
                 Data transmission is now permitted.            (Write 08h to DUART Address 0Eh)        No
                                                                                                                        Yes
                                Is
                             TXEMT
                             Asserted
                                 ?           No
                                     Yes
                 *RTSA is Automatically Negated by
                 Receiver Controlled RTS Function.
                 (OP0 toggles “High”)
                                                                                         TOGGLE OP3 (CTS_out) PIN
                                                                                         “HIGH”
                                                                                         (Write 08h to DUART Address 0Fh)
                    -CTSA INPUT IS NEGATED.
                    Data transmission is disabled.
                                 Is
                              TXRDY
                     Yes      Negated?        No
               Figure 45. A Flow Diagram depicting an Algorithm that could be used to Realize the
                                   Transmitter-Controlled RTS/CTS Handshaking Mode
H.2 Multi-drop (8051 9 bit) Mode                                H.2.1 Concept of Multi-Drop Mode
Each serial channel of the DUART can be configured to
operate in a wake up mode useful for multi-drop or
multiprocessor applications. This section will first present    This mode is compatible with the serial “Nine bit Mode” of
the concept of the Multi-Drop Mode. Afterwards, the             8051 family microcomputers. In this mode of operation a
function and procedure of operating the DUART in the            “master station”, connected to a maximum of 256 slave
Multi-Drop mode is discussed in Section H.2.1.                  station is possible, as depicted in Figure 46.
     Rev. 2.11
                                                             84


                                                                                                 XR88C681
                                                  Master Device
                                                      TXDn
                           RXDn                RXDn                 RXDn                        RXDn
                             00h                01h                 02h                          FFh
                                                            Slave Devices
                    Figure 46. An Illustration Depicting the Concept of Multi-Drop Mode
                                LSB                                          MSB A/D
                                               8 Bit Character
                                                                                            Address/Data Bit
                Figure 47. Bit Format of Character Data Being Transmitted in the Multi-Drop Mode
The “Master Station” communicates to the “Slave                   When the “Master Station” wants to transmit a block of
Stations” by transmitting a character (typically a byte) with     data to one of several slaves, it first sends out an Address
an “Address/Data” bit flag appended to the end of the             byte that identifies the “Target Slave”. An address byte
character. This typically results in nine bits of being           differs from a data byte in that the ninth bit is a “1” in an
transmitted for every character byte, as presented in             Address Byte and a “0” in a Data Byte.
Figure 47.
     Rev. 2.11
                                                               85


  XR88C681
An Address Byte, however, interrupts all “Slaves” so that          the programmed number of data bits, the Address/Data
each can examine the received byte to test if it (the              (A/D) flag bit; and the programmed STOP bit length. A/D
individual slave device) is being addressed. The receiver          = 0 indicates that the character is data, while A/D = 1
of the addressed slave will be enabled and will prepare for        identifies it as an address.
reception of the data bytes that follows. The slaves that
were not addressed will leaves their Receivers disabled,
                                                                   Transmitter Operation During Multi-Drop Mode
and will continue to ignore the data bytes that follows.
They will be interrupted again when the next address byte
is transmitted by the “Master Device”.                             The user/CPU controls the state of the transmitted
                                                                   character by programming MR1n[2] of the channel prior
H.2.2 DUART Multi-Drop Operation                                   to loading the data bits into the THR. Setting MR1n[2] =
                                                                   “0” results in A/D = “0” and setting MR1n[2] = “1” results in
A given channel, within the DUART is programmed into               A/D = “1”. Figure 48 presents a procedural flow diagram
the Multi-Drop mode by setting MR1n[4:3] = “1, 1”. In this         for transmitting characters (Address or Data), while in the
mode, a transmitted character consists of a START bit,             Multi-Drop Mode.
                                               START
                                      Invoke the “RESET MR
                                      POINTER” command.                             Set A/D Bit to “0”
                                      (Write 1xh to appropriate                (Write xxxxx0xx to MR1n
                                      Command Register)                                  Register)
                                          Set A/D Bit to “1”                   Transmit Data Character
                                         (Write xxxxx1xx to                          to Slave Device.
                                          MR1n Register)                       (Write Character to THRn)
                                        Transmit Address
                                    Character to Slave Device.
                                    (Write Character to THRn)
                                                                                    Are there More
                                                                                    Data Characters      Yes
                                                                                   to Write to Active
                                                                                     Slave Device?
                                     Invoke the “RESET MR
                                     POINTER” command.
                                     (Write 1xh to appropriate
                                     Command Register)
                                                                                               No
                       Figure 48. A Flow Diargam Depicting a Procedure That Can Be Used to
                                         Transmit Characters in the Multi-Drop Mode
      Rev. 2.11
                                                                86


                                                                                                    XR88C681
Receiver Operation During Multi-Drop Mode                            received characters are accessible to the CPU by reading
                                                                     the RHR. The state of the A/D flag bit is available at
When a channel has been programmed into the                          SRn[5], the Status Register bit normally used to indicate
Multi-Drop Mode, and the Receiver has been disabled (a               “Parity Error”. Therefore, in conjunction with receiver
typical configuration), the Receiver will load a character           each new character, the CPU should continue to monitor
into the RHR and set the RXRDY indicator (and/or                     SRn[5] in order to verify that it is a “0” (Data characters).
interrupt) if the A/D bit is “1” (Address flag). However, the
character will be discarded if its A/D bit is “0” (Data flag).       Once the “Target CPU” detects a new address character,
Therefore, in response to the RXRDY indicator, the CPU               SRn[5] =“1”, it should compare this address with its own.
should then read the received character and determine if             If the addresses do not match, then this CPU is not the
the address that it represents matches that of the CPU. If           intended recipient of the next block of data, and now
the Addresses do match, (indicating that it is the Target            should disable the Receiver. Figure 49 presents a flow
Slave), then the CPU should enable the Receiver, in                  diagram depicting a recommended procedure for
preparation for the subsequent blocks of data.                       handling received characters while in the Multi-Drop
                                                                     Mode.
Once the Receiver has been enabled the Receiver Serial
Data will be processed as in Normal Operation. The
                                    START
                                                                          Does
                                                                    Newly Received      No           Reject Character
                              Receiver is Disabled
                                                                    Address match
                            Channel is Commanded                    CPU Address                 Receiver remains Disabled
                            into Multi-Drop Mode.                           ?
                              MR1n[4:3] = [1, 1]
                                                                                  Yes
                                                                    Enable Receiver
                                                                   (Write x2h to the
                     No               Has                          Appropriate Channel
                               RXRDY Indicator                     Command Register)
                                 been asserted
                                       ?
                                                                 Read in Data Character
                                           Yes                         from RHR.
                                                                      Check SRn[5]
                               Read in Address
                           Character from RHRn
                                                                           Is the
                                                   No               New Character a     Yes
                                                                     Data Character
                                                                       SRn[5] = 1?
                    Figure 49. A Flow Diagram Depicting a Procedure That Can Be Used to Receive
                                                  Characters in the Multi-Drop Mode.
     Rev. 2.11
                                                                 87


  XR88C681
H.3 Standby Mode                                                  D Cannot operate in the Z-Mode
                                                                      This is due to lack of the -IACK, IEI, and IEO pins
The DUART may be placed in a standby mode to
conserve power when its operation is not required. Upon           D Cannot perform modem shaking functions
reset, the DUART will be in the “ACTIVE OPERATION”                    This is due to the lack of any CTS pins
mode. A “SET STANDBY MODE” command issued via
the channel A Command Register disables all clocks on             J. PROGRAMMING
the device except for the crystal oscillator, which
significantly reduces the operating current. In this mode         Operation of the DUART is programmed by writing control
that only functions which will operate correctly are reading      words into the appropriate registers, while operational
the input port, writing the output port and the “SET              feedback is provided by status registers which can be read
ACTIVE MODE” command. The latter, also invoked via                by the CPU. Register addressing is shown in .
the Channel A Command register, restores the device to            A hardware reset clears the contents of the SRn, IMR,
normal operation within 25 s. Resetting the transmitters          ISR, OPR, and OPCR registers and initializes the IVR to
and receivers and writing 00h into the IMR (Interrupt Mask        0F16. During operation, care should be exercised if the
Register) before going into the Standby mode is                   contents of control registers are to be changed, since
recommended to prevent any spurious interrupts from               certain changes may result in improper operation.
being generated. The chip should be reprogrammed after
the “SET ACTIVE MODE” command since register                      For Example:
contents are not guaranteed to remain stable during the           Changing the number of bits per character while data is
standby mode. Active operation can also be restored via           being received may result in reception of erroneous
hardware reset.                                                   character. In general, changes to registers which control
                                                                  receiver or transmitter operation should be made only
I. COMMENTS ABOUT THE XR88C681 IN 28 PIN                          while the transmitter or receiver are disabled, and certain
   DIP PACKAGE                                                    changes to the ACR should be made only when the C/T is
                                                                  stopped.
Much of this data sheet discussed features which are
available to the DUARTs which are packaged in the 40 pin          Mode, command, clock select, and status registers are
DIP or the 44 pin PLCC. However, because of the                   duplicated for each channel to provide total independent
reduced number of pins the DUARTs in the 28 pin                   operation. Table 29 through Table 41 summarizes the bit
package do not have the following features.                       assignments for each register.
REGISTER SUMMARY
      Bit 7          Bit 6           Bit 5           Bit 4           Bit 3           Bit 2           Bit 1         Bit 0
   Rx RTS        Rx Int Select    Error Mode     Parity Mode        Select          Parity          Number of Bits/Char.
    Control                                                                         Select
     0 = No       0=RXRDY          0= Char.             00 = With Parity           0 = Even                 00 = 5
    1 = Yes        1=FFULL         1= Block            01 = Force Parity           1 = Odd                  01 = 6
                                                         10 = No Parity                                     10 = 7
                                                     11 = Multi-Drop Mode                                   11 = 8
                                      Table 29. Mode Registers 1: MR1A, MR1B
     Rev. 2.11
                                                               88


                                                                                            XR88C681
   Bit 7           Bit 6           Bit 5           Bit 4       Bit 3            Bit 2           Bit 1            Bit 0
      Channel Mode               Tx RTS        CTS Enable                         Stop Bit Length
                                 Control            Tx
        00 = Normal               0 = No          0 = No             0h = 0.563                       8h = 1.563
      01 = Auto Echo              1 = Yes        1 = Yes             1h = 0.625                       9h = 1.625
      10 = Local Loop                                                2h = 0.688                       Ah = 1.688
     11 = Remote Loop                                                3h = 0.750                       Bh = 1.750
                                                                     4h = 0.813                       Ch = 1.813
                                                                     5h = 0.875                       Dh = 1.875
                                                                     6h = 0.938                       Eh = 1.938
                                                                     7h = 1.000                       Fh = 2.000
                                      Table 30. Mode Register 2: MR2A, MR2B
   Bit 7           Bit 6           Bit 5           Bit 4       Bit 3            Bit 2           Bit 1            Bit 0
                  Receiver Clock Select                                      Transmitter Clock Select
                        See Table 9                                                  See Table 9
                                 Table 31. Clock Select Registers: CSRA, CSRB
   Bit 7           Bit 6           Bit 5           Bit 4       Bit 3            Bit 2           Bit 1            Bit 0
               Miscellaneous Commands                           Enable/Disable Tx                Enable/Disable Rx
                  See Text in Section B.2.                       00 = No Change                   00 = No Change
                                                                  01 = Enable Tx                   01 = Enable Tx
                                                                  10 = Disable Tx                  10 = Disable Tx
                                                                 11 = Not Allowed                 11 = Not Allowed
                                                                   (Do Not Use)                     (Do Not Use)
                                     Table 32. Command Registers: CRA, CRB
   Bit 7           Bit 6           Bit 5           Bit 4       Bit 3            Bit 2           Bit 1            Bit 0
 Received        Framing       Parity Error     Overrun      TXEMT            TXRDY           FFULL            RXRDY
   Break           Error                          Error
  0 = No          0 = No          0 = No          0 = No      0 = No           0 = No          0 = No          0 = No
  1 = Yes         1 = Yes         1 = Yes        1 = Yes     1 = Yes          1 = Yes         1 = Yes          1 = Yes
                                       Table 33. Status Registers: SRA, SRB
   Bit 7           Bit 6           Bit 5           Bit 4       Bit 3            Bit 2           Bit 1            Bit 0
    OP7            OP6              OP5            OP4                  OP3                              OP2
 0=OPR[7]        0=OPR[6]       0=OPR[5]        0=OPR[4]            00 = OPR[3]                      00 = OPR[2]
1=TXRDYB       1=TXRDYA         1=RXRDY/       1=RXRDY/         01 = C/T #1 Output                01 = TXCA (16X)
                                 FFULLB          FFULLA           10 = TXCB (1X)                   10 = TXCA (1X)
                                                                  11 = RXCB (1X)                   11 = RXCA (1X)
                              Table 34. Output Port Configuration Register: OPCR
   Rev. 2.11
                                                          89


XR88C681
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
 BRG Set        Counter/Timer #1 Mode and Source          Delta IP3    Delta IP2  Delta IP1 Delta IP0
  Select                                                  Interrupt    Interrupt  Interrupt Interrupt
 0 = Set1                  See Table 7                     0 = OFF      0 = OFF    0 = OFF   0 = OFF
 1 = Set2                                                  1 = ON       1 = ON     1 = ON     1 = ON
                                Table 35. Auxiliary Control Register: ACR
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
 Delta IP3    Delta IP2     Delta IP1      Delta IP0          IP3          IP2        IP1       IP0
  0 = No       0 = No        0 = No          0 = No        0 = Low      0 = Low    0 = Low   0 = Low
  1 = Yes      1 = Yes       1 = Yes         1 = Yes       1 = High     1 = High   1 = High  1 = High
                           Table 36. Input Port Configuration Register , IPCR
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
Input Port   Delta Break    RXRDY/          TXRDYB       Counter #1   Delta Break  RXRDY/   TXRDYA
 Change           B         FFULLB                          Ready           A     FFULLA
  0 = No       0 = No        0 = No          0 = No         0 = No       0 = No     0 = No    0 = No
  1 = Yes      1 = Yes       1 = Yes         1 = Yes       1 = Yes      1 = Yes    1 = Yes   1 = Yes
                                  Table 37. Interrupt Status Register, ISR
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
Input Port   Delta Break    RXRDY/          TXRDYB       Counter #1   Delta Break  RXRDY/   TXRDYA
 Change           B         FFULLB                          Ready           A     FFULLA
  0 = Off      0 = Off       0 = Off         0 = Off        0 = Off      0 = Off    0 = Off   0 = Off
  1 = On       1 = On        1 = On          1 = On        1 = On       1 = On     1 = On    1 = On
                                   Table 38. Interrupt Mask Register, IMR
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
  C/T(15)      C/T(14)       C/T(13)         C/T(12)       C/T(11)      C/T(10)     C/T(9)    C/T(8)
                          Table 39. Counter/Timer Upper Byte Register, CTUR
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
  C/T(7)        C/T(6)        C/T(5)         C/T(4)         C/T(3)       C/T(2)     C/T(1)    C/T(0)
                          Table 40. Counter/Timer Lower Byte Register, CTLR
   Bit 7         Bit 6         Bit 5          Bit 4          Bit 3        Bit 2      Bit 1     Bit 0
  IVR(7)        IVR(6)        IVR(5)         IVR(4)         IVR(3)       IVR(2)     IVR(1)    IVR(0)
                                  Table 41. Interrupt Vector Register: IVR
   Rev. 2.11
                                                      90


                                                                                                          XR88C681
K. TIMING DIAGRAMS
                                                  2.0V                                         2.0V
                                     4.0V                            Test Levels
                                                  0.8V                                         0.8V
                               Figure 50. Input and Output Levels for Timing Measurements
Note: AC testing inputs are driven at 0.4V for a logic “0” and 2.4V for a logic “1” except for -40 to 85(C and -55 to 125(C, logic “1” shall
      be 2.6V. Timing measurements are made at 0.8V for a logic “0” and 2.0V for a logic “1”.
       RESET
                                                                     tRES
                                                     Figure 51. Reset Timing
    Rev. 2.11
                                                                  91


XR88C681
 A0 - A3
                  tAS                         tAH
     -CS
                                               tCH
                 tCS
                                                        tRWD
     -RD
                               tRW
                                tDD                 tDF
  D0 - D7                      NOT
           FLOAT                              VALID            FLOAT
  (Read)                      VALID
                                                         tRWD
    -WR
                                      tDS
                                                tDH
  D0 - D7
  (Write)                                VALID
                      Figure 52. XR88C681 Read and Write Cycle Timing
 Rev. 2.11
                                            92


                                                                    XR88C681
        -INTR
                                                        tIAH
       -IACK
                    tIAS
                                       tRW
          -RD
                          tEIS
                                    tDD           tDF
     D0 - D7
                       FLOAT          NOT    VECTOR          FLOAT
                                    VALID
           IEI
                        tDIO
           IEO          tEOD
               tDIO
                                                                        RESET IUS
                                                                        COMMAND
                      Figure 53. XR88C681 Z Mode Interrupt Cycle Timing
Rev. 2.11
                                         93


XR88C681
    -RD or
     -CS
                   tPS                                tPH
   IP0 - IP6
    -WR or
     -CS
  OP0 - OP7            OLD DATA                           NEW DATA
                                                 tPD
                          Figure 54. Port Timing
          -RD or
          -CS or
          -WR
                                                  tIR
         Interrupt
          Output
                          Figure 55. Interrupt Timing
 Rev. 2.11
                                    94


                                                                                  XR88C681
                     C1:   10pF + (Stray < 5pF)                        C1: 10 - 15pF + (Stray < 5pF)
                     C2:   10pF + (Stray < 5pF)                        C2: 0 - 5pF + (Stray < 5pF)
                     R1:   100ohm
                     R2:   100ohm
                                 R1
                                            X1                                            X1
          C1                                                       C1
                                             XR88C681                                       XR88C681
          C2                                                       C2
                                 R2
                                            X2                                            X2
              3.6864MHz                                                3.6864MHz
                   Parallel Resonant Crystal                          Parallel Resonant Crystal
                                                         tCLK
                                                         tCTC
       X1/CLK
                                                         tRTX
      C/T CLK
          RXC
          TXC
                                       tCLK
                                       tCTC
                                       tRTX
                                              Figure 56. Clock Timing
Rev. 2.11
                                                      95


XR88C681
                              1 Bit Time
              TXC          (1 or 16 Clocks)
             (Input)
                     tTXD
               TXD
                                 tTCS
           TXC
        (1X Output)
                           Figure 57. Transmitter Timing
            RXC
          1X Input)
                        tRXS              tRXH
              RXD
                              Figure 58. Receiver Timing
 Rev. 2.11
                                             96


                                                                                     XR88C681
             44 LEAD PLASTIC LEADED CHIP CARRIER
                                          (PLCC)
                                          Rev. 1.00
                       D                                                        C
                                                                                      Seating Plane
                      D1                                            45° x H1
                                                     45° x H2                            A2
                   2 1 44
                                                                                            B1
     D    D1                                                                                 B D
                                                    D3                                            2
                                                                                             e
                                                                                        R
                       D3
                                                                                  A1
                                                                                A
                                      INCHES                  MILLIMETERS
                  SYMBOL           MIN       MAX             MIN       MAX
                   A             0.165     0.180             4.19       4.57
                   A1            0.090     0.120             2.29       3.05
                   A2            0.020       ------.         0.51        ------
                   B             0.013     0.021             0.33       0.53
                   B1            0.026     0.032             0.66       0.81
                   C             0.008     0.013             0.19       0.32
                   D             0.685     0.695            17.40     17.65
                   D1            0.650     0.656            16.51     16.66
                   D2            0.590     0.630            14.99     16.00
                   D3                 0.500 typ.                12.70 typ.
                   e                  0.050 BSC                 1.27 BSC
                   H1            0.042     0.056             1.07       1.42
                   H2            0.042     0.048             1.07       1.22
                   R             0.025     0.045             0.64       1.14
                 Note: The control dimension is the inch column
Rev. 2.11
                                                 97


XR88C681
                     40 LEAD CERAMIC DUAL-IN-LINE
                                     (600 MIL CDIP)
                                            Rev. 1.00
                40                                                     21
                1                                                      20
                                                                                    E
                                     D                                              E1
 Base        A1
 Plane                                                                          A
Seating    L
 Plane
                                  e                                                    c
                   B                                     B1                       a
                                          INCHES                MILLIMETERS
                      SYMBOL           MIN      MAX            MIN        MAX
                       A             0.100     0.225            2.54       5.72
                       A1            0.015     0.075            0.38       1.91
                       B             0.014     0.026            0.36       0.66
                       B1            0.045     0.065            1.14       1.65
                       c             0.008     0.018            0.20       0.46
                       D             1.990     2.090          50.55       53.09
                       E1            0.550     0.610          13.97       15.49
                       E                  0.600 BSC                15.24 BSC
                       e                  0.100 BSC                 2.54 BSC
                       L             0.125     0.200            3.18       5.08
                       a                 0°       15°             0°        15°
                     Note: The control dimension is the inch column
  Rev. 2.11
                                                  98


                                                                               XR88C681
                 28 LEAD PLASTIC DUAL-IN-LINE
                                  (600 MIL PDIP)
                                         Rev. 1.00
              28                                             15
                                                                     E1
              1                                              14
                                    D                                              E
                                                                            A2
 Seating  A
  Plane   L                                                                           C
                                                                       A1       a
            B
                                   e                  B1                          eA
                                                                                  eB
                                       INCHES               MILLIMETERS
                  SYMBOL           MIN       MAX            MIN       MAX
                   A              0.160     0.250           4.06       6.35
                   A1             0.015     0.070           0.38       1.78
                   A2             0.125     0.195           3.18       4.95
                   B              0.014     0.024           0.36       0.56
                   B1             0.030     0.070           0.76       1.78
                   C              0.008     0.014           0.20       0.38
                   D              1.380     1.565          35.05      39.75
                   E              0.600     0.625          15.24      15.88
                   E1             0.485     0.580          12.32      14.73
                   e                 0.100 BSC                  2.54 BSC
                   eA                  0.600 BSC               15.24 BSC
                   eB             0.600     0.700          15.24      17.78
                   L              0.115     0.200           2.92       5.08
                   a                  0°      15°             0°        15°
                 Note: The control dimension is the inch column
Rev. 2.11
                                              99


     XR88C681
                       40 LEAD PLASTIC DUAL-IN-LINE
                                       (600 MIL PDIP)
                                               Rev. 1.00
                  40                                                            21
                                                                                   E1
                  1                                                             20
                                         D                                                  E
                                                                                      A2
Seating   A                                                                           A1
 Plane    L                                                                                   C
                                                                                         a
                     B
                                           e                    B1                         eA
                                                                                           eB
                                             INCHES              MILLIMETERS
                        SYMBOL           MIN       MAX           MIN       MAX
                         A             0.160      0.250          4.06       6.35
                         A1            0.015      0.070          0.38       1.78
                         A2            0.125      0.195          3.18       4.95
                         B             0.014      0.024          0.36       0.56
                         B1            0.030      0.070          0.76       1.78
                         C             0.008      0.014          0.20       0.38
                         D             1.980      2.095         50.29      53.21
                         E             0.600      0.625         15.24      15.88
                         E1            0.485      0.580         12.32      14.73
                         e                   0.100 BSC               2.54 BSC
                         eA                  0.600 BSC              15.24 BSC
                         eB            0.600      0.700         15.24      17.78
                         L             0.115      0.200          2.92       5.08
                         a                  0°      15°            0°        15°
                       Note: The control dimension is the inch column
        Rev. 2.11
                                                    100


                                                                                              XR88C681
                                                    Revision History
From Rev 2.10 to 2.11                   (June 2006) Corrected pinout on 28--pin PDIP package on page 3 (pin 1 is A0).
                                        Added Revision History.
                                                        NOTICE
EXAR Corporation reserves the right to make changes to the products contained in this publication in order to im-
prove design, performance or reliability. EXAR Corporation assumes no responsibility for the use of any circuits de-
scribed herein, conveys no license under any patent or other right, and makes no representation that the circuits are
free of patent infringement. Charts and schedules contained here in are only for illustration purposes and may vary
depending upon a user’s specific application. While the information in this publication has been carefully checked;
no responsibility, however, is assumed for inaccuracies.
EXAR Corporation does not recommend the use of any of its products in life support applications where the failure or
malfunction of the product can reasonably be expected to cause failure of the life support system or to significantly
affect its safety or effectiveness. Products are not authorized for use in such applications unless EXAR Corporation
receives, in writing, assurances to its satisfaction that: (a) the risk of injury or damage has been minimized; (b) the
user assumes all such risks; (c) potential liability of EXAR Corporation is adequately protected under the circum-
stances.
Copyright 2006 EXAR Corporation
Datasheet June 2006
Reproduction, in part or whole, without the prior written consent of EXAR Corporation is prohibited.
    Rev. 2.11
                                                            101


Mouser Electronics
Authorized Distributor
Click to View Pricing, Inventory, Delivery & Lifecycle Information:
MaxLinear:
 XR88C681J-F XR88C681CJ-F XR88C681CJTR-F XR88C681JTR-F
